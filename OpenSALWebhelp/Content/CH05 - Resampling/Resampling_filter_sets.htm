<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="4" MadCap:lastHeight="723" MadCap:lastWidth="654" MadCap:disableMasterStylesheet="true" MadCap:tocPath="About Resampling" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:liveHelp="ZBIsFXHTgZ1gBWmelDf+QvnBDpfKFvwPutiTUqUPXaJwUJlPvj3sqfVxmxYIlfksV6qkw2dRigLyj2Wuq9xGrkHsGI3Wn9tRpIcmXqE0lU4ISczOOvzepOGT220r6pRLOEQ4Mo3lRkEz+Y1vZ5FCqLVH+ncczzl78Nu7EQRLQgNgND5WXaCkUvzDKiZAJ5ePpQwPQZP3y3asTqZtYjwtKTL7U/zlKKNBsBfOQmQRxMk1pJX20dqIIXYO2YJxqzwCvMw16cuYPNU9+OBt4qUFmewOn0Fz6KSt1ZOJGzm5gQsemI4+PgJdShSni3awMPKQv7xf3fkC8BLMPPbjkKxBGi57lVZods+vwTthUoMZJXfm2W2HrLSDwgSp1jsoCZFETdkIOAblnnA0bfs2bDKkrcmcgJbzhegt+TtOFqeeYroOocJuZZOy7KErQ3OvyQhC2UO55FPN2an5NdskQhV7csjieyPaog5ZMc8pR7k2vdaBk88ToeBzYGEzFLI/7G3gifnO2VGuI5IJG1TGVKW1SGqu8/ebZCRssbY7bvchXJ33j7rcaGk9hNQ4QfOIPChgsVKUset/AR50uitj0enNVplIrF9CiOzsS0gBU56PkiDbbr4eKXuv2qKdmROMd2hHKRQIJkK3wWtxR08vbfZblWw8tZ18gj5KnB/t1HJpw2ZDZ36uVwIzL/JqHWE9CpseLqs1c9pbf2ggo3HSPIsB6ksWx9e5YtVR8Npjw0aBuotnE6SL0RzW3mdxQPGhvGaOgudRR+FwZiDoYk5DusIEYWRLGD7/9f0oJiePGzyL4j2AFJs8fVxBEtFzNko2dSctwnEQMhVh6ihbzfc53nz8dyh2senL77IJEhrsr65ZqHs3Jub6fAK1aoCIxK08V0rTJnO64Eb8AiIrqT131T5tIdTDgVReD0+QB9cfENlZ0rEfFQ4V6zsgBwkN4vzoCzj2RBYRhpD9wJNPz5ICGeoiPlEoMdPyMQsZihY5kuTWNJXjwEES9au09nANukj8QXcVlp1icdxxqzBbCdNEVduep5KSK6r3hm3mAqDFxv0pRKpe0aOPoEVCO1T2ygK04P3WVnpv21tLl+As2jFleTl66/8r2g/XWZPFK0vB+72Sr5lw6N82BHuAzriHNbZcN/nmHZ5Wgv2zLB/qGD0QA/EUv6qaM7VAp108vr7WqHyPXiCDs2GrHZptaKUMXDqRKyqxLT2THlYuOakhoGHbVoxBjy+8+vXkOKAhMQYXl5orEP8MZDbi2/D5z1EUhDmoE/SHpL0KarbrW9FUvM4uvGPTQdnhwr5REnrcAxufgpvnGKSIlIxLYC+Kv9fImkHFGJ/ZlDj+V4j7BOcod5VfG8Kr/A==" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" type="text/css" /><title>Resampling Filter Function and Polyphase Filter Sets</title>
        <link href="../Resources/TableStyles/o_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/p_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/p_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/Stylesheets/BookStyles.css" rel="stylesheet" type="text/css" />
        <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapLiveHelpUtilities.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapLiveHelpBody.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapAddCommentDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapReplyCommentDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapRegisterUserDialog.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../Default_CSH.htm#CH05 - Resampling/Resampling_filter_sets.htm" style="">Open topic with navigation</a>
        </p>
        <h1 style="page-break-before: auto;page-break-after: auto;"><a name="kanchor91"></a>Resampling Filter Function and Polyphase Filter Sets</h1>
        <p class="Body">The “centered” part of an OC or IC routine refers to positioning a continuous, real-valued (typically symmetric) resampling (or interpolation) filter function, such as a <code>sinc </code>function (sinc(x) = sin(px)/px).</p>
        <p class="Body">An idealized OC algorithm centers a continuous filter function exactly over each output point. This performs a dot-product computation between:</p>
        <ul>
            <li value="1">
                <p>The subsequence of uniformly spaced input points on either side of the output point </p>
                <p class="and" MadCap:autonum="- and -"><span class="autonumber"><span>- and -</span></span>&#160;</p>
            </li>
            <li value="2">The discretely sampled filter values that exactly correspond to these points</li>
        </ul>
        <p class="Body">So, for each output point, the centered filter is sampled at the same uniform rate as the input sequence. However, the filter <i>phase</i> is determined by the exact position of the output point that lies between adjacent input points within the uniformly spaced input sequence.</p>
        <h2><a name="Polyphas"></a><a name="kanchor92"></a>Polyphase Filter Sets</h2>
        <p class="Body">Because it is expensive to compute exact filter coefficients for every output point, a common alternative technique is to pre-compute a finite set of discrete filters, called a <i>polyphase filter set</i>. This way, each filter in the set corresponds to a unique fixed-width phase interval instead of an exact position within the uniformly sampled space. The SAL resampling function implements this technique.</p>
        <p class="Body">Together, all filters in the set effectively cover all possible phases of the continuous filter. The actual coefficients of any given discrete filter in the set are pre-computed, as though the center of the continuous filter was positioned exactly at the center of the corresponding phase interval of width 1/n.</p>
        <p class="Body">The number of filters in the polyphase filter set (n) corresponds to the required number of phase intervals of uniform width (1/n) between adjacent points in the uniform sequence. In general, the more filters in the filter set, the smaller the phase interval, and the greater the precision of the interpolation. When computing the i<sup>th</sup> filter {i = 0,1,…,n–1} in a given filter set, the center of the filter should exactly correspond to the fractional value, i/n. These values correspond to the center of each phase interval. </p>
        <p class="Body" style="page-break-after: avoid;">So, the phase intervals are defined as:</p>
        <p class="Body1">[i/n - 1/(2n), i/n + 1/(2n)) 								for i = {0,1,…,n-1}</p>
        <p class="Body"><a href="#Output-Centered_SAL_Resampling" target="" title="Output-centered SAL resampling" alt="Output-centered SAL resampling" class="MCXref_FigTabExam"><span style="color: DarkBlue;" class="mcFormatColor">Figure 4-1</span></a> and <a href="#Input-Centered_SAL_Resampling" target="" title="Input-centered SAL resampling" alt="Input-centered SAL resampling" class="MCXref_FigTabExam"><span style="color: DarkBlue;" class="mcFormatColor">Figure 4-2</span></a> illustrate polyphase sets of four filters.</p>
        <p class="Image">
            <img src="../Resources/Images/SAL_OC_resampling_553x619.jpg" style="width: 553; height: 619;" />
        </p>
        <p class="CaptionNumChap_Figure" MadCap:autonum="&lt;b&gt;Figure 4-1: &lt;/b&gt;"><span class="autonumber"><span><b>Figure 4-1: </b></span></span><a name="Output-Centered_SAL_Resampling"></a>Output-Centered SAL Resampling</p>
        <p class="Image">
            <img src="../Resources/Images/SAL_IC_resampling_557x624.jpg" style="width: 557; height: 624;" />
        </p>
        <p class="CaptionNumChap_Figure" MadCap:autonum="&lt;b&gt;Figure 4-2: &lt;/b&gt;"><span class="autonumber"><span><b>Figure 4-2: </b></span></span><a name="Input-Centered_SAL_Resampling"></a>Input-Centered SAL Resampling</p>
        <p class="Body">For each filter in the filter set, it is important that the discrete filter coefficients line up with the surrounding points in the uniform sequence.</p>
        <p class="Body">If <i>f</i>c(x) is a continuous, real-valued symmetric filter function defined in a neighborhood around its center x = <span style="font-family: serif;">0</span>, and ci = i/n is the center of the i<sup>th</sup> phase interval where i = {<span style="font-family: serif;">0</span>,1,…,n–1}, then the coefficients of the i<sup>th</sup> m-point polyphase filter (f<sub>i</sub>(x)) should be computed as:</p>
        <p class="Body1"><i>f</i><sub>i</sub>(k) = <i>f</i><sub>c</sub>(k–L–c<sub>i</sub>), where k = {0,1,…,m–1}, and L = floor(m–1)/2</p>
        <p class="Body">During the OC (IC) resampling computation, a filter is selected based on the particular phase interval where the current output (input) point is located. So, the phase error is, at most, equal to half the width of the phase interval.</p>
        <p class="Body">Even length filters are evenly divided, so that:</p>
        <ul>
            <li value="1">The left half of the filter is applied to points on the left of the reference point</li>
            <li value="2">The right half of the filter is applied to points on the right of the reference point</li>
        </ul>
        <p class="Body">For example, if m = 6, a reference map value of 17.7 results in the filter being applied to points 15, 16, 17, 18, 19, and 20 (zero-based). </p>
        <p class="Body">For odd length filters, the “extra” filter point is, by convention, applied to the left of the reference point. For example, if m = 7, a reference map value of 17.7 results in the filter being applied to points <b>14</b>, 15, 16, 17, 18, 19, and 20 (zero-based).</p>
        <p class="Body">The fractional part of the reference map value determines the filter. For example, suppose the number of filter phases (n) is 4. In the example above, the fractional part of the reference map value is 0.7. The value of c<sub>i</sub> = i/4 closest to 0.7 is c<sub>3</sub> = 3/4 for i=3. This means that filter 3 (the fourth filter) will be selected for this point.</p>
        <p class="Body"><a href="#Output-Centered_SAL_Resampling" target="" title="" alt="" class="MCXref_See_NoPrefix"><span style="color: DarkBlue;" class="mcFormatColor"><i>Output-Centered SAL Resampling</i></span></a> illustrates computing a particular output point. <a href="#Input-Centered_SAL_Resampling" target="" title="" alt="" class="MCXref_See_NoPrefix"><span style="color: DarkBlue;" class="mcFormatColor"><i>Input-Centered SAL Resampling</i></span></a>9 illustrates updating the set of output points that are modified by a given input point.</p>
        <h3><a name="kanchor93"></a>Constructing Polyphase Filter Sets</h3>
        <p class="Body">Constructing a polyphase filter set involves:</p>
        <ol>
            <li value="1">Preparing a pointer to the filter function</li>
            <li value="2">Determining the filter size</li>
            <li value="3">Creating the filter set</li>
        </ol>
        <p class="StepStart">To create a polyphase filter set:</p>
        <ol>
            <li value="1">Prepare a pointer to a continuous, real-valued (typically symmetric) filter function around x = <span style="font-family: serif;">0.0</span> (for example, sinc(x)).</li>
            <li value="2">Determine the size of each filter (m) and the number of filters (n). Typical values are m = 16 and n = 128.</li>
            <li value="3">Use the <a href="Resampling_functions.htm#resamp_make_filter_set">resamp_make_filter_set()</a> routine.</li>
        </ol>
        <h3><a name="Custom"></a><a name="kanchor94"></a>Custom Polyphase Filter Sets</h3>
        <p class="Body">To create polyphase filter sets, Mercury strongly recommends that you use the <a href="Resampling_functions.htm#resamp_make_filter_set">resamp_make_filter_set()</a> routine. However, if you decide to bypass the recommended routine and construct your own filter set, base it on the code shown in <a href="#Representative_Polyphase_Filter_Set_Function" target="" title="" alt="" class="MCXref_FigTabExam"><span style="color: DarkBlue;" class="mcFormatColor">Example 4-1</span></a>.</p>
        <p class="CaptionNumChap_Example" MadCap:autonum="&lt;b&gt;Example 4-1: &lt;/b&gt;"><span class="autonumber"><span><b>Example 4-1: </b></span></span><a name="Representative_Polyphase_Filter_Set_Function"></a>Representative Polyphase Filter Set Function</p>
        <table style="width: 500px;caption-side: top;mc-table-style: url('../Resources/TableStyles/o_Code.css');" class="TableStyle_o_Code" cellspacing="0">
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_o_Code_Body_0_0_RowEnd_ColEnd">
                        <p>SAL_i32 resamp_make_filter_set</p>
                        <p class="Code1">(	SAL_f64 (*filter_func) (double),										/* filter function */</p>
                        <p class="Code2">SAL_f32 *filter_set,								/* 2D filter set: */</p>
                        <p class="Code2">/*(num_filters * filter_len) */</p>
                        <p class="Code2">SAL_i32 filter_len,								/* common length of each filter */</p>
                        <p class="Code2">SAL_i32 num_filters) 								/* number of filters */</p>
                        <p>{ 	SAL_i32 i, j;</p>
                        <p class="Code1">SAL_f64 left_offset, phase_interval, x;</p>
                        <p class="Code1">left_offset = -(double) ((filter_len – 1)/2);</p>
                        <p class="Code1">/* calculate width of phase interval: */</p>
                        <p class="Code1">phase_interval = (double)1.0 / (double)num_filters;</p>
                        <p class="Code1">/* calculate leftmost sample position for each filter: */</p>
                        <p class="Code1">for ( i = 0; i &lt; num_filters; i++ )</p>
                        <p class="Code1">{</p>
                        <p class="Code2">x = left_offset – ((double)i * phase_interval);</p>
                        <p class="Code2">/* invoke scalar filter function for each filter point: */</p>
                        <p class="Code2">for ( j = 0; j &lt; filter_len; j++ )</p>
                        <p class="Code2">{</p>
                        <p class="Code3">*filter_set++ = (float) (*filter_func) (x);</p>
                        <p class="Code3">x += (double)1.0;							/* next discrete coefficient */</p>
                        <p class="Code2">}</p>
                        <p class="Code1">}</p>
                        <p class="Code1">return SAL_SUCCESS;</p>
                        <p>}</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p class="Body"><a href="#Scalar_filter_function_as_first_argument" target="" title="" alt="" class="MCXref_FigTabExam"><span style="color: DarkBlue;" class="mcFormatColor">Example 4-2</span></a> shows an example of a scalar filter function that is the first argument of the <a href="Resampling_functions.htm#resamp_make_filter_set">resamp_make_filter_set()</a> routine (sinc(x) = sin(πx)/πx).</p>
        <p class="CaptionNumChap_Example" MadCap:autonum="&lt;b&gt;Example 4-2: &lt;/b&gt;"><span class="autonumber"><span><b>Example 4-2: </b></span></span><a name="Scalar_filter_function_as_first_argument"></a>Scalar filter function as first argument of <a href="Resampling_functions.htm#resamp_make_filter_set">resamp_make_filter_set()</a></p>
        <table style="mc-table-style: url('../Resources/TableStyles/o_Code.css');width: 500px;" class="TableStyle_o_Code" cellspacing="0">
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_o_Code_Body_0_0_RowEnd_ColEnd">
                        <p>#define PI  3.14159265358979323846</p>
                        <p>SAL_f64 sinc (SAL_f64 x)</p>
                        <p class="Code1">{ return ((x == 0.0) ? 1.0 : sin(PI*x)/(PI*x)); }</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script><iframe id="topiccomments" name="topiccomments" title="Topic Comments" src="../../Skin/TopicComments.htm" frameborder="0" style="width: 100%; height: 0px; margin-top: 12px;"></iframe>
    </body>
</html>