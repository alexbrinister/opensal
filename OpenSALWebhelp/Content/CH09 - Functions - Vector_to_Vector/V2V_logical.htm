<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="3" MadCap:lastHeight="747" MadCap:lastWidth="654" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Functions - Vector-to-Vector" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:liveHelp="jFBjfXUcx4YCE48zks7joAmTm714MsmxyN+sprSvvTyZM3giP4QXFXXE39Z5vGWyEaiITnB26rTDgHqzBLMCmA9rZNCC0iwf8JFbX5JT6/NZde0IqCSqw+UxwBguCEH619qu91i8UAyiZOa4xqCClleb+SIAwIh4jwhBmv698pya7LwQDrpwvJi0HDFXcrbo7KQmD0Ctn3mjzMO6qiaXoonncSh5kL98eiAC6T8hOIbN3cJPmQ60etbGPjlK5TTkfQIETSaNyqR7LsaPwxPH6JudkfxhCrYLrGiaeRdqEfL6vRyQ7cskvPoIOBvN+EtbHFFn0Vl6QkDJUvWJBxpSLXeYsJXmP0E1YfinKa+QvQNL5RjiG+ux1RiAf2TyLKSbwrTWucpQbOaW/XCbH1apCmJFKvbpBZpkDzpDfbmo1QfB/1qfKppePRtZEM1vYAWZJW/Qb/7Xk8HrUxu6wpsxKI8JP9lxyAeSSaK6UlVXhuQwK9l4NqX9EV2Kp3XKGzda3XKxI/cXciWV8m7YOAa0zZItZH5hDuYVyOKVOAbpT/KXP87RxBrdpvHkrG0b7E9euTbi7Y9UdF5J24fUHe9YoKVv7Mgbh7DDB8pZ8NdZFEHPNHroxwLSX/rn/Hn4PMrBmaFalmY8QC8FBxRn2lC0VQSC3gZLEBgD5VlCwWeS9pAnz1JwNLCHmNnzEu1jryQ4a4GqeNLn61urS1x+RuCfXy5CsaatLYBjYxWrqQjPP0gmta0UfZyErAQ+3MKjyYVQbPkNbsC+KHi9Y7l1RRA0e4Hq06OzhWZmy87T/NjT5ynBidXZan8UFBWV8b61skyBO1l9wMjlPhfyVsFV+0cwbDlR73asCZg9Vr1UCFkjqwWKntlFBCR+So/XsGkO1ScfQLxmg1HYezbQWLdR1evaA07R+UtGkukAifZID6ZxJUS1ZcpWSjqDYbq5VoubHjUz8Zg118prM7xQ4teBFp/DbM3KLBmzzXmeufzkI+Kid9NzuFaNd8wlmPTccYsFLWCC" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" type="text/css" /><title>Vector-to-Vector Logical Functions</title>
        <link href="../Resources/TableStyles/o_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/o_Basic.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/p_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/p_Basic.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/Stylesheets/BookStyles.css" rel="stylesheet" type="text/css" />
        <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapLiveHelpUtilities.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapLiveHelpBody.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapAddCommentDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapReplyCommentDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapRegisterUserDialog.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../Default_CSH.htm#CH09 - Functions - Vector_to_Vector/V2V_logical.htm" style="">Open topic with navigation</a>
        </p>
        <h1><a name="kanchor705"></a>Vector-to-Vector Logical Functions</h1>
        <p class="Body">Vector-to-vector logical functions perform logical operations between two vectors, outputting the result in a third vector. They perform element-to-element bitwise logical operations such as AND, OR, and exclusive NOR between two vectors.</p>
        <p class="CaptionNumChap_Table" MadCap:autonum="&lt;b&gt;Table 8-5: &lt;/b&gt;"><span class="autonumber"><span><b>Table 8-5: </b></span></span>Vector-to-Vector Logical Functions</p>
        <table style="caption-side: top;width: 500px;mc-table-style: url('../Resources/TableStyles/o_Basic.css');" class="TableStyle_o_Basic" cellspacing="0">
            <col style="width: 82px;" />
            <col style="width: 311px;" />
            <thead>
                <tr>
                    <th class="TableStyle_o_Basic_Head_0_0_RowSep_ColSep">Function</th>
                    <th class="TableStyle_o_Basic_Head_0_0_RowSep_ColEnd">Description</th>
                </tr>
            </thead>
            <tr>
                <td class="TableStyle_o_Basic_Body_0_0_RowSep_ColSep"><a href="#vandix">vandix</a>
                </td>
                <td class="TableStyle_o_Basic_Body_0_0_RowSep_ColEnd">Vector AND, 32-bit logical</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Basic_Body_0_0_RowSep_ColSep"><a href="#veqvix">veqvix</a>
                </td>
                <td class="TableStyle_o_Basic_Body_0_0_RowSep_ColEnd">Vector equivalence (XNOR), 32-bit logical</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Basic_Body_0_0_RowSep_ColSep"><a href="#vorix">vorix</a>
                </td>
                <td class="TableStyle_o_Basic_Body_0_0_RowSep_ColEnd">Vector OR, 32-bit logical</td>
            </tr>
        </table>
        <h2><a name="kanchor706"></a>Vector AND, 32-bit Logical</h2>
        <p class="API_name"><a name="vandix"></a><a name="kanchor707"></a>vandix()</p>
        <p class="Image">
            <img src="../Resources/Images/SAL_funct_equat_151.jpg" />
        </p>
        <p class="API_heads">Syntax</p>
        <table style="caption-side: top;width: 500px;mc-table-style: url('../Resources/TableStyles/o_Code.css');" class="TableStyle_o_Code" cellspacing="0">
            <col style="width: 55px;" />
            <col style="width: 129px;" />
            <col style="width: 315px;" />
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>vandix</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 i,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* address stride for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 *B,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 j,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* address stride for B */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* address stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element count (32-bit elements) */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
        </table>
        <p class="API_heads">Description</p>
        <p class="Body">The vandix() function computes the bitwise logical ANDs of vectors <i>A</i> and <i>B</i>.</p>
        <h2 style="page-break-before: always;page-break-after: auto;margin-left: 0.5in;"><a name="kanchor708"></a>Vector Equivalence (Exclusive NOR), 32-bit Logical</h2>
        <p class="API_name"><a name="veqvix"></a><a name="kanchor709"></a>veqvix()</p>
        <p class="Image">
            <img src="../Resources/Images/SAL_funct_equat_150.jpg" />
        </p>
        <p class="API_heads">Syntax</p>
        <table style="caption-side: top;width: 500px;mc-table-style: url('../Resources/TableStyles/o_Code.css');" class="TableStyle_o_Code" cellspacing="0">
            <col style="width: 55px;" />
            <col style="width: 153px;" />
            <col style="width: 293px;" />
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>veqvix</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 i,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element stride for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 *B,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 j,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element stride for B */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element count (32-bit elements) */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
        </table>
        <p class="API_heads">Description</p>
        <p class="Body">The veqvix() function outputs the bitwise logical equivalence, exclusive NOR, of the integers of vectors <i>A</i> and <i>B</i>. For each pair of input values, each bit position is compared. The veqvix() function sets a bit position in the output value if both input values have that bit position set, or if both have the bit position clear.</p>
        <h2 style="page-break-before: always;page-break-after: auto;margin-left: 0.5in;"><a name="kanchor710"></a>Vector OR, 32-bit Logical</h2>
        <p class="API_name"><a name="vorix"></a><a name="kanchor711"></a>vorix()</p>
        <p class="Image">
            <img src="../Resources/Images/SAL_funct_equat_149.jpg" />
        </p>
        <p class="API_heads">Syntax</p>
        <table style="width: 500px;caption-side: top;mc-table-style: url('../Resources/TableStyles/o_Code.css');" class="TableStyle_o_Code" cellspacing="0">
            <col style="width: 55px;" />
            <col style="width: 158px;" />
            <col style="width: 287px;" />
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>vorix</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 i,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* address stride for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 *B,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 j,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* address stride for B */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* address stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element count (32-bit elements) */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
        </table>
        <p class="API_heads">Description</p>
        <p class="Body">The vorix() function computes the bitwise logical ORs of the 32-bit integer inputs from vectors <i>A</i> and <i>B</i>.</p>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script><iframe id="topiccomments" name="topiccomments" title="Topic Comments" src="../../Skin/TopicComments.htm" frameborder="0" style="width: 100%; height: 0px; margin-top: 12px;"></iframe>
    </body>
</html>