<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="4" MadCap:lastHeight="745" MadCap:lastWidth="654" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Functions - Data Conversion" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:liveHelp="jTVvCJ+P+X0avGtfv7gN8PXMoPkFvXEPw8n9SJJRi6WvVHszALQEjAINqTiujMEmrpc0CLMlqHq7FOXCpF7I343xM9KJweVVRgwpXmV4F//u8mV5sBNmDoTPPI5xk2NxL/jjqj02KB8WMfI1oA7FX0YAP0BNkRPJBxEGJjLRrFYykSZAd4pbmev3m3H+Fk6HoJfDBWEg8mB5pzQ5DzJXJ2VQDvogO2q8Ulr8aVUb3Vpxk2+9Fvwga9rpqLYhjpHMNWEM+3qoLsFyDUwM5Q70YxThfKpGrVdgKMWM2/TYl3z2XlQnTVjSuDfXaom35ByWVBrl+QEzg8gHiKUnIP5Z/z0WpSk2/TcbLv1wG4owHzwutHWr+1y44pM9oPRsK5pdnWTZMK3JW812NsPJmdwmJKhAXD8/MS+y14xByK0cE3FpZGX9eZUhAVRTxbHWkNOHhlX3PNAtTXWgNLtZYK2I+S38xkPQfgX+vQ9Uq7ZhfT1tpe/gkDc6ZD3m+2LRV7SEOIqUq0tB4cATtGSng1qEzyeQJqAwMNWIUThAW0UFZLrVZSzd2CzgikIY0XebKD/JrxtwXuefgUaZYn9m91VNgd2lJCVO7Ek2nyNgL2wq6QrvPeIL6DWvZyYZUxtFsOZJI2QDmmacTFsm/5ax4NIzQSPAjQPfjveK04Y2PxIB+XWRdpv2mj0EmhD/T5ifvCF9I5vhUIztb0exCRYpqDNCZBmzlY/N2O06H4wrucHgiKFMyeJxJakejAOKTMRBOkH2lgrySgNRM4BRK33+TxaqU2Nd5/sndDue79HIBgMDLScVOMYzcoukJo3Dr3De1xcHH9+M1AQhJi5mM3a9+xd5ZGC3mdPTyy+cP3Tnpun77N4C+Aa01BRqG+LOxlK35ZeY3jzBDW6vnhBsZYRKBC3OFhJNas3GNEbchuEiFZ7tZQtQJaife6ctcSyBymvZOZ0335ArArtm4OE0MDLWjr0eA+5nFhbCQa8imjaBZX6KVlW3g2Eq5CRpfL1T4tC4++uH" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" type="text/css" /><title>Double Precision Conversion Functions</title>
        <link href="../Resources/TableStyles/o_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/o_Basic.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/p_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/p_Basic.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/Stylesheets/BookStyles.css" rel="stylesheet" type="text/css" />
        <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapLiveHelpUtilities.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapLiveHelpBody.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapAddCommentDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapReplyCommentDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapRegisterUserDialog.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../Default_CSH.htm#CH06 - Functions - Data Conversion/Double_precision.htm" style="">Open topic with navigation</a>
        </p>
        <h1><a name="top"></a><a name="kanchor151"></a>Double Precision Conversion Functions</h1>
        <p class="Body">Double precision conversion functions convert double precision data to integer, float, and complex data.</p>
        <p class="CaptionNumChap_Table" MadCap:autonum="&lt;b&gt;Table 5-3: &lt;/b&gt;"><span class="autonumber"><span><b>Table 5-3: </b></span></span>Double Precision Conversion Functions</p>
        <table style="caption-side: top;width: 500px;mc-table-style: url('../Resources/TableStyles/o_Basic.css');" class="TableStyle_o_Basic" cellspacing="0">
            <col style="width: 139px;">
            </col>
            <col style="width: 80px;">
            </col>
            <col style="width: 208px;">
            </col>
            <thead>
                <tr>
                    <th class="TableStyle_o_Basic_Head_0_0_RowSep_ColSep">Convert Double to</th>
                    <th class="TableStyle_o_Basic_Head_0_0_RowSep_ColSep">Function</th>
                    <th class="TableStyle_o_Basic_Head_0_0_RowSep_ColEnd">Description</th>
                </tr>
            </thead>
            <tr>
                <td class="TableStyle_o_Basic_Body_0_0_RowSep_ColSep" rowspan="2">Integer 8-bit</td>
                <td class="TableStyle_o_Basic_Body_0_0_RowSep_ColSep"><a href="#fixpixadx">fixpixadx</a>
                </td>
                <td class="TableStyle_o_Basic_Body_0_0_RowSep_ColEnd">Fix pixel vector, low-high format</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Basic_Body_0_0_RowSep_ColSep"><a href="#fixpixbdx">fixpixbdx</a>
                </td>
                <td class="TableStyle_o_Basic_Body_0_0_RowSep_ColEnd">Fix pixel vector, high-low format</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Basic_Body_0_0_RowSep_ColSep" rowspan="2">Integer 16-bit</td>
                <td class="TableStyle_o_Basic_Body_0_0_RowSep_ColSep"><a href="#vfixdx">vfixdx</a>
                </td>
                <td class="TableStyle_o_Basic_Body_0_0_RowSep_ColEnd">Vector double to short</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Basic_Body_0_0_RowSep_ColSep"><a href="#vfixrdx">vfixrdx</a>
                </td>
                <td class="TableStyle_o_Basic_Body_0_0_RowSep_ColEnd">Vector double to short, and round</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Basic_Body_0_0_RowSep_ColSep" rowspan="3">Integer 32-bit</td>
                <td class="TableStyle_o_Basic_Body_0_0_RowSep_ColSep"><a href="#vfix32dx">vfix32dx</a>
                </td>
                <td class="TableStyle_o_Basic_Body_0_0_RowSep_ColEnd">Vector double to integer (see <a href="../AppD - Legacy Functions/Vector Real to 16 or 32.htm#vfix32x" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>vfix32x(), vfix32dx(), vintx(), vint2x()</i></span></a>)</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Basic_Body_0_0_RowSep_ColSep"><a href="#vfixr32dx">vfixr32dx</a>
                </td>
                <td class="TableStyle_o_Basic_Body_0_0_RowSep_ColEnd">Vector double to integer, round</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Basic_Body_0_0_RowSep_ColSep"><a href="#vscaldx">vscaldx</a>
                </td>
                <td class="TableStyle_o_Basic_Body_0_0_RowSep_ColEnd">Vector scale and fix</td>
            </tr>
        </table>
        <h2><a name="kanchor152"></a>Fixed Pixels, Low-High Format</h2>
        <p class="API_name"><a name="fixpixadx"></a><a name="kanchor153"></a>fixpixadx()</p>
        <p class="Image">
            <img src="../Resources/Images/SAL_funct_equat_09_426x25.jpg" style="width: 426; height: 25;" />
        </p>
        <p class="API_heads">Syntax</p>
        <table style="width: 500px;caption-side: top;mc-table-style: url('../Resources/TableStyles/o_Code.css');" class="TableStyle_o_Code" cellspacing="0">
            <col style="width: 54px;" />
            <col />
            <col />
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>fixpixadx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f64 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 i,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* address stride for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui8 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* double-precision input count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
        </table>
        <p class="API_heads">Description</p>
        <p class="Body">The fixpixadx() function converts two 64-bit elements at a time, packing pairs of 8-bit results into single 16-bit locations.</p>
        <p class="Body"><a href="Float.htm#vconvert_f32_u8x">F</a>or a similar conversion of float data, use <a href="Float.htm#vconvert_f32_u8x">vconvert_f32_u8x()</a>.</p>
        <p class="RelatedFunctions" MadCap:autonum="Related Functions"><span class="autonumber"><span>Related Functions</span></span>&#160;</p>
        <p class="Body"><a href="Float.htm#vconvert_f32_u8x" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>vconvert_f32_u8x(), vconvert_f32_u16x(), vconvert_f32_u32x()</i></span></a>
        </p>
        <h2><a name="kanchor154"></a>Fixed Pixels, High-Low Format</h2>
        <p class="API_name"><a name="fixpixbdx"></a><a name="kanchor155"></a>fixpixbdx()</p>
        <p class="Image">
            <img src="../Resources/Images/SAL_funct_equat_06_421x25.jpg" style="width: 421; height: 25;">
            </img>
        </p>
        <p class="API_heads">Syntax</p>
        <table style="width: 500px;caption-side: top;mc-table-style: url('../Resources/TableStyles/o_Code.css');" class="TableStyle_o_Code" cellspacing="0">
            <col />
            <col />
            <col />
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>fixpixbdx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f64 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 I,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* address stride for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui8 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* double-precision input count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
        </table>
        <p class="API_heads">Description</p>
        <p class="Body">The fixpixbdx() function converts real vector elements to packed, unsigned 8-bit integers in a high-low format. The fixpixbdx() function converts two 64-bit elements at a time, packing pairs of 8-bit results into single 16-bit locations.</p>
        <p class="RelatedFunctions" MadCap:autonum="Related Functions"><span class="autonumber"><span>Related Functions</span></span>&#160;</p>
        <p class="Body"><a href="Float.htm#fixpixbx" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>fixpixbx()</i></span></a>
        </p>
        <h2><a name="kanchor156"></a>Vector Double to Real Convert</h2>
        <p class="API_name"><a name="vdpspx"></a><a name="kanchor157"></a>vdpspx()</p>
        <p class="Image">
            <img src="../Resources/Images/SAL_funct_equat_10_274x30.jpg" style="width: 274; height: 30;" />
        </p>
        <p class="API_heads">Syntax</p>
        <table style="width: 500px;caption-side: top;mc-table-style: url('../Resources/TableStyles/o_Code.css');" class="TableStyle_o_Code" cellspacing="0">
            <col style="width: 56px;" />
            <col />
            <col />
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>vdpspx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f64 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 i,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element stride for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* real output count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
        </table>
        <p class="API_heads">Description</p>
        <p class="Body">The vdpspx() function converts double-precision vector <i>A </i>to real values.</p>
        <h2><a name="kanchor158"></a>Vector Double to Short Convert</h2>
        <p class="API_name"><a name="vfixdx"></a><a name="kanchor159"></a>vfixdx(), <a name="vfixrdx"></a><a name="kanchor160"></a>vfixrdx()</p>
        <p class="Image">
            <img src="../Resources/Images/SAL_funct_equat_12_325x67.jpg" style="width: 325; height: 67;" />
        </p>
        <p class="API_heads">Syntax</p>
        <table style="caption-side: top;width: 500px;mc-table-style: url('../Resources/TableStyles/o_Code.css');" class="TableStyle_o_Code" cellspacing="0">
            <col style="width: 55px;" />
            <col style="width: 134px;" />
            <col />
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>vfixdx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f64 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 i,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element stride for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i16 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* double-precision input count, must be even */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>vfixrdx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f64 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 I,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element stride for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i16 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* double-precision input count, must be even */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
        </table>
        <p class="API_heads">Description</p>
        <p class="Body">The vfixdx() and vfixrdx() functions convert real values from vector <i>A </i>to 16-bit signed integers. </p>
        <p class="Body">The vfixdx() function ignores fractional parts of vector <i>A </i>and rounds toward zero. </p>
        <p class="Body">The vfixrdx() function rounds results according to the current processor current rounding mode.</p>
        <p class="Body">These functions operate on two real inputs at a time, convert both to integers, and pack the integers into a 32-bit location. The functions convert input values ranging from –32,768 to 32,767, inclusive. Results for input values outside of this range are undefined.</p>
        <h2><a name="kanchor161"></a>Vector Real to 32-bit Integer Convert with Rounding</h2>
        <p class="API_name"><a name="vfixr32dx"></a><a name="kanchor162"></a>vfixr32dx()</p>
        <p class="Image">
            <img src="../Resources/Images/SAL_funct_equat_11_233x25.jpg" style="width: 233; height: 25;" />
        </p>
        <p class="API_heads">Syntax</p>
        <table style="width: 500px;caption-side: top;mc-table-style: url('../Resources/TableStyles/o_Code.css');" class="TableStyle_o_Code" cellspacing="0">
            <col />
            <col />
            <col />
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>vfixr32dx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f64 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 I,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element stride for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* double-precision input count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
        </table>
        <p class="API_heads">Description</p>
        <p class="Body">The vfixr32dx() function converts real values from vector A to 32-bit signed integers and rounds results according to the current processor rounding mode.</p>
        <p class="Body">This function converts input values ranging from –2,147,483,648 to 2,147,483,647 inclusive. Results for input values outside of these ranges are undefined.</p>
        <p class="RelatedFunctions" MadCap:autonum="Related Functions"><span class="autonumber"><span>Related Functions</span></span>&#160;</p>
        <p class="Body"><a href="Float.htm#vfixr32x" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>vfixr32x()</i></span></a>
        </p>
        <h2><a name="kanchor163"></a>Vector Scale and Fix</h2>
        <p class="API_name"><a name="vscaldx"></a><a name="kanchor164"></a>vscaldx()</p>
        <p class="Image">
            <img src="../Resources/Images/SAL_funct_equat_07_286x31.jpg" style="width: 286; height: 31;" />
        </p>
        <p class="API_heads">Syntax</p>
        <table style="width: 500px;caption-side: top;mc-table-style: url('../Resources/TableStyles/o_Code.css');" class="TableStyle_o_Code" cellspacing="0">
            <col style="width: 56px;" />
            <col style="width: 132px;" />
            <col />
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void vscaldx(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f64 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 i,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* address stride for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f64 *b,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input scalar */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* address stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* double-precision element count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 p,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* precision of output integers (bits), 2 &lt;= p &lt;= 32 */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
        </table>
        <p class="API_heads">Description</p>
        <p class="BodyLeadIn">The vscaldx() function scales and fixes vector <i>A </i>by:</p>
        <ul>
            <li value="1">Scaling each element of <i>A</i> by the largest power of 2 so that, after being multiplied by the magnitude of scalar <i>b</i> and truncated, the result can be expressed as a two's complement integer using <i>p</i> bits.</li>
            <li value="2">Truncating scaled elements to signed 32-bit integers.</li>
        </ul>
        <p class="Body">For example, if scalar <i>b</i> equals the element of vector <i>A</i> with the greatest magnitude, every output value falls between –2.0**(<i>p</i>–1) and 2.0**(<i>p</i>–1).</p>
        <p class="RelatedFunctions" MadCap:autonum="Related Functions"><span class="autonumber"><span>Related Functions</span></span>&#160;</p>
        <p class="Body"><a href="Float.htm#vscalx" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>vscalx()</i></span></a>
        </p>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script><iframe id="topiccomments" name="topiccomments" title="Topic Comments" src="../../Skin/TopicComments.htm" frameborder="0" style="width: 100%; height: 0px; margin-top: 12px;"></iframe>
    </body>
</html>