<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="3" MadCap:lastHeight="766" MadCap:lastWidth="654" MadCap:disableMasterStylesheet="true" MadCap:tocPath="" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:liveHelp="WdKhpjyHNnYE4ZZ0uAwQmOCIQACkHeut454Ms4Cx15jHZdFLKzeRjPwJdkx80FVotAyV0qDxDyZzPJjoU4z5GiC3pRcmYYsA4A/iTgdGe+YdBZIvuqYmmSVverCM2rObDQ3GkrKn+DT6QLDzo8g1tL8hSx3jrnUwwhaj3sEXjLq/S6Jf+CT2ecsn7/hTqs2M89WLmqhjC5FLMpY05xqhuXCRDW3iCIwjxYIpG426gaY2a6ZdKh0rBNOIxFO8ju9G5Qi3SxJeQQAfe6ii4wldZzYnH40uEiP61doPAWgG3LTIDB4yEeou/VzSfLlSxPxKhXcaHlCmEb8bkHNa9ncvpYjd9WurzLUSW4yj5vrMP+tArKxdtqZWNbqjubemKFn4/AYOtBZYGnkRlrxV1a1TXOkTbDAUpYuyVuD34FceqR27lA/XXm25/0KUTxNroE2I3fFDKfEk9A0w5R4MOhoaqtJs28ThTJY3cNPuaNbG/VRDHR3R7fsCvdiwCn134MZqd+LFqfANY5v2+uf4ehZcyNDw8biSytNwQeQ86Hq1b3KQkKiWyd0ncLRlFFBFLMPkizop4dzgKZG7QBl/dypsj94+t66IBuSuMxCRmF3Ty9GxrVSbq88VVKO/98c3BYBsT7UoL77PioKTJXclfQykRMP80GOhDHUlrUUr5RZ8aBp1l1P9Sf5g4AUKh1uIE/+6tOLFXs9q0JDGKfMBUY1g8YgPzz97Ff8z18oLZDux6a3p2PsdxGgak/Vca2X9X5RUG47MmKX7C/15rcxNiU55lH2UN0ObX+OghL1zUXcCq4xq6yRyWfzFF4aqhIWW92XQrMAmBRkniCHcCeQbz48xtbqbGNpC91bk+uYYrRJi1Ik6fnvkLgGzGTIAufaMh49x3QbP+SwXt9vEpKizYtkv9DYXUjc0Yb7vh+KV/ML1tYDxfi3C9DaCOhKBKjEH6IIy/AJqMqYc7ArvvnQNYaRQH8ts935qYBeCXrg+VCbZtkp/7BfHYbMJGZP/MWkpbAHU" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" type="text/css" /><title>Multiple Dot Products</title>
        <link href="../Resources/TableStyles/o_Note.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/o_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/p_Note.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/p_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/Stylesheets/BookStyles.css" rel="stylesheet" type="text/css" />
        <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapLiveHelpUtilities.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapLiveHelpBody.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapAddCommentDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapReplyCommentDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapRegisterUserDialog.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../Default_CSH.htm#AppD - Legacy Functions/Multiple Dot Products.htm" style="">Open topic with navigation</a>
        </p>
        <h2><a name="kanchor1287"></a>Multiple Dot Products</h2>
        <p class="API_name"><a name="dotprmx"></a>dotprmx(), <a name="cdotprmx"></a>cdotprmx(), <a name="zdotprmx"></a>zdotprmx()</p>
        <p class="Image">
            <img src="../Resources/Images/SAL_funct_equat_205.jpg" />
        </p>
        <p class="API_heads">Synopsis</p>
        <table style="width: 500px;caption-side: top;mc-table-style: url('../Resources/TableStyles/o_Code.css');" class="TableStyle_o_Code" cellspacing="0">
            <col style="width: 54px;" />
            <col style="width: 128px;" />
            <col style="width: 318px;" />
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>dotprmx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* left input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 tca,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* total columns in A; tca &gt;= N */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *B,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* right input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 tcb,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* total columns in B; tcb &gt;= N */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 tcc,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* total columns in C; tcc &gt;= nrb */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 nra,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* number of rows in A (= number of rows in C ) */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 nrb,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* number of rows in B (= number of cols in C ) */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* dot product length (= tca and B ) */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* conjugation &amp; accumulation flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 xflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>cdotprmx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* left input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 tca,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* total columns in A; tca &gt;= N */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *B,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* right input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 tcb,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* total columns in B; tcb &gt;= N */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 tcc,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* total columns in C; tcc &gt;= nrb */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 nra,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* number of rows in A (= number of rows in C ) */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 nrb,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* number of rows in B (= number of cols in C ) */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* dot product length (= number of cols in A and B) */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* conjugation &amp; accumulation flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 xflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>zdotprmx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* left input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 tca,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* total columns in A; tca &gt;= N */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *B,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* right input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 tcb,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* total columns in B; tcb &gt;= N */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 tcc,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* total columns in C; tcc &gt;= nrb */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 nra,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* number of rows in A (= number of rows in C ) */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 nrb,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* number of rows in B (= number of cols in C ) */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* dot product length (= no. of cols in A and B) */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* conjugation &amp; accumulation flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 xflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
        </table>
        <p class="API_heads" style="page-break-before: avoid;margin-left: 1in;">Description</p>
        <p class="Body">The dotprmx(), cdotprmx(), and zdotprmx() functions calculate the dot products of the vectors defined by the first <i>N </i>elements of each row in input matrix <i>A </i>with the vectors defined by the first <i>N </i>elements of each row in input matrix <i>B</i>.</p>
        <table class="TableStyle_o_Note" style="width: 500px;mc-table-style: url('../Resources/TableStyles/o_Note.css');" cellspacing="0">
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_o_Note_Body_0_0_RowSep_ColEnd">&#160;</td>
                </tr>
                <tr>
                    <td class="TableStyle_o_Note_Body_0_0_RowEnd_ColEnd">The dotprmx(), cdotprmx(), and zdotprmx() functions are not recommended for new application development. Use the newer <a href="../CH10 - Functions - Matrix Math/Matrix Multiply Column Strides Float Dbl.htm#mat_mulx">mat_mulx()</a>, <a href="../CH10 - Functions - Matrix Math/Matrix Multiply Column Strides Complex.htm#cmat_mulx">cmat_mulx()</a>, and <a href="../CH10 - Functions - Matrix Math/Matrix Multiply Column Strides Complex.htm#zmat_mulx">zmat_mulx()</a> functions for matrix multiplication.</td>
                </tr>
            </tbody>
        </table>
        <p class="Body">The row dimensions of matrices <i>A </i>and <i>B </i>(<i>nra </i>and <i>nrb</i>) are arbitrary. However, the column dimensions of matrices <i>A </i>and <i>B </i>(<i>tca </i>and <i>tcb</i>) must both be greater than or equal to the dot product vector length N.</p>
        <p class="Body">All matrix rows have unit stride. However, adjacent rows do not have to be in contiguous memory (so column stride can exceed the number of columns for a given matrix).</p>
        <p class="BodyLeadIn">The allowed values for flag are:</p>
        <p class="Parameter">0 (zero)</p>
        <p class="Body1">No conjugation or accumulation (default).</p>
        <p class="Parameter">SAL_CONJUGATE_LEFT</p>
        <p class="Body1">The cdotprmx() and zdotprmx() functions conjugate input matrix <i>A</i>, the left matrix. This value has no effect in dotprmx().</p>
        <p class="Parameter">SAL_CONJUGATE_RIGHT</p>
        <p class="Body1">The cdotprmx() and zdotprmx() functions conjugate input matrix <i>B</i>, the right matrix. This value has no effect in dotprmx().</p>
        <p class="Parameter">SAL_ACCUMULATE</p>
        <p class="Body1">The dotprmx(), cdotprmx(), and zdotprmx() functions add the dot products to whatever is already in output matrix <i>C</i>, instead of overwriting the previous contents of <i>C</i>.</p>
        <p class="Body1">These conjugation and accumulation flag values can be ORed together, for example <code>SAL_CONJUGATE_LEFT </code>| <code>SAL_ACCUMULATE</code>.</p>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script><iframe id="topiccomments" name="topiccomments" title="Topic Comments" src="../../Skin/TopicComments.htm" frameborder="0" style="width: 100%; height: 0px; margin-top: 12px;"></iframe>
    </body>
</html>