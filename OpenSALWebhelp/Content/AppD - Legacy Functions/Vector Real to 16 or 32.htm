<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="3" MadCap:lastHeight="750" MadCap:lastWidth="654" MadCap:disableMasterStylesheet="true" MadCap:tocPath="" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:liveHelp="TLLTovUQfzXC0QiMYrA52Bx0ys4TyjMXCpXRda3M+WOjzC/Jt7fKtyC/w8ICjEmYGeev+8VTGBm6Z5BlgKPbzSaZnv3CJVYec97NeK2WYgE3ck42U4e633tIMneplS7Pa8d9T0IoM2JZlSvpaFbS4QyzrUNEM54oWP7+dEMg+r6yJrUgBq9utIrSJ/IBrH3dG78jhKMWzhtdQ2EsDQa84+PcJqa+xlJpeIGOj6TGNW+dKgUEDYMFH597+ivLBFXUfXDGiGac+0dF8acP3EJxW9fhqHrVKci7Wb0o67A5S+ArnkBajVkx19DTkavcFmO3SPf1mNCqL4C5D8B7YIc36iowUGxXiil+F13MjmttHnLbpj6FhSyhiYmpLgdGcufA2ppIzy2hec8Fb2kap5Q+l+3CEvYu24ZBjMhGZlb0DTzkPRZOto3VjhAIOXMX4u8UqQy/iChTPKjteMaULuH9kA6OSRywX3OSM3lQWBh4YQ2pYAZCtbRNqURIba04QQu7du0jGQfGMfuIOCArH+u1GUp7JaVW7c93L3dFjHqS+t42mqOaHn7C+IEg3AUjUu0y1JGFYYqhN3kHTwSE2GegTn3SFmCqKvHaCwAHTH8fCGfvZEDp+YrKuqtvp6HOeb0YEkCeBBnVPx2wcjpqvuNGI3WykFPlIyiZp3KI7zwJmCYwzzdw3TmbguC3rftd6oP84TbTTJt4ta33H0AQIO7Cgx/hsa5oF4XH3NxbIdFkNxkPUmgKFlbjsOPBup5bZ1MIkRnPNW5m7P8nXuLEPACsATLulrWNPz8JyMGfbsdAVWY3x5R6qjlpfZnY5Sdtmv15pnZxeZubPTTINEpucqKLqk9sBNO2zcvWFkadaDRABtCQ4V9dsEg2rQT7HMfF6kHVnEbkZfNZ75b7fm5WzYuSNRgBgsjWOYvJNyc6l9C1JRvvcqfMpMy+U9e25APLoAO5D5emIuMLlSOthLvqfWcLsU4HBz4qhg3pTGS8ZGrynoQY+mQIlZxjFX6Vo6ZIo0ZgaoegRU5lg/a3mFntWoojqyd9GZHgWZGI4mUu5o5aubzajLnbouYaOcT82M0p+72BgkIV8gHYXFJbo+dxUl1l73FbdBZ0mKRQieJWraj+mAnAxgjWnNiI28cEgvYmwluwSV+8mSABUkEhFgwHjHuYq/SDS5bqUYBn34gWav/2JYG7At9G8Mk2zk71tMX1vE5iqT38aXE9xfozuJGm7UXg4B8aM3mYnAw8MchEDVrkONHFCyldWFAS2A/eGLDBs1P7I8Vvz4CtVD9f13Uxv/uQ7/xAktLknU83/YTSecpoP13w0CBmY5B+MHLJ02O0IsmP5FL09PWG96eD4OXxaZR9gA==" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" type="text/css" /><title>Vector Real to 16- or 32-bit Integer Convert</title>
        <link href="../Resources/TableStyles/o_Note.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/o_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/p_Note.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/p_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/Stylesheets/BookStyles.css" rel="stylesheet" type="text/css" />
        <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapLiveHelpUtilities.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapLiveHelpBody.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapAddCommentDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapReplyCommentDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapRegisterUserDialog.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../Default_CSH.htm#AppD - Legacy Functions/Vector Real to 16 or 32.htm" style="">Open topic with navigation</a>
        </p>
        <h2><a name="top"></a><a name="kanchor1295"></a>Vector Real to 16- or 32-bit Integer Convert</h2>
        <p class="API_name"><a name="vfix32x"></a>vfix32x(), <a name="vfix32dx"></a>vfix32dx(), <a name="vintx"></a>vintx(), <a name="vint2x"></a>vint2x()</p>
        <p class="Image" style="font-family: 'Times New Roman';font-size: 11pt;">C<sub>nk</sub> = fixA<sub>ni</sub> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;n = {0, N – 1}</p>
        <p class="API_heads">Synopsis</p>
        <table style="width: 500px;caption-side: top;mc-table-style: url('../Resources/TableStyles/o_Code.css');" class="TableStyle_o_Code" cellspacing="0">
            <col style="width: 55px;" />
            <col style="width: 143px;" />
            <col />
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>vfix32x</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 i,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* address stride for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* address stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* real input count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>vfix32d</b>,(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f64 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 i,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* address stride for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* address stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* double-precision input count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>vintx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* pointer to input vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 i,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* address stride for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* pointer to output vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* address stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* real input count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>vint2x</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* pointer to input vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 i,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* address stride for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i16 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* pointer to output vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* address stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* real input count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
        </table>
        <p class="API_heads">Description</p>
        <p class="Body">The vfix32x() and vfix32dx() functions convert real values from vector <i>A </i>to 32-bit signed integers. They ignore fractional parts of vector <i>A </i>and round results toward zero.</p>
        <table class="TableStyle_o_Note" style="caption-side: top;width: 500px;mc-table-style: url('../Resources/TableStyles/o_Note.css');" cellspacing="0">
            <col style="width: 409px;" />
            <tbody>
                <tr>
                    <td class="TableStyle_o_Note_Body_0_0_RowSep_ColEnd">&#160;</td>
                </tr>
                <tr>
                    <td class="TableStyle_o_Note_Body_0_0_RowEnd_ColEnd">The vfix32x(), vfix32dx(), vintx(), and vint2x() functions are not recommended for new application development. Use the <a href="../CH06 - Functions - Data Conversion/Float.htm#vconvert_f32_s16x">vconvert_f32_s16x</a>() and <a href="../CH06 - Functions - Data Conversion/Float.htm#vconvert_f32_s32x">vconvert_f32_s32x</a>() functions.</td>
                </tr>
            </tbody>
        </table>
        <p class="Body">These functions convert input values ranging from –2,147,483,648 to 2,147,483,647 inclusive. Results for input values outside of these ranges are undefined.</p>
        <p class="Body">The vintx() function converts floating point to integer by truncating the value.</p>
        <p class="Body">The vint2x() function converts real values from vector <i>A </i>to 16-bit signed integers, rounded toward zero. Fractional parts of vector <i>A </i>are ignored. The vint2x() function converts input values ranging from –32,768 to 32,767, inclusive. Results for input values outside of this range are undefined.</p>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script><iframe id="topiccomments" name="topiccomments" title="Topic Comments" src="../../Skin/TopicComments.htm" frameborder="0" style="width: 100%; height: 0px; margin-top: 12px;"></iframe>
    </body>
</html>