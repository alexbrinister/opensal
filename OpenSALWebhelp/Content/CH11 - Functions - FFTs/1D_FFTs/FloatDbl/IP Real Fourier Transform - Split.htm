<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="4" MadCap:lastHeight="740" MadCap:lastWidth="654" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Functions - FFTs|One-Dimensional Fast Fourier Transforms, Float and Double Precision" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:liveHelp="TfoANDVA9uzDYkj4YfpkgITrvDRY8FnMF7tpGNQwuM7XIYqKMyE/vO1/iWdb/BjNMq45nsGvfjsnN2HuEqw3TWnsJrJFmkDToRaJOD7C9vriFl6cHdYPnr2RxDOquJZAaM1lt7a6iuXVDuD2qqL8wShgvz58fjT3aprkwqviO6+xPC1EIOHuMgAJCpW3KhL6vEk8LbDqWTo6sTGROGROH5CGv7AGSG3qEVkzZ52VdQvhgDNslT9q/WGEJsFjBfJKKAg0rvj2nv2sMO9dckmuRdBl4C2aAROuv9j8VCA2i+DUjVicd8ijrJcr937DOJcWPh5Ko7aSHEpoDpZqnNLSZljPh7GtvCVjeGmk+epU9qOTsi2LtqZTtp1+JfrFxYftXgFoSnMhnSzBXd1lKUQlnef3RVi05YbWA60z7PYDItI3hTrdRvB7Klc/ZU90+ycJzFKup/c6YzuP6x+x8tBItECMLVw6WaUUXmLSnLZsxwJORQx/+AgLrkM7nMDE0p6rTXoOVRa1W4q9QqRTpMx8wWZgyjDv0CHtKVn7cxTGiACMLyPb9xprnDE2Ci6tO3mlUC6KJCJn6UjGHCVDq8U0GZKUzYubWyTOJg1y7ts62jRR+fLgCLeO4Ch4n//t/KpJwUBmBamUj130Eu5FXJqpxYyMLqIlbgY3UKy9ENBTLcM4TVJBBu5Ob/L2c2AuzIZVeeV091kuGBhObz421GiicWPqLqZnHEezUMtpwN1omKd5ZMDwyH8XMAmkuR5d0eXkB47OmO/tprmW5LnMQqShf1qf+9M3rgzrwRbecBfJDEwIwCsbHzmJ1qzDJ/FwKmLUYK6yjxECK83M0mBv1w1DXuFE0aiucoLZadSjhiw3ij58lakPGCMK/pxdRQ6qN3nMRwAzVhxCPfJE90PUbglltC03hALb2Asuhp/Ur66eN78xthTR1NvkOWPL7OPE6WPh0PzAlrAU7xvUojnOnMv6S8EkwNA4o2wnwSZ7EEKfRywdwafw9WJDt/sH2/PRbbwGSl/bE5KTbBgjvh+5pPmtYI8hLuZyiK4OM/vf04CzVF40jLFrhB0vrAjvo/aF9w/KTaTNTF5TOv3NslC+1ylMSqjEOBM6gtLYQt7J3T+wGddpGbX9CAVwdHfMnJWTdUuGa+WzYpqqNAZ/dRJ51m6oHbGH25zoaYEcXTk1T9hKknn/P8AeTumgN/R4opMdzSbm3PLHLUnxZYWZOFQXaAYkguwhSbFohmhKlIt3HiOPfBZOXF0ALXkT9OQ1YaumSStO3JfuhKJLdfAEoH4P8pcbLO+hLhKmglVOBeOhmd30R0xIvBJBB9RIiqVrsFP6T8qg+Da0sUgvOsslLVppooncPg==" MadCap:PathToHelpSystem="../../../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <link href="../../../SkinSupport/MadCap.css" rel="stylesheet" type="text/css" /><title>In-Place Real Fourier Transform, Split Complex Format</title>
        <link href="../../../Resources/TableStyles/o_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../../../Resources/TableStyles/p_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../../../Resources/Stylesheets/BookStyles.css" rel="stylesheet" type="text/css" />
        <script src="../../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
        <script src="../../../SkinSupport/MadCapLiveHelpUtilities.js" type="text/javascript">
        </script>
        <script src="../../../SkinSupport/MadCapLiveHelpBody.js" type="text/javascript">
        </script>
        <script src="../../../SkinSupport/MadCapDialog.js" type="text/javascript">
        </script>
        <script src="../../../SkinSupport/MadCapAddCommentDialog.js" type="text/javascript">
        </script>
        <script src="../../../SkinSupport/MadCapReplyCommentDialog.js" type="text/javascript">
        </script>
        <script src="../../../SkinSupport/MadCapRegisterUserDialog.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../../Default_CSH.htm#CH11 - Functions - FFTs/1D_FFTs/FloatDbl/IP Real Fourier Transform - Split.htm" style="">Open topic with navigation</a>
        </p>
        <h2><a name="kanchor853"></a>In-Place Real Fourier Transform, Split Complex Format</h2>
        <p class="API_name"><a name="fft_zripx"></a><a name="kanchor854"></a>fft_zripx(), <a name="fft_zripdx"></a><a name="kanchor855"></a>fft_zripdx(), <a name="fft_zriptx"></a><a name="kanchor856"></a>fft_zriptx(), <a name="fft_zriptdx"></a><a name="kanchor857"></a>fft_zriptdx()</p>
        <p class="Image">
            <img src="../../../Resources/Images/SAL_funct_equat_169_557x75.jpg" style="width: 557; height: 75;" />
        </p>
        <p class="API_heads">Syntax</p>
        <table style="caption-side: top;width: 500px;mc-table-style: url('../../../Resources/TableStyles/o_Code.css');" class="TableStyle_o_Code" cellspacing="0">
            <col style="width: 56px;" />
            <col style="width: 169px;" />
            <col style="width: 275px;" />
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>fft_zripx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">FFT_setup *setup,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* weights array */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input/output vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of element count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 f,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* directional flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>fft_zripdx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">FFT_setupd *setup,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* weights array */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input/output vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of element count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 f,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* directional flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>fft_zriptx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">FFT_setup *setup,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* weights array */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input/output vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *T,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* temporary vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of element count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 f,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* directional flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>fft_zriptdx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">FFT_setupd *setup,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* weights array */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input/output vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *T,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* temporary vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">unsigned SAL_i32 log2N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of element count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 f,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* directional flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
        </table>
        <p class="API_heads">Description</p>
        <p class="BodyLeadIn">The fft_zripx(), fft_zripdx(), fft_zriptx(), and fft_zriptdx() functions compute an in-place real discrete Fourier transform, from:</p>
        <ul>
            <li value="1">
                <p>The time domain to the frequency domain (forward) </p>
                <p class="or" MadCap:autonum="- or -"><span class="autonumber"><span>- or -</span></span>&#160;</p>
            </li>
            <li value="2">The frequency domain to the time domain (inverse)</li>
        </ul>
        <p class="Body">Forward transforms read real input and write packed complex output. Inverse transforms read packed complex input and write real output. As a result of packing the frequency-domain data, time-domain data and its equivalent frequency-domain data have the same storage requirements.</p>
        <p class="Body">Real data is stored in split complex form, with odd reals stored on the imaginary side of the split complex form and even reals in stored on the real side.</p>
        <p class="API_heads">Parameters</p>
        <p class="Parameter">setup </p>
        <p class="Body1">Points to a structure initialized by a prior call to an FFT weights array function,<a href="../../../AppD - Legacy Functions/Create Complex Exponentials for FFTs.htm#fft_setupd">&#160;<a href="../../Setup/Create Complex Exponentials for 1D FFTs.htm#fft1d_setup">fft1d_setup()</a></a>. The value supplied as parameter <i>N </i>of the setup function must equal or exceed the value supplied as parameter <i>N </i>of the transform function.</p>
        <p class="Parameter">k </p>
        <p class="Body1">Specifies an address stride through input/output vector <i>C</i>. Specifying 1 processes every element, specifying 2 processes every other element, and so on.</p>
        <p class="Parameter">T</p>
        <p class="Body1">For fft_zriptx() and fft_zriptdx(), parameter <i>T </i>is a temporary vector used for storing interim results. Vector <i>T </i>must be large enough to hold the element count specified by parameter <i>N</i>.</p>
        <p class="Parameter">log2N </p>
        <p class="Body1">The base 2 exponent of the number of elements to process. For example, to process 1024 elements, specify 10 for parameter <i>log2N</i>.</p>
        <p class="Parameter">f </p>
        <p class="Body1">A forward/inverse directional flag, and must specify one of the following:</p>
        <p class="ParameterIndent">FFT_FORWARD</p>
        <p class="Body2">Forward transform (real to packed complex).</p>
        <p class="ParameterIndent">FFT_INVERSE</p>
        <p class="Body2">Inverse transform (packed complex to real).</p>
        <p class="Body2">Results are undefined for other values of <i>f</i>.</p>
        <p class="RelatedTopics" MadCap:autonum="Related Topics"><span class="autonumber"><span>Related Topics</span></span>&#160;</p>
        <p class="Body"><a href="../../../CH01 - Introduction/Calling_Conventions.htm#Address_strides" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>Address Strides</i></span></a>
        </p>
        <p class="Body"><a href="../../../CH02 - Transform Functions/SAL_FFTs.htm#FFT_Limitations" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>SAL Fast Fourier Transforms</i></span></a>
        </p>
        <p class="RelatedFunctions" MadCap:autonum="Related Functions"><span class="autonumber"><span>Related Functions</span></span>&#160;</p>
        <p class="Body"><a href="../../Setup/Create Complex Exponentials for 1D FFTs.htm#fft1d_setup" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>fft1d_setup(), fft1d_setupd()</i></span></a>&#160;</p>
        <script type="text/javascript" src="../../../SkinSupport/MadCapBodyEnd.js">
        </script><iframe id="topiccomments" name="topiccomments" title="Topic Comments" src="../../../../Skin/TopicComments.htm" frameborder="0" style="width: 100%; height: 0px; margin-top: 12px;"></iframe>
    </body>
</html>