<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="4" MadCap:lastHeight="763" MadCap:lastWidth="654" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Functions - FFTs|One-Dimensional Fast Fourier Transforms, Float and Double Precision" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:liveHelp="LqvgatA+1Z1n9jfFTbegPkB4LRIKSvUI1eR5uv3IPkt/EBh1OKW7iDeAsn4xWWlVzs26HisxWPffr+96MSsdOSBD9L5N2TFJQS1AuIT8T9cYUc2duc0sRN9YcOHi4sc+rwVlWn7PzMo84spUSxvBJzFuJaEgOotQ+ggk0X4HRie/Ehw6BRbQLGoHy6D4foomBVpYJijy+pnpL1xhIkd5Kl1n+uhT3Rmuz8sDVERyMuWKEE1Lftg8E9VZLqhDUy+Xyhq/tgmNLwq/yHpeND/41oB1Xo+A2SdP9REzS/eD1qE0GB21G4sOAeTfFndcGhtMQKTIYIMaceaNFD8AEOdPUkNnBx31VTHJTCzriMvB/pp2X1CO2bpVmcV31IieZdsNqJH6onYHBJDdbiTNNPFNzm+dh3tAXEnHIzfNwkfdCVjXTcNWX3sLlrFBJXfJ0+HD4gBr4P/BA853+Zj/d+avcg6wp7wop8LnGYcYwpe+LjWEj68u0dVq0VWvNJukusBOIJYeg6vgt6FyUC2sAluhS1ykFnJrL00Cvyx4tZMTdUw7NnY1MHi97vEQhvkDFP8752SHcsJaSmGdSzTh5RfLnZNXEc5+lXpcFzhZin2LmjG8Z4Zi6y94YZfy/N9DXzLDgiyt04PhpWBSUzm055KJMW7ZbGo1vGRZZUtMwZ65vr8NQXf67QzhZTEruJAuQzaYCNhSCOIOzG9TrxsLVZBL28DmWnRh2ZiP6LmmV0P7I70zaXtwRRWZ/01woQGvRjNeeUYEV7FZiFAdjw/QFpIXKsDiYYVpv0OhLQXQVG41FjHmmueyuICDZf0LM8jY+wPZMXAYvk6Tne25TTS1OzCzNdb+Iv8b2ZD0ZQhSKKC3SMpFlvLG8/FtSIaxIFmWnW15hPTLZfOGhug9hcJiILsicCkoMlsSzSY+Ti72o6L8R4CrfyYIHH8oe22XdlDj8f/XxRmTxa/+kxsPEMi3Ci30Ovq7pszhRXCHcuJmdrzZ8wwwE1+Lxb60AWCgA4/LJzjootBv9wsoEuw2f192VTapWIid0q+QaEh9Kz4CqA2UHhAcvUIi1ODOZAOZJNzVhLQiAeMxbiHULLC/lwwjonYDSPfgliD1FoDRhjSG8S1mQgiNKK9ZpCN6tS1u2R3WBdYkOGgU0TjoWyo7uGicCq8Nl/CLSSr9txFyRsMbGNe9XNkq9yeRwEZsnCXa9D975xFoNDUGMjQwSuwIa1cGbvq8LDK6TfGMVh64Grd7K1/NY8K0i6exVQuXnUHtynRl/M32uu37pe7d5hW2BWr2uODqoD/sSKCujBFoN2igWkfBNy/by6VnQxg6VClMvxSWiFmyInanJDw+aZQtte4TrG6Lgw==" MadCap:PathToHelpSystem="../../../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <link href="../../../SkinSupport/MadCap.css" rel="stylesheet" type="text/css" /><title>Out-of-place Real Fourier Transform, Split Complex Format</title>
        <link href="../../../Resources/TableStyles/o_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../../../Resources/TableStyles/p_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../../../Resources/Stylesheets/BookStyles.css" rel="stylesheet" type="text/css" />
        <script src="../../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
        <script src="../../../SkinSupport/MadCapLiveHelpUtilities.js" type="text/javascript">
        </script>
        <script src="../../../SkinSupport/MadCapLiveHelpBody.js" type="text/javascript">
        </script>
        <script src="../../../SkinSupport/MadCapDialog.js" type="text/javascript">
        </script>
        <script src="../../../SkinSupport/MadCapAddCommentDialog.js" type="text/javascript">
        </script>
        <script src="../../../SkinSupport/MadCapReplyCommentDialog.js" type="text/javascript">
        </script>
        <script src="../../../SkinSupport/MadCapRegisterUserDialog.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../../Default_CSH.htm#CH11 - Functions - FFTs/1D_FFTs/FloatDbl/OP Real Fourier Transform - Split.htm" style="">Open topic with navigation</a>
        </p>
        <h2 style="page-break-before: always;page-break-after: auto;margin-left: 0.5in;"><a name="kanchor858"></a>Out-of-place Real Fourier Transform, Split Complex Format</h2>
        <p class="API_name"><a name="fft_zropx"></a><a name="kanchor859"></a>fft_zropx(), <a name="fft_zropdx"></a><a name="kanchor860"></a>fft_zropdx(), <a name="fft_zroptx"></a><a name="kanchor861"></a>fft_zroptx(), <a name="fft_zroptdx"></a><a name="kanchor862"></a>fft_zroptdx()</p>
        <p class="Image">
            <img src="../../../Resources/Images/SAL_funct_equat_170_555x75.jpg" style="width: 555; height: 75;" />
        </p>
        <p class="API_heads">Syntax</p>
        <table style="caption-side: top;width: 500px;mc-table-style: url('../../../Resources/TableStyles/o_Code.css');" class="TableStyle_o_Code" cellspacing="0">
            <col style="width: 55px;" />
            <col style="width: 152px;" />
            <col style="width: 304px;" />
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>fft_zropx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">FFT_setup *setup,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* weights array */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector (destroyed) */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 i,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element stride for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of element count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 f,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* directional flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>fft_zropdx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">FFT_setupd *setup,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* weights array */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector (destroyed) */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 i,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element stride for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of element count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 f,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* directional flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>fft_zroptx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">FFT_setup *setup,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* weights array */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector (preserved) */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 i,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element stride for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *T,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* temporary vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of element count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 f,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* directional flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>fft_zroptdx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">FFT_setupd *setup,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* weights array */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector (preserved) */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 i,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element stride for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *T,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* temporary vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of element count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 f,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* directional flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
        </table>
        <p class="API_heads">Description</p>
        <p class="BodyLeadIn" style="page-break-after: avoid;">The fft_zropx(), fft_zropdx(), fft_zroptx(), and fft_zroptdx() functions compute an out-of-place real discrete Fourier transform, from:</p>
        <ul>
            <li value="1">
                <p>The time domain to the frequency domain (forward) </p>
                <p class="or" MadCap:autonum="- or -"><span class="autonumber"><span>- or -</span></span>&#160;</p>
            </li>
            <li value="2">The frequency domain to the time domain (inverse)</li>
        </ul>
        <p class="Body">Forward transforms read real input and write packed complex output. Inverse transforms read packed complex input and write real output. As a result of packing the frequency-domain data, time-domain data and its equivalent frequency-domain data have the same storage requirements.</p>
        <p class="Body">The fft_zropx() and fft_zropdx() functions destroy the input vector, while fft_zroptx() and fft_zroptdx() preserve the input vector.</p>
        <p class="Body">Real data is stored in split complex form, with odd reals stored on the imaginary side of the split complex form and even reals in stored on the real side.</p>
        <p class="API_heads">Parameters</p>
        <p class="Parameter">setup </p>
        <p class="Body1">Points to a structure initialized by a prior call to an FFT weights array function, <a href="../../Setup/Create Complex Exponentials for 1D FFTs.htm#fft1d_setup">fft1d_setup()</a>. The value supplied as parameter <i>N </i>of the setup function must equal or exceed the value supplied as parameter <i>n </i>of the transform function.</p>
        <p class="Parameter">i </p>
        <p class="Body1">Specifies an address stride through input vector <i>A</i>. </p>
        <p class="Parameter">k </p>
        <p class="Body1">Specifies an address stride through output vector <i>C</i>. Specifying 1 processes every element, specifying 2 processes every other element, and so on.</p>
        <p class="Parameter">T</p>
        <p class="Body1">For fft_zroptx() and fft_zroptdx(), parameter <i>T </i>is a temporary vector used for storing interim results. Vector <i>T </i>must be large enough to hold the element count specified by parameter <i>N</i>.</p>
        <p class="Parameter">log2N </p>
        <p class="Body1">The base 2 exponent of the number of elements to process. For example, to process 1024 elements, specify 10 for parameter <i>log2N</i>.</p>
        <p class="Parameter">f </p>
        <p class="Body1">A forward/inverse directional flag, and must specify one of the following:</p>
        <p class="ParameterIndent">FFT_FORWARD</p>
        <p class="Body2">Forward transform (real to packed complex).</p>
        <p class="ParameterIndent">FFT_INVERSE</p>
        <p class="Body2">Inverse transform (packed complex to real).</p>
        <p class="Body2">Results are undefined for other values of <i>f</i>.</p>
        <p class="RelatedTopics" MadCap:autonum="Related Topics"><span class="autonumber"><span>Related Topics</span></span>&#160;</p>
        <p class="Body"><a href="../../../CH01 - Introduction/Calling_Conventions.htm#Address_strides" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>Address Strides</i></span></a>
        </p>
        <p class="Body"><a href="../../../CH02 - Transform Functions/SAL_FFTs.htm#FFT_Limitations" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>SAL Fast Fourier Transforms</i></span></a>
        </p>
        <p class="RelatedFunctions" MadCap:autonum="Related Functions"><span class="autonumber"><span>Related Functions</span></span>&#160;</p>
        <p class="Body"><a href="../../Setup/Create Complex Exponentials for 1D FFTs.htm#fft1d_setup" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>fft1d_setup(), fft1d_setupd()</i></span></a>&#160;</p>
        <script type="text/javascript" src="../../../SkinSupport/MadCapBodyEnd.js">
        </script><iframe id="topiccomments" name="topiccomments" title="Topic Comments" src="../../../../Skin/TopicComments.htm" frameborder="0" style="width: 100%; height: 0px; margin-top: 12px;"></iframe>
    </body>
</html>