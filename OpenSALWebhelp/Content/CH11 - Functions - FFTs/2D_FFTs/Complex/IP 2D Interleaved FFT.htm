<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="3" MadCap:lastHeight="751" MadCap:lastWidth="654" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Functions - FFTs|Two-Dimensional Fast Fourier Transforms, Complex" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:liveHelp="dErRx0E/LYdlxO1LGCdiWR3KqQly3TS26xAiG++umeeWXkxmjliyDEVs61zL7F+4eJR8CDlVv8quilbUX157H6Go2nuy+MsxPIZU9xB2f4b6QAcGtfKtcLrQCk9QNZuECtkc0xS4bG0+/SyIpVBWqthe+AHhN9SJ0NFPb5JoE33wC9fjbPYCUkXPmweIl2CWJdVPTRuHoTKVyadzIeujEavpVZP7l9d5ZjGgWsOZ1OtxL9YVtJxdOsjDHLPwjw/OtCUlPLjG93z5sfuHBpxdRauCeE89O2ZEEinHVZAWMYKry4m1je7numJ4raKOluJ7QhcbjayMY7dwQ34ZrQ4u7w0ehkDHuZTknPnTzws/RjY7xVLEpYkzLGnX4UdxhMn6NkjMrC2TnJBbqrmGavQflncgoQ2RyqB59QnKqKLimdQ2nEUEnlEn92rSQhoDTj0oqUDFpGmQ6pRKm11Cr9eUqIkiXZuj6flANuEdBt4zM693xYOT+V7hjrAXTkgV7XFibS35tgx5sBjbj1jC3B2TdNDKsN+zj75kX6yGT2Hjzu3kLhURiSi0z20AaH82v4eGFg+zevZJhj/uLIVroyhJ79Pj7S3QvJLPXw/k+Bg7Hk542L/HzKx5+xKbe6njZZhbbDTRjPXlwRrgGNEKRJSQvBVlqMGr4sjIS63RqLKtDxGhRbvA3DS15y4oQm8EZQV0vteeGFnJt0eQcyXRLMVrBJAuVzQ4ZnVPZhGVFUpxGg9LKyfZgwmznXiKtnmiQNAO+jM+lDO6OM9njEA+CXuzuPF2fhLI/qnEvkQCd1hTg8axUMO0QyOM+DJK1gijd4r6/lvmG8V8i1UYZodfUbp0yrwAC9Is2u9OWS0QSL6VDV3y1kW5cJdwWoYXt8yLILaH+hCFkK4oXYVabVuj4W6Jbo41qsZJ8wOauERvU2MKZu/NuVU/TBxmO+Z4snX8dS9upHLJrYQkRwF178RyQHUPX1PcPMA3o3dx8mx0ioeG3XDYBQhCicbAz8wCziAE3t9RWNQwmlr+uTVK+HRNabb6EqnpG/pFAlHTqDX3piCW/+nmql5vR9FKS2rqEMuYgA9PEGSU03mYLAX5IhiOt8Nkh7VqyZOJRYOq+aAAyKYFTVSfSLnGQ0qw3YSBPqijV5W4JwOJgxDNyC+4KHKmWW47Dx+NG+cvcsamZs/a1hGeocJkb3rXq9bt7k/3mYPBapKJHN0ttLrN6EgwPxN73ZH2Iza/IC3G36XoYR3IfX49r3jcR0gOGzs5wTj+Yc+ONOIHsuGpRl4TxJiqlAwC5tx4TgijROkZuSNKVOqKly/3VqXCamZxIFOy8P7JSywCIWVai4NqYnQ2ZSXxRGdATmap1Q==" MadCap:PathToHelpSystem="../../../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <link href="../../../SkinSupport/MadCap.css" rel="stylesheet" type="text/css" /><title>In-Place Two-Dimensional Interleaved Complex Fourier Transform</title>
        <link href="../../../Resources/TableStyles/o_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../../../Resources/TableStyles/p_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../../../Resources/Stylesheets/BookStyles.css" rel="stylesheet" type="text/css" />
        <script src="../../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
        <script src="../../../SkinSupport/MadCapLiveHelpUtilities.js" type="text/javascript">
        </script>
        <script src="../../../SkinSupport/MadCapLiveHelpBody.js" type="text/javascript">
        </script>
        <script src="../../../SkinSupport/MadCapDialog.js" type="text/javascript">
        </script>
        <script src="../../../SkinSupport/MadCapAddCommentDialog.js" type="text/javascript">
        </script>
        <script src="../../../SkinSupport/MadCapReplyCommentDialog.js" type="text/javascript">
        </script>
        <script src="../../../SkinSupport/MadCapRegisterUserDialog.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../../Default_CSH.htm#CH11 - Functions - FFTs/2D_FFTs/Complex/IP 2D Interleaved FFT.htm" style="">Open topic with navigation</a>
        </p>
        <h2><a name="kanchor1055"></a>In-Place Two-Dimensional Interleaved Complex Fourier Transform</h2>
        <p class="API_name"><a name="fft2d_cipx"></a><a name="kanchor1056"></a>fft2d_cipx(), <a name="fft2d_cipdx"></a><a name="kanchor1057"></a>fft2d_cipdx(), <a name="fft2d_ciptx"></a><a name="kanchor1058"></a>fft2d_ciptx(), <a name="fft2d_ciptdx"></a><a name="kanchor1059"></a>fft2d_ciptdx()</p>
        <p class="Image">
            <img src="../../../Resources/Images/SAL_funct_equat_179_480x153.jpg" style="width: 480; height: 153;" />
        </p>
        <p class="API_heads">Syntax</p>
        <table style="caption-side: top;width: 500px;mc-table-style: url('../../../Resources/TableStyles/o_Code.css');" class="TableStyle_o_Code" cellspacing="0">
            <col style="width: 55px;" />
            <col style="width: 153px;" />
            <col style="width: 292px;" />
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>fft2d_cipx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">FFT_setup *setup,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* weights array */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input/output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* row stride for C, must be even */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 l,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* column stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of column count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2M,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of row count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 f,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* directional flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>fft2d_cipdx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">FFT_setupd *setup,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* weights array */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf64 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input/output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* row stride for C, must be even */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 l,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* column stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of column count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2M,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of row count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 f,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* directional flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>fft2d_ciptx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">FFT_setup *setup,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* weights array */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input/output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* row stride for C, must be even */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 l,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* column stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *T,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* temporary matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of column count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2M,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of row count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 f,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* directional flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>fft2d_ciptdx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">FFT_setupd *setup,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* weights array */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf64 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input/output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* row stride for C, must be even */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 l,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* column stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf64 *T,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* temporary matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of column count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2M,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of row count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 f,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* directional flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
        </table>
        <p class="API_heads">Description</p>
        <p class="Body">The fft2d_cipx(), fft2d_cipdx(), fft2d_ciptx(), and fft2d_ciptdx() functions compute an in-place complex discrete Fourier transform of matrix <i>C</i>, from the spatial domain to the frequency domain (forward) or from the frequency domain to the spatial domain (inverse).</p>
        <p class="API_heads">Parameters</p>
        <p class="Parameter">setup </p>
        <p class="Body1">Points to a structure initialized by a prior call to FFT weights array function, <a href="../../Setup/Create Complex Exponentials for 2D FFTs.htm#fft2d_setup">fft2d_setup()</a>. The value supplied as parameter <i>N </i>of the setup function must equal or exceed the value supplied as parameter <i>N </i>or <i>M </i>of the transform function, whichever is larger.</p>
        <p class="Parameter">k</p>
        <p class="Body1">Specify strides through the input /output matrix. Because the matrix holds complex elements, each stride must be a multiple of 2. Parameter <i>k </i>specifies a stride across each row of matrix <i>C</i>. Specifying 2 for <i>k </i>processes every element across each row; specifying 4 for <i>k </i>processes every other element across each row, and so on.</p>
        <p class="Parameter">l </p>
        <p class="Body1">Specifies a column stride for matrix <i>C </i>and, unless matrix <i>C </i>is a submatrix, should be allowed to default. Parameter <i>l </i>can be defaulted by specifying zero. The default stride equals the row stride, parameter <i>k</i>, multiplied by the column count, parameter <i>N</i>. So, if <i>k </i>is 2 and <i>l </i>is zero, every element of matrix <i>C </i>is processed. If <i>k </i>is 4 and <i>l </i>is zero, every other element of each row is processed.</p>
        <p class="Body1">If not zero, parameter <i>l </i>represents the distance between each row of matrix <i>C</i>. For example, if parameter <i>l </i>is 1024, complex element 512 of matrix <i>C </i>equates to element (1,0), element 1024 equates to element (2,0), and so on.</p>
        <p class="Parameter">T</p>
        <p class="Body1">For fft2d_ciptx() and fft2d_ciptdx(), parameter <i>T </i>is a temporary matrix used for storing interim results. The matrix must be large enough to hold the element count as specified by parameters <i>N </i>and <i>M</i>.</p>
        <p class="Parameter">log2N and log2M</p>
        <p class="Body1">The <i>log2N </i>parameter is the base 2 exponent of the number of columns to process for each row. Parameter <i>log2M </i>is the base 2 exponent of the number of rows to process. For example, to process 64 rows of 128 columns, specify 7 for parameter <i>log2N </i>and 6 for parameter <i>log2M</i>.</p>
        <p class="Parameter">f </p>
        <p class="Body1">A forward/inverse directional flag that must specify one of the following:</p>
        <p class="ParameterIndent">FFT_FORWARD</p>
        <p class="Body2">Forward transform.</p>
        <p class="ParameterIndent">FFT_INVERSE</p>
        <p class="Body2">Inverse transform.</p>
        <p class="Body2">Results are undefined for other values of <i>f</i>.</p>
        <p class="Body2">For best performance, specify row strides of 2 and column strides of zero.</p>
        <p class="RelatedTopics" MadCap:autonum="Related Topics"><span class="autonumber"><span>Related Topics</span></span>&#160;</p>
        <p class="Body"><a href="../../../CH01 - Introduction/Calling_Conventions.htm#Address_strides" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>Address Strides</i></span></a>&#160;&#160;</p>
        <p class="Body"><a href="../../../CH02 - Transform Functions/SAL_FFTs.htm#FFT_Limitations" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>SAL Fast Fourier Transforms</i></span></a>&#160;</p>
        <p class="RelatedFunctions" MadCap:autonum="Related Functions"><span class="autonumber"><span>Related Functions</span></span>&#160;</p>
        <p class="Body"><a href="../../Setup/Create Complex Exponentials for 2D FFTs.htm#fft2d_setup" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>fft2d_setup(), fft2d_setupd()</i></span></a>
        </p>
        <script type="text/javascript" src="../../../SkinSupport/MadCapBodyEnd.js">
        </script><iframe id="topiccomments" name="topiccomments" title="Topic Comments" src="../../../../Skin/TopicComments.htm" frameborder="0" style="width: 100%; height: 0px; margin-top: 12px;"></iframe>
    </body>
</html>