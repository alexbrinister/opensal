<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="3" MadCap:lastHeight="749" MadCap:lastWidth="654" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Functions - FFTs|Two-Dimensional Fast Fourier Transforms, Complex" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:liveHelp="Hc23bxRfCxCEdziE/yhhDDsLQnkgKYShbjBIIhlZdbyG/xwk8YLjuSE4TzHQDMqvtqFxZKLtvyH/XQii8RVFvs5KhVsqazIbGMHFAJB9R3RKfbIVaw8Q+B9yAeq8TBRmg/lAJlhYiX6N1h777LxEXIqAz/eW2F4xcA9gkFhTZ3sYJzXGIqN2HpdURhoojKV2+KhgHMLR5je9trmu9i6L7F9yjHgcQrv+Zae1ipWp29myXAc9dX3XONseVSHnCaCTME+maktcZDAMMpChOsPTFImBGVWSZ0eVVfmQSuJChTUUZNl5UqXpimW4Q0HNkImiIEgnqIUx5yUP4bJ2h8YgAyk/WM7HnOmwClKGO46y5MxHLNT6OOhpGmx4zwBCUimN7Ci/ywOT45mEcoy+P6MFo6vuB7t9cbon8z1jWKfC5RqwJqkKqxmWEiHJnuCmXqN2rc6QGa/4waL1Q+Sdrgxdxbh7vhyJYCYecIwHMx7iSk6OmX1gz7Iyhx6kVS25ubPC0ekzSRIJgTan76UqRIL7kMyBAq/DiWfDxFE3YbB0/By6Fh9KPVUg7SnTXrRdHzlDa/19OTIlxIM2mc2G/OfbqclwJys/pnnRPVV74LCOdvtO4A1m4Te7+dU1IcsU1S+q1wme6lQs/0s6BITht8wxFPSVvQomUkM044R1j3t2y/5ja/Qc0hdgyj0l9iWEK2073nqGRQ9Gv9U4n/k4PcIR+M8TVRdo58IhRFC3kV8uhfBStuPjzW0JIU1KfqSeGey6whzMgTYHSovaIS6e681yujMDgCQO0jVuBGieDTRz+lzoVvhw20uTHLvpvurvp4Ao5KX6+tHXeLIf3FWoeHMF4sSwZHsiJ5hZ7cDbae6L91RK8c5CqqxzgJGj5dUyNQ888MaeuhNs0jMMpax+K0TzcE8i1g1nIjj5w1vDYMtaK4Y1xqTErLbGJSgHzS4BjA7x4g38Yx63XfwdG9YY3yk7xZp2xeY4kTiYySzZRjKPgBJfArMsTNBFJ6SS67N5YrcBLzRSpnoDdrDTfRXavcCCu5aVtAfZC2ZBUUC0Xu5AFxKefqnRieXSEy/lqnpbEBzeVt0roAOWYdwJlHzudCkVOSYGmR7OsNNVy3PQXTOvfSgUAuHfieWUKUYlhd8CDv8iRsDEFTzSmvPNBSGWYKUIkqB7FVa4K7xsABH1uPi62njIm0gUCP5kh1D+eSDDG2/04R5Mii28vFdOmsSOs9dI1mFP5ilOtU8ccGTHkpGM3RnRkuvrFkZVtaCt9l9pufuRITtSTqdACxzPX5iCuNA5HkPZVA68sPvc5MxVPWPPOQjaV86GfKrpbxZVNIGhVFkz+XmgbJIuOxbFEHs2HeGxew==" MadCap:PathToHelpSystem="../../../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <link href="../../../SkinSupport/MadCap.css" rel="stylesheet" type="text/css" /><title>In-Place Two-Dimensional Split Complex Fourier Transform</title>
        <link href="../../../Resources/TableStyles/o_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../../../Resources/TableStyles/p_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../../../Resources/Stylesheets/BookStyles.css" rel="stylesheet" type="text/css" />
        <script src="../../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
        <script src="../../../SkinSupport/MadCapLiveHelpUtilities.js" type="text/javascript">
        </script>
        <script src="../../../SkinSupport/MadCapLiveHelpBody.js" type="text/javascript">
        </script>
        <script src="../../../SkinSupport/MadCapDialog.js" type="text/javascript">
        </script>
        <script src="../../../SkinSupport/MadCapAddCommentDialog.js" type="text/javascript">
        </script>
        <script src="../../../SkinSupport/MadCapReplyCommentDialog.js" type="text/javascript">
        </script>
        <script src="../../../SkinSupport/MadCapRegisterUserDialog.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../../Default_CSH.htm#CH11 - Functions - FFTs/2D_FFTs/Complex/IP 2D Split FFT.htm" style="">Open topic with navigation</a>
        </p>
        <h2><a name="kanchor1065"></a>In-Place Two-Dimensional Split Complex Fourier Transform</h2>
        <p class="API_name"><a name="fft2d_zipx"></a><a name="kanchor1066"></a>fft2d_zipx(), <a name="fft2d_zipdx"></a><a name="kanchor1067"></a>fft2d_zipdx(), <a name="fft2d_ziptx"></a><a name="kanchor1068"></a>fft2d_ziptx(), <a name="fft2d_ziptdx"></a><a name="kanchor1069"></a>fft2d_ziptdx()</p>
        <p class="Image">
            <img src="../../../Resources/Images/SAL_funct_equat_183_473x151.jpg" style="width: 473; height: 151;" />
        </p>
        <p class="API_heads">Syntax</p>
        <table style="caption-side: top;width: 500px;mc-table-style: url('../../../Resources/TableStyles/o_Code.css');" class="TableStyle_o_Code" cellspacing="0">
            <col style="width: 55px;" />
            <col style="width: 155px;" />
            <col style="width: 296px;" />
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>fft2d_zipx</b></td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">FFT_setup *setup,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* weights array */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input/output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* row stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 l,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* column stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of column count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2M,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of row count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 f,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* directional flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>fft2d_zipdx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">FFT_setupd *setup,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* weights array */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input/output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* row stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 l,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* column stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of column count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2M,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of row count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 f,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* directional flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>fft2d_ziptx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">FFT_setup *setup,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* weights array */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input/output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* row stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 l,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* column stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *T,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* temporary matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of column count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2M,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of row count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 f,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* directional flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>fft2d_ziptdx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">FFT_setupd *setup,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* weights array */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input/output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 k,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* row stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 l,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* column stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *T,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* temporary matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of column count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2M,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of row count */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 f,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* directional flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
        </table>
        <p class="API_heads">Description</p>
        <p class="Body">The fft2d_zipx(), fft2d_zipdx(), fft2d_ziptx(), and fft2d_ziptdx() functions compute an in-place complex discrete Fourier transform of matrix <i>C</i>, from the spatial domain to the frequency domain (forward) or from the frequency domain to the spatial domain (inverse).</p>
        <p class="API_heads">Parameters</p>
        <p class="Parameter">setup </p>
        <p class="Body1">Points to a structure initialized by a prior call to FFT weights array function,<a href="../../../AppD - Legacy Functions/Create Complex Exponentials for FFTs.htm#fft_setup"> <![CDATA[ ]]><a href="../../Setup/Create Complex Exponentials for 2D FFTs.htm#fft2d_setup">fft2d_setup()</a></a>. The value supplied as parameter <i>N </i>of the setup function must equal or exceed the value supplied as parameter <i>N </i>or <i>M </i>of the transform function, whichever is larger.</p>
        <p class="Parameter">k</p>
        <p class="Body1">Specify strides through the input /output matrix. Parameter <i>k </i>specifies a stride across each row of matrix <i>C</i>. Specifying 1 for <i>k </i>processes every element across each row; specifying 2 for <i>k </i>processes every other element across each row, and so on.</p>
        <p class="Parameter">l</p>
        <p class="Body1">Specifies a column stride for matrix <i>A </i>and, unless matrix <i>C </i>is a submatrix, should be allowed to default. Parameter <i>l </i>can be defaulted by specifying zero. The default stride equals the row stride, parameter <i>k</i>, multiplied by the column count, parameter <i>N</i>. So, if <i>k </i>is 1 and <i>l </i>is zero, every element of matrix <i>C </i>is processed. If <i>k </i>is 2 and <i>l </i>is zero, every other element of each row is processed.</p>
        <p class="Body1">If not zero, parameter <i>l </i>represents the distance between each row of matrix <i>C</i>. For example, if parameter <i>l </i>is 1024, complex element 512 of matrix <i>C </i>equates to element (1,0), element 1024 equates to element (2,0), and so on.</p>
        <p class="Parameter">T</p>
        <p class="Body1">For fft2d_ziptx() and fft2d_ziptdx(), parameter <i>T </i>is a temporary matrix used for storing interim results. Matrix <i>T </i>must be large enough to hold the element count as specified by parameters <i>log2N </i>and <i>log2M</i>.</p>
        <p class="Parameter">log2N and log2M</p>
        <p class="Body1">The <i>log2N </i>parameter is the base 2 exponent of the number of columns to process for each row. Parameter <i>log2M </i>is the base 2 exponent of the number of rows to process. For example, to process 64 rows of 128 columns, specify 7 for parameter <i>log2N </i>and 6 for parameter <i>log2M</i>.</p>
        <p class="Parameter">f </p>
        <p class="Body1">A forward/inverse directional flag, and must specify one of the following:</p>
        <p class="ParameterIndent">FFT_FORWARD</p>
        <p class="Body2">Forward transform.</p>
        <p class="ParameterIndent">FFT_INVERSE</p>
        <p class="Body2">Inverse transform.</p>
        <p class="Body1">Results are undefined for other values of <i>f</i>.</p>
        <p class="Body1">For best performance, specify row strides of 1 and column strides of zero.</p>
        <p class="RelatedTopics" MadCap:autonum="Related Topics"><span class="autonumber"><span>Related Topics</span></span>&#160;</p>
        <p class="Body"><a href="../../../CH01 - Introduction/Calling_Conventions.htm#Address_strides" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>Address Strides</i></span></a>&#160;&#160;</p>
        <p class="Body"><a href="../../../CH02 - Transform Functions/SAL_FFTs.htm#FFT_Limitations" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>SAL Fast Fourier Transforms</i></span></a>&#160;</p>
        <p class="RelatedFunctions" MadCap:autonum="Related Functions"><span class="autonumber"><span>Related Functions</span></span>&#160;</p>
        <p class="Body"><a href="../../Setup/Create Complex Exponentials for 2D FFTs.htm#fft2d_setup" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>fft2d_setup(), fft2d_setupd()</i></span></a>
        </p>
        <script type="text/javascript" src="../../../SkinSupport/MadCapBodyEnd.js">
        </script><iframe id="topiccomments" name="topiccomments" title="Topic Comments" src="../../../../Skin/TopicComments.htm" frameborder="0" style="width: 100%; height: 0px; margin-top: 12px;"></iframe>
    </body>
</html>