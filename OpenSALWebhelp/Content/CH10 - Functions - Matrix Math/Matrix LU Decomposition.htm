<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="4" MadCap:lastHeight="2512" MadCap:lastWidth="614" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Functions - Matrix Math|Matrix Complex Functions" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:liveHelp="cmhaUhoGPCoDcYkzXhHC/dGqzjMZjWfVFuxCA2S+TNc3K78eEDJR86cEZkQpGgDbwHnPgr74hjDcwHWqMxvuYOKxF5Ih85/F0MrVNvn1pBrVGFQBz6I7U7NTfc+CIfmYXO6gAhVqrZu9rZnSaYmyNf12PGQSpQXfWjnguAXbF5ELxxEy2muMdMz4ec+ioiOxrn5h9vPcH8lxFxayDDLa/T2hruTZqqX7iKjR6b/U2S8N6AY0n6dQpIzRZ3wxziLd8pyMQb2+Oyg7euLo2NwPqTZPCc1jZfvGEpJpUmeGbpqcSTQCzHJOxpbUAWSLfMD9NDd/TFMfzlvsitvfJfn5rKEpvIHicG63QQUH/fKZic4Rh9hXr1kcGARt3LoVWqtRg9mUCUZND72iLtH7wtyrF1QmioEP42lR/MByb2FFg9wNUxwzdBIxOkseLwIlRZrgMHcP5dG1VTEEcdUvp74M6Td843eHxh4sHSXtK/WI0fK4tkgnhdV5Aw8vDfHNgeCyR4tprE0NwpLvuLgaVa8wg6iAKecBgUtMWg57vMkxrpn4/QUSc3Yo92CGfxn/RWQxMZsuXTAlGR4UX3sltlcQYXE102YAPESBc6upNZA0ZoNA/iZHla/MITSIP7HnENyPz6Y2GqRQ+5Lc978wklD0embEpNVpntQGNrdBq2BlYC01JBghWMiyOA+XXkPZCA42y+wjpzMXA1wYcD5SGoTwJrDv+t3qw/AIGQaReKQVHppK9TmW/OZzwBCBDfJQUEKM+JY46bUJZebY4LR3NzUHXmp841qf0PXrCJ3VF0x88kraaOAoUYn3h+VVj906FifUS9AP/Ewwxn5MH9yZL40oj5lVR6nDgbFL3LmHR2Wh8xDA9+kPqSSp7Hx/cGj3VJ9daE4+4w2lTDFZwu4gF9UtXjW/IyCpp2Z708/+n0A1okmZMfgamvnw/fMqra+SP1Iakc7PD1RSY+/JUYNvDJ0oObshx+AH3drcfa3GbqLyKp1I1t6MG+yzH2VRHvb9CW9QS837XSyZ19qOY9Y9XfYpeoqoiWumLpBPZQqTlJaguQN1OyZeLXFxYyLrJo9u/E2rsjp0D8vzla5ZJRc3+5r/TTQINbaQL3IXaY5Xwl0fbmWtoVRGWongzVWK0H07XwXAQVp0n0sZ7zUdVIiZzFoXAGrzbQIG7FfKEHvUG8GpMP8isaaGUyVb+qJH+8/J/mDRyQyNZFZn+FPUGixqi1MsFJerKEIXgF+unSSoR332CXz3dVT5dkaSKilrH68BP3uFIIZSC1ppEBUva95KVgXHEvbIUkyDH88ZSGK+GiLaKcy1Yu4bYz95V9Io6FqVJtj/iWbV8ixkpEmFmtFkubQgxA==" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" type="text/css" /><title>Matrix LU Decomposition and Condition</title>
        <link href="../Resources/TableStyles/o_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/p_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/Stylesheets/BookStyles.css" rel="stylesheet" type="text/css" />
        <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapLiveHelpUtilities.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapLiveHelpBody.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapAddCommentDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapReplyCommentDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapRegisterUserDialog.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../Default_CSH.htm#CH10 - Functions - Matrix Math/Matrix LU Decomposition.htm" style="">Open topic with navigation</a>
        </p>
        <h2><a name="kanchor773"></a>Matrix LU Decomposition and Condition</h2>
        <p class="API_name"><a name="cmat_lud_decx"></a><a name="kanchor774"></a>cmat_lud_decx(), <a name="zmat_lud_decx"></a><a name="kanchor775"></a>zmat_lud_decx()<MadCap:conditionalText MadCap:conditions="Default.OpenSALonly">, <a name="cmat_lud_decdx"></a>cmat_lud_decdx(), <a name="zmat_lud_decdx"></a>zmat_lud_decdx()</MadCap:conditionalText></p>
        <p class="Image"><span style="font-family: serif;">C</span><sub><span style="font-family: serif;">p[i]j</span></sub><span style="font-family: serif;"> = (L • U)</span><sub><span style="font-family: serif;">ij</span></sub> with reciprocal diagonal elements in <i>U</i></p>
        <p class="API_heads">Syntax</p>
        <table style="width: 500px;caption-side: top;mc-table-style: url('../Resources/TableStyles/o_Code.css');" class="TableStyle_o_Code" cellspacing="0">
            <col style="width: 55px;" />
            <col style="width: 123px;" />
            <col style="width: 340px;" />
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">SAL_i32 <b>cmat_lud_decx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input/output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 C_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* matrix C column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 *P,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output permutation vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 n,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* row and column count for C, element count for D */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *rcond,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ptr to estimate of cond.number reciprocal */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *v,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* minimizing vector for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* type of condition estimate */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">SAL_i32 <b>zmat_lud_decx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input/output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 C_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* matrix C column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 *P,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output permutation vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 n,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* row and column count for C, element count for D */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *rcond,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ptr to estimate of cond.number reciprocal */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *v,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* minimizing vector for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* type of condition estimate */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">SAL_i32 <b>cmat_lud_decdx</b>(</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf64 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input/output matrix */</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 C_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd"> /* matrix C column stride */</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 *P,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd"> /* output permutation vector */</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 n,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd"> /* row and column count for C, element count for D */</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *rcond,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd"> /* ptr to estimate of cond.number reciprocal */</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf64 *v,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd"> /* minimizing vector for C */</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* type of condition estimate */</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd"> /* ESAL flag */</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">SAL_i32 <b>zmat_lud_decdx</b>(</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd"> /* input/output matrix */</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 C_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd"> /* matrix C column stride */</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 *P, </td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output permutation vector */</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 n, </td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* row and column count for C, element count for D */</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *rcond,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd"> /* ptr to estimate of cond.number reciprocal */</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *v, </td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* minimizing vector for C */</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd"> /* type of condition estimate */</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd"> /* ESAL flag */</td>
            </tr>
        </table>
        <p class="API_heads">Description</p>
        <p class="Body">The <MadCap:conditionalText MadCap:conditions="Default.OpenSALonly">cmat_lud_decx(), cmat_lud_decdx(), zmat_lud_decx(), and zmat_lud_decdx() functions</MadCap:conditionalText> perform an LU decomposition of a square matrix. Output matrix <i>C </i>consists of two matrices: </p>
        <ul>
            <li value="1"><i>L </i>(occupies the lower left half of <i>C</i>)</li>
            <li value="2"><i>U </i>(occupies the upper right half of <i>C</i>)</li>
        </ul>
        <p class="Body">The diagonal elements of the submatrix <i>L </i>are assumed to be 1 and are not stored in <i>C</i>. The diagonal elements of the submatrix <i>U </i>are presented as reciprocals to expedite iterative solving of the <i>C </i>· <i>x </i>= <i>b </i>equation systems.</p>
        <p class="API_heads">Parameters</p>
        <p class="Parameter">C, C_tcols</p>
        <p class="Body1">Input/output matrix and its column element stride. The output matrix overwrites the input matrix with a packed format.</p>
        <p class="Parameter">P</p>
        <p class="Body1">Permutation vector created by the function. Output.</p>
        <p class="Parameter">n</p>
        <p class="Body1">Row and column count for <i>C</i>, element count for <i>P</i>.</p>
        <p class="Parameter">rcond</p>
        <p class="Body1">Pointer to the estimate of reciprocal of 1-norm or infinity-norm condition number of <i>C</i>, or reciprocal of componentwise condition number of <i>C</i>, depending on the flag setting.</p>
        <p class="Parameter">v</p>
        <p class="Body1">Minimizing vector, sometimes referred to as an “approximate null vector” when <i>C </i>is ill-conditioned.</p>
        <p class="Parameter">flag</p>
        <p class="Body1">Specify one of the following condition estimate options:</p>
        <p class="Body1"><span style="font-family: monospace;">SAL_COND_EST_NONE</span>
        </p>
        <p class="Body2">Do not compute condition estimate (default). Use this option to get best performance if you know that the matrix is well-conditioned.</p>
        <p class="Body2">When this option is selected, no memory has to be allocated for the corresponding outputs, rcond and <i>v</i>, and the pointers are permitted to be <code>NULL</code>.</p>
        <p class="Body1"><span style="font-family: monospace;">SAL_COND_EST_1_NORM</span>
        </p>
        <p class="Body2">Estimate 1-norm condition number.</p>
        <p class="Body1"><span style="font-family: monospace;">SAL_COND_EST_INF_NORM</span>
        </p>
        <p class="Body2">Estimate infinity-norm condition number.</p>
        <p class="Body1"><span style="font-family: monospace;">SAL_COND_EST_COMPONENT</span>
        </p>
        <p class="Body2">Estimate componentwise condition number.</p>
        <p class="API_heads">Returns</p>
        <p class="Parameter">SAL_SUCCESS</p>
        <p class="Body1">Successful execution.</p>
        <p class="Body1">Other return values</p>
        <p class="Body1">A floating point exception is detected. The resulting matrix is unusable.</p>
        <p class="RelatedTopics" MadCap:autonum="Related Topics"><span class="autonumber"><span>Related Topics</span></span>&#160;</p>
        <p class="Body"><a href="../CH01 - Introduction/Calling_Conventions.htm#Address_strides" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>Address Strides</i></span></a>
        </p>
        <p class="Body"><a href="../CH03 - Matrix Decomposition/Intro_matrixdecomp.htm#top" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>Matrix Decompositions and Condition Numbers</i></span></a>&#160;</p>
        <p class="Body"><a href="../CH03 - Matrix Decomposition/Terms.htm#Reciproc" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>Reciprocal Diagonal Convention</i></span></a>&#160;</p>
        <p class="RelatedFunctions" MadCap:autonum="Related Functions"><span class="autonumber"><span>Related Functions</span></span>&#160;</p>
        <p class="Body"><a href="Matrix LU Solution.htm#mat_lud_solx" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>mat_lud_solx(), mat_lud_soldx()</i></span></a>
        </p>
        <p class="Body"><a href="Matrix LU Solution - Complex.htm#cmat_lud_solx" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>cmat_lud_solx(), cmat_lud_soldx(), zmat_lud_solx(), zmat_lud_soldx()</i></span></a>
        </p>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script><iframe id="topiccomments" name="topiccomments" title="Topic Comments" src="../../Skin/TopicComments.htm" frameborder="0" style="width: 100%; height: 0px; margin-top: 12px;"></iframe>
    </body>
</html>