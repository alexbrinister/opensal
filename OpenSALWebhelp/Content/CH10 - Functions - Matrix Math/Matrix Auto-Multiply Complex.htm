<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="4" MadCap:lastHeight="743" MadCap:lastWidth="654" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Functions - Matrix Math|Matrix Complex Functions" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:liveHelp="X1yuBGU5CUtOyQ/2OIbIs5UnZLDn+dAAUxQ3R9wH55HTWRXmPGr9TYGqvUdEE/CAUNEzzzE1Ehe61/J2OB1gqgtZwjwodnsJ1NvK+EuQdzgwWfaykxtEBaMbZfitqtRuZUcCs1silZKU70ly1wnQzsS4z3akGBypEIMPse5wBRD2b+ANWrNNEtUGtzpaTeDuk+XBVWaqlS7aGT7vnr/8mia+P4pPo/F9azceukY8zOUofYe0xiwz0pH9ZWbP5h7SYhvuUZTf73qyAjp0DjU5aHRwipRmaiUog5JJaXufXoN1ap0hhYMuHQykOZHoF7xUhi4a8YZ135YQI9PewnQotGpSQrAEtwup9Jh7YQ2QFz/Po9SFr0ZQRLHhL+7A8Aau7J3UYq9DMgMPpFAazmO0s106mHWiZRQ4iFBJW4HSEM7PqfSvhVLZjFlbWQP4Jm/MujPmQAb5nlkqAkWi2FdcYGyjtgTmET2l+ZK3/c63SP1BE9qcfo7QZRAFcloh5Vy9FwbHGZhtkI7LtyJOoy7F3jEJBiGVPGeds5Uk9C7yXTNCVTvnNfMlPXmimMrOAfB1VeoD4aY2pY3/hkRP6HBPXkNrPW2fTqBQsjyWEl/frRKEARPM14OITOwr9sxm5BE1Fyfmp7GbOtOuvgwydgE9K1ikKhpNHX5ZsMVvNQ8g6D8IgUQIda1+aYuO9Y1jSV0g6QqlD4Xjdgty0Rj8fi2Xx6r65WAO70z6UZPs8oiDxuPVSx1UAV8thWLjqEC1kgh2aO0Uvb7J+S2fovsaBA8F8giKPIf8tzNNj6hmJOGnghJAjb0GC7eu/p82fHyUukygQMLay7PdyTZlSU2XSXji5WcQgbfaDm08Edjvhd+Q9UTMUdPX2/tHK1t2qQsf/nmrVRKRdol2o7FxyyzrxNPGbn5/5OT3O7OLHOiVzqMINkZsPZ7g0rw0WQ84KSYMlCTb5ZzzCeLyYVKsabmiJSY3T+wHS4x7mgAy5yJOD94We4P6PgD1fEWPkK+DZe5YUdB/Vu2FOU4mxHllM44QNRdZFSSxVdHF+TBIu98Ived84JQ3l8KWKKXBFX51iFF9ptFgAKSiSVKV/uMCwba16Wf/bneBWqMXfD0yrSbziH34lSgIuzrJe+eaD6NCRiwLPIYTFRo7kCpWOglTzN9nTkoZGioPQdF+pYZw7uMI2qk4SsAV/8x/PmalxcEiZe4x2IANJ2fNCXHukoNltrDDOtLn7FdXUaNXN64iIUXHYd5eVhQXMOH+/mrVwuOrWXUK9ZJrWXJJBHQAU4XpkQ69kuSEnlkJqLlu2l+W4FuH/v3LcXAG0nU4f2xNok4TWQ3eP+nHEMS9nCbCsRaAhgxzHECXZQ==" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" type="text/css" /><title>Matrix Auto-Multiply; Matrix Covariance, Complex</title>
        <link href="../Resources/TableStyles/o_CodeIndent.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/o_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/p_CodeIndent.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/p_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/Stylesheets/BookStyles.css" rel="stylesheet" type="text/css" />
        <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapLiveHelpUtilities.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapLiveHelpBody.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapAddCommentDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapReplyCommentDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapRegisterUserDialog.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../Default_CSH.htm#CH10 - Functions - Matrix Math/Matrix Auto-Multiply Complex.htm" style="">Open topic with navigation</a>
        </p>
        <h2><a name="kanchor763"></a>Matrix Auto-Multiply; Matrix Covariance, Complex</h2>
        <p class="API_name"><a name="cmat_auto_mulx"></a><a name="kanchor764"></a>cmat_auto_mulx(), <a name="cmat_auto_muldx"></a><a name="kanchor765"></a>cmat_auto_muldx(), <a name="zmat_auto_mulx"></a><a name="kanchor766"></a>zmat_auto_mulx(), <a name="zmat_auto_muldx"></a><a name="kanchor767"></a>zmat_auto_muldx()</p>
        <p class="Image">C = A (or A<sup>T</sup>, A<sup>H</sup>, or A*) • A (or A<sup>T</sup>, A<sup>H</sup>, or A*);</p>
        <p class="API_heads">Syntax</p>
        <table style="width: 500px;caption-side: top;mc-table-style: url('../Resources/TableStyles/o_Code.css');" class="TableStyle_o_Code" cellspacing="0">
            <col style="width: 55px;" />
            <col style="width: 149px;" />
            <col style="width: 328px;" />
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">SAL_i32 <b>cmat_auto_mulx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 A_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 C_tcols</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 n_c,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* number of rows and columns in C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* dot-product length */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 mflag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* accumulation/conjugation/transpose flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">SAL_i32 <b>cmat_auto_muldx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf64 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 A_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf64 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 C_tcols</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 n_c,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* number of rows and columns in C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* dot-product length */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 mflag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* accumulation/conjugation/transpose flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">SAL_i32 zmat_auto_mulx(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 A_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 C_tcols</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 n_c</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* number of rows and columns in C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* dot-product length */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 mflag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* accumulation/conjugation/transpose flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">SAL_i32 zmat_auto_muldx(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 A_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 C_tcols</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 n_c,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* number of rows and columns in C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* dot-product length */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 mflag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* accumulation/conjugation/transpose flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
        </table>
        <p class="API_heads">Description</p>
        <p class="Body">The  cmat_auto_mulx(), cmat_auto_muldx(), zmat_auto_mulx(), and zmat_auto_muldx() functions auto-multiply the source matrix <i>A </i>and place the result in (or add the result to, depending on <i>mflag </i>settings) the destination square matrix <i>C</i>. The <i>mflag </i>argument controls the multiplication settings. These functions execute out-of-place only.</p>
        <p class="Body">For <i>A </i>· <i>A </i>and <i>A<sup>T</sup> <![CDATA[ ]]></i>· <i>A<sup>T</sup> <![CDATA[ ]]></i>multiplications, the input matrix must be square (<i>N </i>== <i>n_c</i>).</p>
        <p class="Body">For <i>A<sup>T</sup> <![CDATA[ ]]></i>· <i>A </i>and <i>A </i>· <i>A<sup>T</sup> <![CDATA[ ]]></i>multiplications, the input matrix can be rectangular.</p>
        <p class="API_heads">Parameters</p>
        <p class="Parameter">n_c</p>
        <p class="Body1">The number of rows and columns in <i>C </i>(which is always a square matrix) and number of rows or columns in <i>A</i>, depending on the <i>mflag </i>settings:</p>
        <ul>
            <li class="BulletIndent" value="1">Number of rows and columns in <i>A </i>if neither (<i>A </i>· <i>A</i>) or if the <code>SAL_TRANSPOSE_LEFT </code>and <code>SAL_TRANSPOSE_RIGHT </code>options are set (<i>A<sup>T</sup> <![CDATA[ ]]></i>· <i>A<sup>T</sup></i>).</li>
            <li class="BulletIndent" value="2">Number of rows in <i>A </i>if the <code>SAL_TRANSPOSE_RIGHT </code>option only is set (<i>A </i>· <i>A<sup>T</sup></i>).</li>
            <li class="BulletIndent" value="3">Number of columns in <i>A </i>if the <code>SAL_TRANSPOSE_LEFT </code>option only is set (<i>A<sup>T</sup> <![CDATA[ ]]></i>· <i>A</i>).</li>
        </ul>
        <p class="Parameter">N</p>
        <p class="Body1">Dot-product lengths. The other than <i>n_c</i> dimension of matrix <i>A</i>, if allowed, depending on the <i>mflag </i>settings.</p>
        <ul>
            <li class="BulletIndent" value="1">If neither of, or both of the <code>SAL_TRANSPOSE_LEFT and SAL_TRANSPOSE_RIGHT </code>options are set (<i>A </i>· <i>A </i>or <i>A</i><sup style="font-style: italic;">T</sup><i> · A</i><sup style="font-style: italic;">T</sup>): matrix <i>A </i>must be square, and <i>N </i>must be equal to <i>n_c.</i> Otherwise, the function returns <code>SAL_INVALID_ARGUMENT</code>.</li>
            <li class="BulletIndent" value="2">If the <code>SAL_TRANSPOSE_LEFT </code>option only is set (<i>A</i><sup style="font-style: italic;">T</sup><i> · A</i>): <i>N </i>is the number of rows in <i>A </i>and does not have to be equal to <i>n_c</i>.</li>
            <li class="BulletIndent" value="3">If the <code>SAL_TRANSPOSE_RIGHT </code>option only is set (<i>A · A</i><sup style="font-style: italic;">T</sup>): <i>N </i>is the number of columns in <i>A </i>and does not have to be equal to <i>n_c</i>.</li>
        </ul>
        <p class="Parameter">mflag</p>
        <p class="Body1">Auto-multiplication parameters. These options can be ORed together.</p>
        <p class="ParameterIndent">0</p>
        <p class="Body2">No accumulation, conjugation, or transposition requested (default).</p>
        <p class="ParameterIndent">SAL_ACCUMULATE</p>
        <p class="Body2">Add the auto-multiplication result to the current content of <i>C</i>.</p>
        <p class="ParameterIndent">SAL_CONJUGATE_LEFT</p>
        <p class="Body2">Conjugate the left instance of the input matrix <i>A</i>. The mat_auto_mulx() and mat_auto_muldx() functions ignore this option.</p>
        <p class="ParameterIndent">SAL_CONJUGATE_RIGHT</p>
        <p class="Body2">Conjugate the right instance of the input matrix <i>A</i>. The mat_auto_mulx() and mat_auto_muldx() functions ignore this option.</p>
        <p class="ParameterIndent">SAL_TRANSPOSE_LEFT</p>
        <p class="Body2">Transpose the left instance of the input matrix <i>A </i>and calculate <i>A<sup>T</sup> · A</i>.</p>
        <p class="ParameterIndent">SAL_TRANSPOSE_RIGHT</p>
        <p class="Body2">Transpose the right instance of the input matrix <i>A </i>and calculate <i>A · A<sup>T</sup></i>.</p>
        <p class="API_heads">Examples</p>
        <p class="Body1" style="font-weight: bold;">Simple Auto-Multiply</p>
        <table class="TableStyle_o_CodeIndent" style="caption-side: top; mc-table-style: url('../Resources/TableStyles/o_CodeIndent.css');" cellspacing="0">
            <col style="width: 321px;" />
            <tbody>
                <tr>
                    <td class="TableStyle_o_CodeIndent_Body_0_0_RowEnd_ColEnd">rc = mat_auto_mulx(A,i,C,k,N,N,0,SAL_CC);</td>
                </tr>
            </tbody>
        </table>
        <p class="Body1"><i>C = A · A</i>
        </p>
        <p class="Body1">No <code>SAL_TRANSPOSE_xxx </code>flags are specified. Matrix <i>A </i>must be square (<i>N </i>x <i>N</i>).</p>
        <p class="Body1" style="margin-top: 14pt;"><b>Covariance</b>
        </p>
        <table class="TableStyle_o_CodeIndent" style="mc-table-style: url('../Resources/TableStyles/o_CodeIndent.css');width: 320px;caption-side: top;" cellspacing="0">
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_o_CodeIndent_Body_0_0_RowEnd_ColEnd">
                        <p>rc = cmat_auto_mulx(A,i,C,k,N,2N,</p>
                        <p>SAL_CONJUGATE_LEFT |</p>
                        <p>SAL_TRANSPOSE_LEFT,</p>
                        <p>SAL_CC);</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p class="Body1">C<i> = A</i><sup style="font-style: italic;">T*</sup><i> · A = A</i><sup style="font-style: italic;">H</sup><i> · A</i></p>
        <p class="Body1">One of the <code>SAL_TRANSPOSE_xxx </code>flags is specified, therefore, matrix <i>A </i>can be rectangular (<i>N </i>x <i>2N </i>in this instance). Note that matrix <i>C </i>is a covariance matrix of <i>A</i>.</p>
        <p class="Body1" style="font-weight: bold;margin-top: 14pt;">Cumulative Transposed Auto-Multiply</p>
        <table class="TableStyle_o_CodeIndent" style="mc-table-style: url('../Resources/TableStyles/o_CodeIndent.css');width: 321px;caption-side: top;" cellspacing="0">
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_o_CodeIndent_Body_0_0_RowEnd_ColEnd">
                        <p>rc = zmat_auto_mulx(A,i,C,k,N,N,</p>
                        <p>SAL_ACCUMULATE |</p>
                        <p>SAL_TRANSPOSE_LEFT |</p>
                        <p>SAL_TRANSPOSE_RIGHT,</p>
                        <p>SAL_CC);</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p class="Body1">C = C + AT· AT</p>
        <p class="Body1">Both the <code>SAL_TRANSPOSE_LEFT </code>and <code>SAL_TRANSPOSE_RIGHT </code>flags are specified, therefore, matrix <i>A </i>must be square (<i>N </i>x <i>N</i>). The product will be added to the existing matrix <i>C</i>.</p>
        <p class="API_heads">Returns</p>
        <p class="Parameter">SAL_SUCCESS</p>
        <p class="Body1">Successful execution.</p>
        <p class="Parameter">SAL_INVALID_ARGUMENT</p>
        <p class="Body1">Argument <i>N </i>is not equal to <i>n_c</i>, but neither or both <code>SAL_TRANSPOSE_LEFT </code>and <code>SAL_TRANSPOSE_RIGHT </code>is set, and the left and right input matrices cannot be multiplied as a result.</p>
        <p class="RelatedTopics" MadCap:autonum="Related Topics"><span class="autonumber"><span>Related Topics</span></span>&#160;</p>
        <p class="Body"><a href="../CH01 - Introduction/Calling_Conventions.htm#Address_strides" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>Address Strides</i></span></a>
        </p>
        <p class="RelatedFunctions" MadCap:autonum="Related Functions"><span class="autonumber"><span>Related Functions</span></span>&#160;</p>
        <p class="Body"><a href="Matrix Auto Multiply - Float.htm#mat_auto_mulx" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>mat_auto_mulx(), mat_auto_muldx()</i></span></a>
        </p>
        <p class="Body"><a href="Matrix Multiply Column Strides Float Dbl.htm#mat_mulx" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>mat_mulx(), mat_muldx()</i></span></a>
        </p>
        <p class="Body"><a href="Matrix Multiply Column Strides Complex.htm#cmat_mulx" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>cmat_mulx(), cmat_muldx(), zmat_mulx(), zmat_muldx()</i></span></a>
        </p>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script><iframe id="topiccomments" name="topiccomments" title="Topic Comments" src="../../Skin/TopicComments.htm" frameborder="0" style="width: 100%; height: 0px; margin-top: 12px;"></iframe>
    </body>
</html>