<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="3" MadCap:lastHeight="2976" MadCap:lastWidth="613" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Functions - Matrix Math|Matrix Complex Functions" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:liveHelp="PbnaDO4dU0kvYyj6qtPHAxd34a7H+DpDaQUU5g7iWGeCts21A345qoxDz5FvC19PQ1UgS0V8p7dyrbiFU0MB7+TA6vtktTlU1Suuzz+sd/ROZihJys9d5xEfUr6NZG0Gw02Wt/gv14aWJ34V8iY9wUFBHf0VcLek+VeF2iyN8pKbnwYIxRjKt8LZeTAN1+p4ns38cnx731L0bww2utu16ArB+o2J9hrBhsQmHqRhT7jPCVx2Vcb+y7LmiQ69XfY2+Pfv+x2ktqKe5oiluExwPB+rjjC0L4w+4bjQX+smw1tBNKpp++fw1yhuHKN/+q91uU2Y3T0hPkZzXAXaqRkoWBKACHJq5kvCLfFcct+Yw4n0zwNddRNWsB5lCEs4/0rFpCONOjLf/Sahd0Ra0EsdX2Nw5iESex2Ujlu7ynWpy3fFkv7rkCSe8IYg4oYo1eGVF69CX/XsTNkJFDR7ejenyuZh33j2YFhNixUay03pX4wQecRqyK3lKBrc/gcMkfJqnDYf+WF857d4MDk2UH//u6VRYgwsTqHNaPLKiFZNiaT10AfJjZg6hXVjbNjL40xvZ/YP1FmijZrGZ8gD49IhiwhPY5ivEhrk4siOtsKooLOCEcA+5isk0w/ZC8F0raDERDks9gmmQ1uGDPeQSBOIeW0xtYZ7PDfvRHN5TMOyygEKXDbAz1OZp0GkIZmJ9n05I1nKR8EtMxYyQLkY7kkBcLvFzCWssjBS9sGKCIoJ7aVqe8UrBC+DSIMgKaRCAO3LHNOvwv6mShXsb4+FsaNSaKOXalcnKj7SyatnmOKkSKhupSqYUyorM0IX8gby2sub5j4d2Eq8eXYwSTRKg4V7NarfOaJDQUQRIxQX1PVXlS85BzvPMIkETPywqEU6y3P7Ep2VEulStHmsqI0upd1etA5Ns/Qs7URYIpkdxRGDsf6qckZA1lVQosLaWGODfjJhT3U4vXofw3p39Qnl+rqy9iEBPwcjliCMEfOviPIKQxiXrQhfEkEGTzEc+qaVlb/FTz2FbxzGIfTP9681V4ajzbAvdgZzfDMkfUt/3I2vdUGsHTdm7rmQwsOaHlRwC0YLCknpSnb9yiJJ2HJLvwxAe4jBwUS31zEZSkVKzgqLlOhIkEeK39Qgl0jRKFywAn+cQMcMLLocfMS4bX9UPD2DgbRQfQ0gTW8Mjob/qF3twsaOQcb+rFaFWZNZHu7N4/jR2yM1oqNOXoYUTI1cihfDQnOJcTpdxdnSGYucCvNTPsxDJd2QOfVfQA0HI2OtJnM+RaS4gQ40Fy6HED+1SVGZMs0aBOEG0t/292Uco+gfJtlUTcJYlqcGXKbXBOpIfZmaUJYr4i/dxWMNWBPzrUCRYg==" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" type="text/css" /><title>Matrix Modified Gram-Schmidt QR Solutions</title>
        <link href="../Resources/TableStyles/o_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/p_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/Stylesheets/BookStyles.css" rel="stylesheet" type="text/css" />
        <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapLiveHelpUtilities.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapLiveHelpBody.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapAddCommentDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapReplyCommentDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapRegisterUserDialog.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../Default_CSH.htm#CH10 - Functions - Matrix Math/Matrix MGS QR Solutions - Complex.htm" style="">Open topic with navigation</a>
        </p>
        <h2><a name="kanchor782"></a>Matrix Modified Gram-Schmidt QR Solutions</h2>
        <p class="API_name"><a name="cmat_mgs_solrx"></a><a name="kanchor783"></a>cmat_mgs_solrx()<MadCap:conditionalText MadCap:conditions="Default.OpenSALonly">, <a name="cmat_mgs_solrdx"></a>cmat_mgs_solrdx()</MadCap:conditionalText>, <a name="cmat_mgs_solrhrx"></a><a name="kanchor784"></a>cmat_mgs_solrhrx()<MadCap:conditionalText MadCap:conditions="Default.OpenSALonly">, <a name="cmat_mgs_solrhrdx"></a>cmat_mgs_solrhrdx()</MadCap:conditionalText>, <a name="zmat_mgs_solrx"></a><a name="kanchor785"></a>zmat_mgs_solrx()<MadCap:conditionalText MadCap:conditions="Default.OpenSALonly">, <a name="zmat_mgs_solrdx"></a>zmat_mgs_solrdx()</MadCap:conditionalText>, <a name="zmat_mgs_solrhrx"></a><a name="kanchor786"></a>zmat_mgs_solrhrx()<MadCap:conditionalText MadCap:conditions="Default.OpenSALonly">, <a name="zmat_mgs_solrhrdx"></a>zmat_mgs_solrhrdx()</MadCap:conditionalText></p>
        <p class="Image" style="font-family: serif;">R · x = b;           R<sup>H</sup> <![CDATA[ ]]>· R · x = b;</p>
        <p class="API_heads">Syntax</p>
        <table style="caption-side: top;mc-table-style: url('../Resources/TableStyles/o_Code.css');" class="TableStyle_o_Code" cellspacing="0">
            <col style="width: 55px;" />
            <col style="width: 130px;" />
            <col style="width: 315px;" />
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>cmat_mgs_solrx</b> (</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *R,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 R_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* matrix R column element stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *B,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector, right-hand side values */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *X,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* vector of unknowns */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 n,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* number of rows and columns in R */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* solver flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>cmat_mgs_solrdx</b> (</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf64 *R,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 R_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* matrix R column element stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf64 *B,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector, right-hand side values */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf64 *X,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* vector of unknowns */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 n,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* number of rows and columns in R */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* solver flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>cmat_mgs_solrhrx</b> (</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *R,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 R_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* matrix R column element stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *B,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector, right-hand side values */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *X,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* vector of unknowns */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 n,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* number of rows and columns in R */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* solver flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>cmat_mgs_solrhrdx</b> (</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf64 *R,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 R_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* matrix R column element stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf64 *B,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector, right-hand side values */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf64 *X,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* vector of unknowns */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 n,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* number of rows and columns in R */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* solver flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>zmat_mgs_solrx</b> (</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *R,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 R_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* matrix R column element stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *B,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector, right-hand side values */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *X,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* vector of unknowns */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 n,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* number of rows and columns in R */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* solver flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>zmat_mgs_solrdx</b> (</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *R,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 R_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* matrix R column element stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *B,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector, right-hand side values */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *X,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* vector of unknowns */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 n,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* number of rows and columns in R */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* solver flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>zmat_mgs_solrhrx</b> (</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *R,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 R_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* matrix R column element stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *B,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector, right-hand side values */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *X,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* vector of unknowns */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 n,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* number of rows and columns in R */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* solver flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>zmat_mgs_solrhrdx</b> (</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *R,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 R_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* matrix R column element stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *B,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input vector, right-hand side values */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *X,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* vector of unknowns */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 n,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* number of rows and columns in R */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* solver flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
        </table>
        <p class="API_heads">Description</p>
        <p class="Body">The <MadCap:conditionalText MadCap:conditions="Default.OpenSALonly">cmat_mgs_solrx(), cmat_mgs_solrdx(), zmat_mgs_solrx(), and zmat_mgs_solrdx()</MadCap:conditionalText> functions solve triangular matrix systems of <i>n </i>equations in <i>n </i>unknowns <i>Rx </i>= <i>b </i>produced by the MGS QR decomposition functions. These functions accept an <i>n </i>x <i>n </i>input triangular matrix <i>R </i>and a right-hand side vector of known values <i>B</i>, and solve for the unknowns using back-substitution.</p>
        <p class="Body">The  <MadCap:conditionalText MadCap:conditions="Default.OpenSALonly">cmat_mgs_solrhrx(), cmat_mgs_solrhrdx(), zmat_mgs_solrhrx(), and zmat_mgs_solrhrdx()</MadCap:conditionalText> functions solve triangular matrix systems of n equations in n unknowns <i>R<sup>H</sup>Rx </i>= <i>b </i>produced by the MGS QR decomposition functions. These functions also accept an <i>n </i>x <i>n </i>input matrix <i>R </i>and a right-hand side vector of known values <i>B</i>, but solve for the unknowns by first solving <i>R<sup>H</sup>y </i>= b for y by forward substitution, and then <i>Rx </i>= <i>y </i>for <i>x </i>by back substitution. Matrix <i>R<sup>H</sup> <![CDATA[ ]]></i>is the conjugate transpose of a complex matrix <i>R</i>, also known as the Hermitian conjugate. Both halves of the <i>R </i>matrix (stored in <a href="../CH03 - Matrix Decomposition/LU_decomposition.htm#top" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>LU Decomposition</i></span></a> ) are used in this case.</p>
        <p class="Body">All of these MGS QR solvers require the special <i>R </i>matrix format. The <a href="Matrix MGS Decomposition.htm#cmat_mgs_decx">cmat_mgs_decx()</a>, <a href="Matrix MGS Decomposition.htm#cmat_mgs_decdx">cmat_mgs_decdx()</a>, <a href="Matrix MGS Decomposition.htm#zmat_mgs_decx">zmat_mgs_decx()</a>, and <a href="Matrix MGS Decomposition.htm#zmat_mgs_decdx">zmat_mgs_decdx()</a> MGS QRD functions produce the <i>R </i>matrix (stored in the special packed format described in <a href="../CH03 - Matrix Decomposition/LU_decomposition.htm#top" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>LU Decomposition</i></span></a> )&#160;that is required by the solver functions.</p>
        <p class="API_heads">Parameters</p>
        <p class="Parameter">R</p>
        <p class="Body1">Input matrix.</p>
        <p class="Parameter">R_tcols</p>
        <p class="Body1">Matrix <i>R </i>total number of columns.</p>
        <p class="Parameter">B</p>
        <p class="Body1">Input vector of right-hand side values.</p>
        <p class="Parameter">X</p>
        <p class="Body1">Vector of unknowns (solutions to <i>R </i>· <i>x </i>= <i>b </i>or <i>R<sup>H</sup> <![CDATA[ ]]></i>· <i>R </i>· <i>x </i>= <i>b</i>).</p>
        <p class="Parameter">n</p>
        <p class="Body1">Number of rows and columns in <i>R</i>.</p>
        <p class="Parameter">flag</p>
        <p class="Body1">Specify one of the following solver options:</p>
        <p class="Body1"><span style="font-family: monospace;">SAL_NORMAL_SOLVER</span>
        </p>
        <p class="Body2">Solve the <i>R </i>· <i>x </i>= <i>b </i>equation. (default)</p>
        <p class="Body1"><span style="font-family: monospace;">SAL_TRANSPOSE_SOLVER</span>
        </p>
        <p class="Body2">Solve the <i>R<sup>H</sup> <![CDATA[ ]]></i>· <i>R </i>· <i>x </i>= <i>b </i>equation.</p>
        <p class="API_heads">Returns</p>
        <p class="Parameter">SAL_SUCCESS</p>
        <p class="Body1">Successful execution.</p>
        <p class="Body1">Other return values</p>
        <p class="Body1">A floating point exception is detected.</p>
        <p class="RelatedFunctions" MadCap:autonum="Related Functions"><span class="autonumber"><span>Related Functions</span></span>&#160;</p>
        <p class="Body"><a href="Modified Gram-Schmidt QR Decomposition.htm#matmgs_dkerx" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>matmgs_dkerx(), matmgs_trx()</i></span></a>
        </p>
        <p class="Body"><a href="Modified Gram-Schmidt QR Decomposition - Complex.htm#cmatmgs_dkerx" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>cmatmgs_dkerx(), cmatmgs_trx(), zmatmgs_dkerx(), zmatmgs_trx()</i></span></a>
        </p>
        <p class="Body"><a href="Matrix MGS Decomposition and Condition.htm#mat_mgs_decx" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>mat_mgs_decx(), mat_mgs_decdx()</i></span></a>
        </p>
        <p class="Body"><a href="Matrix MGS Decomposition.htm#cmat_mgs_decx" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>cmat_mgs_decx(), cmat_mgs_decdx(), zmat_mgs_decx(), zmat_mgs_decdx()</i></span></a>
        </p>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script><iframe id="topiccomments" name="topiccomments" title="Topic Comments" src="../../Skin/TopicComments.htm" frameborder="0" style="width: 100%; height: 0px; margin-top: 12px;"></iframe>
    </body>
</html>