<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="4" MadCap:lastHeight="743" MadCap:lastWidth="654" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Functions - Matrix Math|Matrix Complex Functions" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:liveHelp="o5lPWEmWSo8E0gduQLIKDCftfZ1o6LLHoCsyWq8TP1CUORmER6CB2/O+ogC3G6OyTsUzI9NxfIDmohG5JHDkk8lrzfRQTjk3H9ge4Kw/Nw78bbt1efjsEtxYDWBRAoeSA8wJv1KJags8WGOkjSKWhdBFdrou9eseU7Yu8u8x2egrZuhKk2Yh2SvykrpmABZSKTnW7f8zPvcmLA65sLxXmsvOoViGKyoMUcx1nZCM6iLf5vHqfldbwR2lY7ParCnSWBIilf9C1sjSG5acqtWYoLxTPxupHuvsLcdN4pv7wIsFtdOzjGas8VVdv1sV6HrdkWcu9wVQPffRlR++VTVvv2s1Nq3STPTxACTFZ+qZK9or0j/9VKC1J8et5JYeEb+O6fsXvhIfSmU7Hzaqb8fPgdOCEO4Mo4kEjJ3mTIH51kOXzMlqavvEBbxVvmTA614ZeIdCEMB2JxDKnYh+oyLarwy+TVyf7NJ7hGHRGue7K04FtaSqDtNBE/sS4A1hbZAWkt4VpXTXhxVO929rZxmFmiYru+caE9olXVJvi+ciuIzDXKK3rkU3Nm4auyLKi5wusmWRggnovtVvyINTRFYeBr3peZpo9jH8S1BXit3MS4C0MC3rPlTwiUu/dLbw8E29Ab7E5Aj4QMqZEyGvQeI621cRbuBjdmbJPkXO0Xrb5WNP2M5AFbtFQuivQaIsKJ/TQoQKxbW4Wblhc4+ct/Mg19AwR0EFISbuCJjQTyb+RgSUYbcdkfSe0r9LjquW1akINu2onU0LeeKWskCwMnYKGyEpQ57OgOA99/n2KMWGCO2zv7vxLyOTOhA1jNxriUMBdZX6m9E8o6dwEHmMIy1IebAbDF67Pk7sAGwu7/tvVUnyHUq0QJvsSUSHz0GAYuWWdfdO9XaEdXL5H7wgmUNFBoJzbtGZldPkfvbLy7vOcCB/SA0lLg9/dT4y5oyNIKSIiM/DarIZhA0Rw8PpTa1EMefYWRPjz0hY1n9PDMuFDz1kpU1/9dLMqFLqNcwiXn/7SgLRgwa6bsPz52GelQY4xpTnoP0yPVSbgLDonaj+bREwO7BwtdEEuzYts2hNInXRi+hCo3U7F6RLKDB0PJGwhq/ucekrx4rbMTtXxIxd0q1rm3Yg0XMyITtjeaECuDCWtG2W+TSfhoSb/iiKjUVznDiKkKqBqanmCg2TfWealqW0lOCJDlAcmGGjvC8qveQVD6cLgjFZLhog3dzsh9pQSamkQTQNNKdUuto9HNs6lE66ghpAR82yrndpU7eWhSk6dP409YrNrK5ioaqNpBvo8jc7fUyg97DJTqUJC0w4nKPkxUOGDeCf/JU7VUK7uwl03eALeqLZlp5wB7ivdK8vsw==" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" type="text/css" /><title>Matrix Multiply, With Column Strides, Complex</title>
        <link href="../Resources/TableStyles/o_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/p_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/Stylesheets/BookStyles.css" rel="stylesheet" type="text/css" />
        <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapLiveHelpUtilities.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapLiveHelpBody.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapAddCommentDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapReplyCommentDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapRegisterUserDialog.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../Default_CSH.htm#CH10 - Functions - Matrix Math/Matrix Multiply Column Strides Complex.htm" style="">Open topic with navigation</a>
        </p>
        <h2><a name="kanchor768"></a>Matrix Multiply, With Column Strides, Complex</h2>
        <p class="API_name"><a name="cmat_mulx"></a><a name="kanchor769"></a>cmat_mulx(), <a name="cmat_muldx"></a><a name="kanchor770"></a>cmat_muldx(), <a name="zmat_mulx"></a><a name="kanchor771"></a>zmat_mulx(), <a name="zmat_muldx"></a><a name="kanchor772"></a>zmat_muldx()</p>
        <p class="Image">C = A (or A<sup>T</sup>, or A<sup>H</sup>, or A*) • B (or B<sup>T</sup>, or B<sup>H</sup>, or B*);</p>
        <p class="API_heads">Syntax</p>
        <table style="width: 500px;caption-side: top;mc-table-style: url('../Resources/TableStyles/o_Code.css');" class="TableStyle_o_Code" cellspacing="0">
            <col style="width: 55px;" />
            <col style="width: 125px;" />
            <col style="width: 327px;" />
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">SAL_i32 <b>cmat_mulx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* left input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 A_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* left input column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *B,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* right input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 B_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* right input column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 C_tcols</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 nr_c,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* rows count in C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 nc_c,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* column count in C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* dot-product length */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 mflag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* accumulation/conjugation/transpose flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">SAL_i32 <b>cmat_muldx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf64 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* left input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 A_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* left input column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf64 *B,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* right input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 B_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* right input column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf64 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 C_tcols</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 nr_c,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* rows count in C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 nc_c,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* column count in C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* dot-product length */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 mflag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* accumulation/conjugation/transpose flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">SAL_i32 <b>zmat_mulx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* left input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 A_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* left input column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *B,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* right input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 B_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* right input column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 C_tcols</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 nr_c,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* rows count in C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 nc_c,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* column count in C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* dot-product length */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 mflag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* accumulation/conjugation/transpose flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">SAL_i32 <b>zmat_muldx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* left input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 A_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* left input column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *B,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* right input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 B_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* right input column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 C_tcols</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 nr_c,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* rows count in C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 nc_c,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* column count in C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* dot-product length */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 mflag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* accumulation/conjugation/transpose flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
        </table>
        <p class="API_heads">Description</p>
        <p class="Body">The  cmat_mulx(), cmat_muldx(), zmat_mulx(), and zmat_muldx() functions multiply the source matrix <i>A </i>by the source matrix <i>B </i>and place the result in (or add to, depending on <i>mflag </i>settings) the destination matrix <i>C</i>. The <i>mflag </i>argument controls the multiplication settings. These functions execute out-of-place only.</p>
        <p class="API_heads">Parameters</p>
        <p class="Parameter">nr_c</p>
        <p class="Body1">The number of rows in <i>C</i>. By default, equal to the number of rows in <i>A </i>(number of columns in <i>A</i>, if the <code>SAL_TRANSPOSE_LEFT </code>option is specified).</p>
        <p class="Parameter">nc_c</p>
        <p class="Body1">Number of columns in <i>C</i>. By default, equal to the number of columns in <i>B </i>(number of rows in <i>B</i>, if the <code>SAL_TRANSPOSE_RIGHT </code>option is specified).</p>
        <p class="Parameter">N</p>
        <p class="Body1">Dot-product lengths. The other than <i>nr_c </i>dimension of matrix <i>A </i>(the number of columns in <i>A</i>, or the number of rows in <i>A </i>if the <code>SAL_TRANSPOSE_LEFT </code>option is specified). This parameter must be equal to the <i>nc_c</i> dimension of matrix <i>B </i>(the number of rows in <i>B</i>, or the number of columns in <i>B </i>if the <code>SAL_TRANSPOSE_LEFT </code>option is specified).</p>
        <p class="Parameter">mflag</p>
        <p class="Body2">Multiplication options. These options can be ORed together.</p>
        <p class="ParameterIndent">0</p>
        <p class="Body2">No accumulation, conjugation, or transposition requested (default).</p>
        <p class="ParameterIndent">SAL_ACCUMULATE</p>
        <p class="Body2">Add the multiplication result to the current content of <i>C</i>.</p>
        <p class="ParameterIndent">SAL_CONJUGATE_LEFT</p>
        <p class="Body2">Conjugate the input matrix <i>A</i>. </p>
        <p class="ParameterIndent">SAL_CONJUGATE_RIGHT</p>
        <p class="Body2">Conjugate the input matrix <i>B</i>.</p>
        <p class="ParameterIndent">SAL_TRANSPOSE_LEFT</p>
        <p class="Body2">Transpose the input matrix <i>A</i>.</p>
        <p class="ParameterIndent">SAL_TRANSPOSE_RIGHT</p>
        <p class="Body2">Transpose the input matrix <i>B</i>.</p>
        <p class="API_heads">Examples</p>
        <table style="caption-side: top;width: 500px;mc-table-style: url('../Resources/TableStyles/o_Code.css');" class="TableStyle_o_Code" cellspacing="0">
            <col style="width: 49px;" />
            <col style="width: 60px;" />
            <col />
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">rc = cmat_mulx(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="2">A,i,B,j,C,k,nr_c,nc_c,N,</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">SAL_CONJUGATE_LEFT |</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">SAL_TRANSPOSE_LEFT,</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">SAL_CC</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="2">);</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="2">C = AT* • B = AH • B</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">rc = zmat_mulx(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="2">A,i,B,j,C,k,nr_c,nc_c,N,</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">SAL_ACCUMULATE |</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">SAL_TRANSPOSE_LEFT |</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">SAL_TRANSPOSE_RIGHT,</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">SAL_CC</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="2">);</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="2">C = C + AT • BT</td>
            </tr>
        </table>
        <p class="API_heads">Returns</p>
        <p class="Parameter">SAL_SUCCESS</p>
        <p class="Body1">Successful execution.</p>
        <p class="Parameter">SAL_INVALID_ARGUMENT</p>
        <p class="Body1">A matrix dimension mismatch occurs if one of the following conditions exists:</p>
        <ul>
            <li class="BulletIndent" value="1">The number of rows in <i>C </i>does not equal the number of rows in <i>A </i>(number of columns in <i>A</i>, if the <code>SAL_TRANSPOSE_LEFT </code>option is specified)</li>
            <li class="BulletIndent" value="2">The number of columns in <i>C </i>does not equal the number of columns in <i>B </i>(number of rows in <i>B</i>, if the <code>SAL_TRANSPOSE_RIGHT </code>option is specified).</li>
        </ul>
        <p class="RelatedTopics" MadCap:autonum="Related Topics"><span class="autonumber"><span>Related Topics</span></span>&#160;</p>
        <p class="Body"><a href="../CH01 - Introduction/Calling_Conventions.htm#Address_strides" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>Address Strides</i></span></a>
        </p>
        <p class="RelatedFunctions" MadCap:autonum="Related Functions"><span class="autonumber"><span>Related Functions</span></span>&#160;</p>
        <p class="Body"><a href="Matrix Multiply Column Strides Float Dbl.htm#mat_mulx" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>mat_mulx(), mat_muldx()</i></span></a>
        </p>
        <p class="Body"><a href="Matrix Auto Multiply - Float.htm#mat_auto_mulx" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>mat_auto_mulx(), mat_auto_muldx()</i></span></a>
        </p>
        <p class="Body"><a href="Matrix Auto-Multiply Complex.htm#cmat_auto_mulx" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>cmat_auto_mulx(), cmat_auto_muldx(), zmat_auto_mulx(), zmat_auto_muldx()</i></span></a>
        </p>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script><iframe id="topiccomments" name="topiccomments" title="Topic Comments" src="../../Skin/TopicComments.htm" frameborder="0" style="width: 100%; height: 0px; margin-top: 12px;"></iframe>
    </body>
</html>