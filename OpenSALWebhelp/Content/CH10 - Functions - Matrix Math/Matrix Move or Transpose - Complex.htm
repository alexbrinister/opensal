<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="3" MadCap:lastHeight="732" MadCap:lastWidth="654" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Functions - Matrix Math|Matrix Complex Functions" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:liveHelp="QWZ1QIh6MTAjlAJUjCcGmbHsqi4ixOmHwlmoVGncRVnoynryp3E9pkQKEEJ0kee8WmGH43PnGt5mlmW3vx68OMSi4oZ7qPfS73UJsTiRG6qdnB7aarQkMivZfAWjBVz4N5XCq2mVs0o4Aq0vGLU910DIXrGpUczyYqvj9fN6kHwpKyu/BItnvenmDQR7QpAwt5prQ1v251OJhU0M61Q6UMX8TkdSgerAkflaXoAdooS9HeXgh+LtwGx4Cv8eAYXwDGTcEWG6ZywxB2YrGyCJ8zvxfzwRu8w3I5A4q/Yl4k5H81Hz70fO1/eWppZuKpHLV6gudjEVv4SwGoXQkMUZmxo3DtS3WJFPCl6ezHJLJvFFQwR6efr7tAvLgc3iS8SGI+Ge1dEa+uCeReqLh75k7cgjjWKLssYcw0/jIOn/NEEa4/pOvja78NcrhdRwF3Vx7RpUWl9JP4zCFsP/M/fgyN0YGEQ2AIuFDy1wO4SNwbeBh1KqLR6uqFGnXdl+Z7OdjH+sPhR/N5UvDmsRVohTQbLwL02E7HIfz/NuVB2vKlOaShi34edzTnD/AYBe85HzZZfl4eUv2+JnEa8VNF/BBDFCj4R1ApZfc8sfLxqNOvxv4ZSZvgL4zmy5XcaEY4WoywLs/9EQ618rGhqHp8YFNUw3FWnjRgbQRGsezMC4mPWmWVmjXEnDhcekoJUnNzQYb+FoghciVsZc8xunSkH1N5Q0rrtO8qMWL3VsqzkLOWz5mLlO/DOLZhDX4OsRN+M4M1xd7c+Y1zKReWQHKd+t28hvJz8wzObV0iOcfdhA/K/O7rG20u+YjNeCUq/9uTkWL8h4S5o5VCpMeNljj/vIWTk/LrazApgx10IU557hz6Qy355RKQHp2SOpwE+1MwrXPd4Gj0M+UGuBTxT3bMtkbvVKgsiSo3Vp3sgLoACIOuY7u8sZp8/arOmpVv7BJKOxCk91jagD8LxV67Y3MxfebmtLoobyDiegfFdHarIp/N+G28hJLQ7FFNAe1ehdWW89A+E+3gVutmUdK6qvOGp+HiBbpo185DOH1BR0ml5sohU6f09viXzO1nB8Xs+swsDX0LD561gLuqcuHh+zKVysCN9wgVgRgXQEi/fHlQoKykcTabgcPigvC9ON4IBATPQNYi6UoMosBUVOlv2XIxh/3nOyVQzHOA3O4Wc/ZwojxvnmmMbYlQ4Ok+qA4AY1/B95AC4/QGgUqqyBgA47Vky1b6X6k/dgqWpCWAUot4EVAsnjP7giROJd7gKfdNw9qJ/c0j1xA4l70G1RYgfLzRwDnCzuGHDDC0b+5O/6d4+gP71NCK2cyHZqzt/tX3OZfOOjJPcqtG5fcyQ1DCsVBoMpRQ==" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" type="text/css" /><title>Matrix or Submatrix Move or Transpose</title>
        <link href="../Resources/TableStyles/o_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/p_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/p_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/Stylesheets/BookStyles.css" rel="stylesheet" type="text/css" />
        <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapLiveHelpUtilities.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapLiveHelpBody.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapAddCommentDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapReplyCommentDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapRegisterUserDialog.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../Default_CSH.htm#CH10 - Functions - Matrix Math/Matrix Move or Transpose - Complex.htm" style="">Open topic with navigation</a>
        </p>
        <h2><a name="kanchor790"></a>Matrix or Submatrix Move or Transpose</h2>
        <p class="API_name"><a name="cmmovx"></a><a name="kanchor791"></a>cmmovx(), <a name="cmmovdx"></a><a name="kanchor792"></a>cmmovdx(), <a name="zmmovx"></a><a name="kanchor793"></a>zmmovx(), <a name="zmmovdx"></a><a name="kanchor794"></a>zmmovdx()</p>
        <p class="Image">
            <img src="../Resources/Images/SAL_funct_equat_160.jpg">
            </img>
        </p>
        <p class="API_heads">Syntax</p>
        <table style="mc-table-style: url('../Resources/TableStyles/o_Code.css');caption-side: top;width: 500px;" class="TableStyle_o_Code" cellspacing="0">
            <col style="width: 55px;">
            </col>
            <col>
            </col>
            <col>
            </col>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>cmmovx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 ax,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* x-stride for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 ay,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* y-stride for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 cx,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* x-stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 cy,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* y-stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 X,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element count in x-dimension of A and C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 Y,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element count in y-dimension of A and C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32  eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>cmmovdx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf64 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 ax,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* x-stride for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 ay,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* y-stride for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf64 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 cx,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* x-stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 cy,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* y-stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 X,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* elem. count in x-dimension of A and C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 Y,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* elem. count in y-dimension of A and C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>zmmovx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 ax,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* x-stride for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 ay,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* y-stride for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 cx,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* x-stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 cy,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* y-stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 X,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* elem. count in x-dimension of A and C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 Y,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* elem. count in y-dimension of A and C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32  eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>zmmovdx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 ax,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* x-stride for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 ay,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* y-stride for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 cx,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* x-stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 cy,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* y-stride for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 X,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element count in x-dimension of A and C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 Y,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* element count in y-dimension of A and C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
        </table>
        <p class="API_heads">Description</p>
        <p class="Body">The cmmovx(), cmmovdx(), zmmovx(), and zmmovdx() submatrix move functions move or transpose matrices or submatrices. These operations can be done out-of-place only.</p>
        <p class="API_heads">Parameters</p>
        <p class="Parameter">*A</p>
        <p class="Body1">Pointer to the start of the input submatrix.</p>
        <p class="Parameter">ax, ay</p>
        <p class="Body1">Row and column strides for matrix <i>A</i>. You can specify 0 (zero) for either of the input matrix strides (but not both) to indicate a certain frequently-used input matrix configuration. The value <i>ax</i> = <span style="font-family: serif;">0</span> is interpreted as <i>ax </i>= <i>Y </i>* <i>ay</i>, and the submatrix y-dimension is the entire input matrix y-dimension. The value <i>ay </i>= <span style="font-family: serif;">0</span> is interpreted as <i>ay </i>= <i>X </i>* <i>ax</i>, and the submatrix <i>x</i>-dimension is the entire input matrix <i>x</i>-dimension.</p>
        <p class="Parameter">*C</p>
        <p class="Body1">Pointer to the start of the output matrix.</p>
        <p class="Parameter">cx, cy</p>
        <p class="Body1">Row and column strides for matrix <i>C</i>. You can specify <span style="font-family: serif;">0</span> (zero) for either of the output matrix strides (but not both) to indicate a certain frequently-used output matrix configuration. The value <i>cx </i>= <span style="font-family: serif;">0</span> is interpreted as <i>cx </i>= <i>Y </i>* <i>cy</i>, and the submatrix <i>y</i>-dimension is the entire output matrix <i>y</i>-dimension. The value <i>cy </i>= <span style="font-family: serif;">0</span> is interpreted as <i>cy </i>= <i>X </i>* <i>cx</i>, and the submatrix <i>x</i>-dimension is the entire output <i>x</i>-dimension width.</p>
        <p class="Parameter">X</p>
        <p class="Body1">Number of columns to move from <i>A </i>to <i>C</i>.</p>
        <p class="Parameter">Y</p>
        <p class="Body1">Number of rows to move from <i>A </i>to <i>C</i>.</p>
        <p class="Body1">To avoid non-unique element indexing, make sure that in both of the following pairs at least one of two conditions is satisfied:</p>
        <p class="Body2"><i>ax &gt;= ay * Y</i>    or   <i>ay &gt;= ax * X</i></p>
        <p class="Body2"><i>cx &gt;= cy * Y</i>    or   <i>cy &gt;= cx * X</i></p>
        <p class="API_heads">Examples</p>
        <p class="Body">Strides for complex interleaved data are counted in half-elements. Therefore, similar calls appear different in complex split and interleaved routines.</p>
        <p class="CaptionNumChap_Example" MadCap:autonum="&lt;b&gt;Example 9-5: &lt;/b&gt;"><span class="autonumber"><span><b>Example 9-5: </b></span></span>Typical matrix move parameters</p>
        <table class="TableStyle_o_Code" style="mc-table-style: url('../Resources/TableStyles/o_Code.css');caption-side: top;width: 300px;" cellspacing="0">
            <col style="width: 383px;">
            </col>
            <tbody>
                <tr>
                    <td class="TableStyle_o_Code_Body_0_0_RowEnd_ColEnd">
                        <p>ax = cx = 1;</p>
                        <p>ay = cy = X;</p>
                        <p>cmmovx ( A, 2, 1000, C, 2, 1000, 500, 600, SAL_CC);</p>
                        <p>zmmovx ( A, 1,  500, C, 1,  500, 500, 600, SAL_CC);</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p class="CaptionNumChap_Example" MadCap:autonum="&lt;b&gt;Example 9-6: &lt;/b&gt;"><span class="autonumber"><span><b>Example 9-6: </b></span></span>Typical matrix transpose parameters</p>
        <table class="TableStyle_o_Code" style="mc-table-style: url('../Resources/TableStyles/o_Code.css');caption-side: top;width: 300px;" cellspacing="0">
            <col style="width: 402px;">
            </col>
            <tbody>
                <tr>
                    <td class="TableStyle_o_Code_Body_0_0_RowEnd_ColEnd">
                        <p>ax = cy = 1;</p>
                        <p>ay = X;</p>
                        <p>cx = Y;</p>
                        <p>cmmovx (A, 2, 1000, C, 1200, 2, 500, 600, SAL_CC);</p>
                        <p>- or -</p>
                        <p>cmmovx (A, 1000, 2, C, 2, 1200, 600, 500, SAL_CC);</p>
                        <p>zmmovx (A, 1, 500, C, 600, 1, 500, 600, SAL_CC);</p>
                        <p>- or -</p>
                        <p>zmmovx (A, 500, 1, C, 1, 600, 600, 500, SAL_CC);</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p class="Body">For a more direct approach to matrix transposition, use  <a href="Matrix Transpose - Complex.htm#cmtransx">cmtransx()</a>, <a href="Matrix Transpose - Complex.htm#cmtransx">cmtransdx()</a>, <a href="Matrix Transpose - Complex.htm#zmtransx">zmtransx()</a>, or <a href="Matrix Transpose - Complex.htm#zmtransdx">zmtransdx()</a>.</p>
        <p class="CaptionNumChap_Example" MadCap:autonum="&lt;b&gt;Example 9-7: &lt;/b&gt;"><span class="autonumber"><span><b>Example 9-7: </b></span></span>Typical submatrix move parameters</p>
        <table class="TableStyle_o_Code" style="mc-table-style: url('../Resources/TableStyles/o_Code.css');caption-side: top;width: 300px;" cellspacing="0">
            <col style="width: 404px;">
            </col>
            <tbody>
                <tr>
                    <td class="TableStyle_o_Code_Body_0_0_RowEnd_ColEnd">
                        <p>ax = cx = 1;</p>
                        <p>ay = cy = XX;					/* XX &gt; X */</p>
                        <p>cmmovx ( A, 2, 2000, C, 2, 2400, 500, 600, SAL_CC);</p>
                        <p>zmmovx ( A, 1, 1000, C, 1, 1200, 500, 600, SAL_CC);</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p class="CaptionNumChap_Example" MadCap:autonum="&lt;b&gt;Example 9-8: &lt;/b&gt;"><span class="autonumber"><span><b>Example 9-8: </b></span></span>Typical submatrix transpose parameters</p>
        <table class="TableStyle_o_Code" style="mc-table-style: url('../Resources/TableStyles/o_Code.css');caption-side: top;width: 300px;" cellspacing="0">
            <col style="width: 404px;">
            </col>
            <tbody>
                <tr>
                    <td class="TableStyle_o_Code_Body_0_0_RowEnd_ColEnd">
                        <p>ax = cy = 1;</p>
                        <p>ay = XX; 				/* XX &gt; X */</p>
                        <p>cx = YY; 				/* YY &gt; Y */</p>
                        <p>cmmovx (A, 2, 2000, C, 2400, 2, 500, 600, SAL_CC);</p>
                        <p>- or -</p>
                        <p>cmmovx (A, 2000, 2, C, 2, 2400, 600, 500, SAL_CC);</p>
                        <p>zmmovx (A, 1, 1000, C, 1200, 1, 500, 600, SAL_CC);</p>
                        <p>- or -</p>
                        <p>zmmovx (A, 1000, 1, C, 1, 1200, 600, 500, SAL_CC);</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p class="Body">For a more direct approach to submatrix transposition, use  <a href="Submatrix Transpose - Complex.htm#cmtrans2x">cmtrans2x()</a>, <a href="Submatrix Transpose - Complex.htm#cmtrans2dx">cmtrans2dx()</a>, <a href="Submatrix Transpose - Complex.htm#zmtrans2x">zmtrans2x()</a>,or <a href="Submatrix Transpose - Complex.htm#zmtrans2dx">zmtrans2dx()</a>.</p>
        <p class="RelatedTopics" MadCap:autonum="Related Topics"><span class="autonumber"><span>Related Topics</span></span>&#160;</p>
        <p class="Body"><a href="../CH01 - Introduction/Calling_Conventions.htm#Address_strides" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>Address Strides</i></span></a>&#160;</p>
        <p class="RelatedFunctions" MadCap:autonum="Related Functions"><span class="autonumber"><span>Related Functions</span></span>&#160;</p>
        <p class="Body"><a href="Matrix Move or Transpose.htm#mmovx" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>mmovx(), mmovdx()</i></span></a>&#160;</p>
        <p class="Body"><a href="Submatrix Transpose.htm#mtrans2x" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>mtrans2x(), mtrans2dx()</i></span></a>&#160;</p>
        <p class="Body"><a href="Submatrix Transpose - Complex.htm#cmtrans2x" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>cmtrans2x(), cmtrans2dx(), zmtrans2x(), zmtrans2dx()</i></span></a>
        </p>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script><iframe id="topiccomments" name="topiccomments" title="Topic Comments" src="../../Skin/TopicComments.htm" frameborder="0" style="width: 100%; height: 0px; margin-top: 12px;"></iframe>
    </body>
</html>