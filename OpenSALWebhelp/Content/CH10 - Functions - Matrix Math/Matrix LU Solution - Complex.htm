<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="4" MadCap:lastHeight="749" MadCap:lastWidth="654" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Functions - Matrix Math|Matrix Complex Functions" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:liveHelp="DvCAjqjAtepHMLBlCp1krqlSQw4EHu2yVEVQYW9jpmuxDD8yYS+GxpLJIQ5al7fVyv2hZBmhxXX3SZeLNqs3duXTGcq6+KwEtIEEOJ+QSaUuSkJoSM7+MR4PbILgepVTEiQTGCn2ccReEsORs8+OFSUYC7m+d68/oNXfpYSPExxrt/LYBKDuNlGitkfm1ptgFtJTSd62uykhtIo9pjGkMFGv3xj2K1L+AYkPE/fTc/SrV8fVKYCbf+A1vNLKdrj2CcJ0DJsA+fXh8Lil9oWZ99SGpFNydPuRrXZWAZafXWsEyy6XUP3bnapRCxdYwT8b9IADdzG35e83GVD1NKrgyFUjYLqCRAsaZgVoW9LmeFtKE3w5GGUT2dysdlBVLCClaj4QJQRKjsfLTFwWBIAKZzAnW7u3Moc4AZGeK7FgcRLyS3n5KYibcfXvjvz6psDIET6qbCSCYflEXYpCWIXmDwgvaHoF7gY2rXgb0NDrEQrnWxxDLeqGbq72cO87yBVBJbx6+GupqV5x2paZhAn5viatm99zrvJzfNs4FPdL6SemHIChztMfMEfgAdxXwiWpxAVi6/EnBFz8aVPy9s8nAZ91kSizn46kZex27I99uurzORu58CHx/1u3fv4iP8Vzza6KLF072/3lyugXhRx4DB7sUE5DCObD5JdVuerT+3pXJHn0DW2uiwVCns5GdX84kS2LpCrBxxwH2vTPAIh8Tlmrj0QDn55ZkRa028uyX19b2DJDrBZclNBIjdBPtRqRXieHxdWYFuY09yoLDS65Rf22qqEEblXjFgL9KgEAPuW9hoBxO0ICCySYAzUw/AdYfY4INPs73vOvb/55/0gokkJSdTPEpy1K6Eoi8bCKFM+NVK8/vUxNWRMT4RC+ilti5NJrWRo33MVM2koxhemnLE2J+BE+QFR3qjsDewoUBI/CdhWGv93OXfPXZAkXMfMeP95jr8hrb0T6+qBysG14HIZadxu3NU8ojRkB9WYiZ7jn9E6Zyocz93/FljkjpGUC" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" type="text/css" /><title>Matrix LU Solution</title>
        <link href="../Resources/TableStyles/o_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/p_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/Stylesheets/BookStyles.css" rel="stylesheet" type="text/css" />
        <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapLiveHelpUtilities.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapLiveHelpBody.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapAddCommentDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapReplyCommentDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapRegisterUserDialog.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../Default_CSH.htm#CH10 - Functions - Matrix Math/Matrix LU Solution - Complex.htm" style="">Open topic with navigation</a>
        </p>
        <h2><a name="kanchor776"></a>Matrix LU Solution</h2>
        <p class="API_name"><a name="cmat_lud_solx"></a><a name="kanchor777"></a>cmat_lud_solx()<MadCap:conditionalText MadCap:conditions="Default.OpenSALonly">, <a name="cmat_lud_soldx"></a>cmat_lud_soldx()</MadCap:conditionalText>, <a name="zmat_lud_solx"></a><a name="kanchor778"></a>zmat_lud_solx()<MadCap:conditionalText MadCap:conditions="Default.OpenSALonly">, <a name="zmat_lud_soldx"></a>zmat_lud_soldx()</MadCap:conditionalText></p>
        <p class="API_heads">Syntax</p>
        <table style="width: 500px;caption-side: top;mc-table-style: url('../Resources/TableStyles/o_Code.css');" class="TableStyle_o_Code" cellspacing="0">
            <col style="width: 55px;">
            </col>
            <col style="width: 129px;">
            </col>
            <col style="width: 339px;">
            </col>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">SAL_i32 <b>cmat_lud_solx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *LU,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input packed LU factor matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 LU_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* matrix LU column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 *P,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* permutation vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *b,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* right hand side vector, input */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *x,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* solution vector, output */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 n,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* row/col.count for LU, elem.count for P, b, and x */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* transpose flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">SAL_i32 <b>cmat_lud_soldx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf64 *LU,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input packed LU factor matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 LU_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* matrix LU column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 *P,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* permutation vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf64 *b,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* right hand side vector, input */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf64 *x,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* solution vector, output */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 n,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* row/col.count for LU, elem.count for P, b, and x */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* transpose flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">SAL_i32 <b>zmat_lud_solx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *LU,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input packed LU factor matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 LU_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* matrix LU column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 *P,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* permutation vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *b,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* right hand side vector, input */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *x,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* solution vector, output */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 n,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* row/col.ct for LU, elem.ct for P, b, and x */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* transpose flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">SAL_i32 <b>zmat_lud_soldx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *LU,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input packed LU factor matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 LU_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* matrix LU column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 *P,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* permutation vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *b,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* right hand side vector, input */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *x,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* solution vector, output */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 n,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* row/col.ct for LU, elem.ct for P, b, and x */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* transpose flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
        </table>
        <p class="API_heads">Description</p>
        <p class="Body">The <MadCap:conditionalText MadCap:conditions="Default.OpenSALonly">cmat_lud_solx(), cmat_lud_soldx(), zmat_lud_solx() and zmat_lud_soldx() functions</MadCap:conditionalText> take as input:</p>
        <ul>
            <li value="1">An LU-packed matrix created by the <MadCap:conditionalText MadCap:conditions="Default.OpenSALonly"><a href="Matrix LU Decomposition.htm#cmat_lud_decx">cmat_lud_decx()</a>, <a href="Matrix LU Decomposition.htm#cmat_lud_decdx">cmat_lud_decdx()</a>, <a href="Matrix LU Decomposition.htm#zmat_lud_decx">zmat_lud_decx()</a>, or <a href="Matrix LU Decomposition.htm#zmat_lud_decdx">zmat_lud_decdx()</a></MadCap:conditionalText> LU decomposition functions</li>
            <li value="2">A right-hand side vector <i>b</i></li>
        </ul>
        <p class="Body">As an output, these functions provide a solution vector <i>x </i>for the equation <i>A </i>· <i>x </i>= <i>b</i>. </p>
        <p class="Body">Here <i>A </i>= <i>L </i>· <i>U</i>, or a permutation thereof with reciprocal diagonal elements in <i>U</i>. That is:</p>
        <p class="Body1"><i>A</i><sub>P[i],j</sub> = (<i>L </i>· <i>U</i>)<sub>i,j</sub> for i ≠ j</p>
        <p class="Body">where <i>P </i>is a permutation vector as output by the LU decompositions, and <i>A</i><sub>P[i],i</sub> = 1/(<i>L </i>· <i>U</i>)<sub>i,i</sub>.</p>
        <p class="Body">In addition, these solver routines can solve a system where the coefficient matrix is transposed (Hermitian conjugate in the complex case), <i>A</i><sup>H</sup> · <i>x </i>= <i>b</i>. The ability to switch between the normal (nontransposed) and transposed cases using only the LU decomposition of <i>A</i>, without computing a separate LU decomposition for <i>A</i><sup>H</sup>, is useful for solving systems, one with coefficient matrix of <i>A </i>and the other with coefficient matrix of <i>A</i><sup>H</sup>.</p>
        <p class="Body">The transposed case is different from the normal case, because if <i>A</i><sub>P[i],j</sub> = (<i>L </i>· <i>U</i>)<sub>i,j</sub> is an LU decomposition in standard form (row-pivoted, unit lower triangular), then the transpose of the equation, <i>A</i><sup>H</sup><sub>j,P[i]</sub> = (<i>U</i><sup>H</sup> · <i>L</i><sup>H</sup>)<sub>i,j</sub>, is not in the standard form; it is in column-pivoted, unit upper triangular form. So, the flag variable is a means of selecting between performing the standard forward/back solve procedure and performing the non-standard (column-pivoted, unit upper triangular) variant of the procedure.</p>
        <p class="API_heads">Parameters</p>
        <p class="Parameter">LU</p>
        <p class="Body1">Input matrix containing triangular LU factors of a matrix <i>A </i>in the special packed format described in <a href="../CH03 - Matrix Decomposition/LU_decomposition.htm#top" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>LU Decomposition</i></span></a>. Use the <a href="Matrix Invert - Complex.htm#cmatinv_lux">cmatinv_lux()</a> and <a href="Matrix Invert - Complex.htm#zmatinv_lux">zmatinv_lux()</a> functions to obtain the input.</p>
        <p class="Parameter">LU_tcols</p>
        <p class="Body1">Column element stride for <i>LU</i>.</p>
        <p class="Parameter">P</p>
        <p class="Body1">Permutation vector created by the  <a href="Matrix Invert - Complex.htm#cmatinv_lux">cmatinv_lux()</a> and <a href="Matrix Invert - Complex.htm#zmatinv_lux">zmatinv_lux()</a> functions.</p>
        <p class="Parameter">b</p>
        <p class="Body1">Right hand side vector. Input.</p>
        <p class="Parameter">x</p>
        <p class="Body1">Solution vector. Output.</p>
        <p class="Parameter">n</p>
        <p class="Body1">Row and column count for <i>LU</i>, element count for <i>D</i>, <i>x</i>, and <i>b</i>.</p>
        <p class="Parameter">flag</p>
        <p class="Body1">Specify one of the following transpose options:</p>
        <p class="Body1"><span style="font-family: monospace;">SAL_NORMAL_SOLVER</span>
        </p>
        <p class="Body2">Solve <i>A </i>· <i>x </i>= <i>b</i>. (default)</p>
        <p class="Body1"><span style="font-family: monospace;">SAL_TRANSPOSE_SOLVER</span>
        </p>
        <p class="Body2">Solve <i>A</i><sup>H</sup> · <i>x </i>= <i>b</i>.</p>
        <p class="API_heads">Returns</p>
        <p class="Parameter">SAL_SUCCESS</p>
        <p class="Body1">Successful execution.</p>
        <p class="Body">Other return values</p>
        <p class="Body1">A floating point exception is detected.</p>
        <p class="RelatedTopics" MadCap:autonum="Related Topics"><span class="autonumber"><span>Related Topics</span></span>&#160;</p>
        <p class="Body"><a href="../CH03 - Matrix Decomposition/Intro_matrixdecomp.htm#top" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>Matrix Decompositions and Condition Numbers</i></span></a>&#160;</p>
        <p class="RelatedFunctions" MadCap:autonum="Related Functions"><span class="autonumber"><span>Related Functions</span></span>&#160;</p>
        <p class="Body"><a href="Matrix Invert.htm#matinvx" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>matinvx(), matinvdx(), matinv_lux()</i></span></a>&#160;</p>
        <p class="Body"><a href="Matrix Invert - Complex.htm#cmatinv_lux" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>cmatinv_lux(), zmatinv_lux()</i></span></a>
        </p>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script><iframe id="topiccomments" name="topiccomments" title="Topic Comments" src="../../Skin/TopicComments.htm" frameborder="0" style="width: 100%; height: 0px; margin-top: 12px;"></iframe>
    </body>
</html>