<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="4" MadCap:lastHeight="2718" MadCap:lastWidth="620" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Functions - Matrix Math|Matrix Complex Functions" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:liveHelp="Mot2fgGRadbqBpZ+adVBA+0BPS0xBSory0kXHzLfHqJUj+I1J1Q404h0amnlcNdm4qkHZquGPCNEgkA9DCjDjjwNPBFJ5YtfrYFzFE67mqkOxydmm14XVWSz/ziq/+KLrfH+wG4OScJsNULK37VvowuIGt7ACqpOfAdTY2/2dWw1lCJAu2FDFAX4SGDNFMabau9fJy54urD4fGnBPjjfJX7cySHfUP0vNnCGTFXLDAbccdaEdcravMp8MSPwfLO5Jsi2nNUOPnGNN3PTzN4gC0S5fBEuziTQ5dYqN1t9F6GHH4Opbiy9c+RyAjfbwjXSc/NToQdYIWGV8eA1dyrxpGs9Hy0Y2pCs3ZPqo6jYT0qSdMVHwYGW9asW6nY0PnV7rHarH68hSUP0O7zIYuGELYGiAXxCrsNaZ6Q7H6t2eAvZDmEBncbefcECZ1CaC2l1CBT5uDT+lMkm+HLvxwlFN6mtyYRYBVmSd85rjN3Rv7Ak+R7/QpB38ruAyMWs8xxvRb8mCmrgSP3fVmPW6mUHjSCY3Y+QHk4OMsfz8qdzd3Ad1CbNyAvjsVUU0dEgL+o1k6jKY5NfP0nR/AR0P6mZpLMMqsUV0mQhxICmffppjIohmeOYn89Vqmio0czYL6stX25l20aNYZfBuv/xUwEDjVZBVeIYcWLUmgMfmbMrBlRHITjfpSxmuXZx+pRC18ki40dY2HA2sXR6/KS82NbNng+5bgI2/xhlRcecDdbZD4YuULCaW3CXBYfs8etAutxNIdCJBoTSeEnubDY2sTpfalk3uLFhS2jHE1QV6ip2mw9LdXuty98rOWg4uBzfxSJoT6ZHquoj/YUKj/ZwTYZov2GWT81BUg6IIfY6ijLS/7JDZ3ywAljn1yyMLoiNAON9rjVlBm4iOd4k50t+RreZpM6R7xMoNNJ5UQuyZkyr3c5JvOpbPiS6yeb1fZXu/nDHU7a5Tha5jHxgtyZrdBal+SuHlUCwpsx6AUPcSzMD+onw1XP4K49IoF3rgyL8G+aieOulU2Q2FPksPElTBzyhVcNdiMdcgEqa2PIgEZFtE01eEW/VdeA8nabFA0Z0C0n0qKcpCubqGxVlARnUFx+se0uJxAyZUXQ1NV56C0MWnpjwMU9ITHz/R8gMMTqG0DIf67X1R1SXmJ5O1lz/WGyZAl9NasqJBQHZMrlqbmBAhm/kPD7Z4P0sVmKL/k+UhPQeTi2BFVSJNZ9Q2xkkGIIUBkla3DoG1+uVFNcIcLGO1u8zSNAGyi5qzkWmdApMWn8s2/Jfh0JpCMvGL+iVkyioGZpZnzfmRmZhgJNG0xnNAGA2fw8P06ryXNguaM87Ozxa1AfideNrDXClW1Abgrl4Hw==" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" type="text/css" /><title>Matrix Cholesky Decomposition and Condition</title>
        <link href="../Resources/TableStyles/o_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/p_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/Stylesheets/BookStyles.css" rel="stylesheet" type="text/css" />
        <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapLiveHelpUtilities.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapLiveHelpBody.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapAddCommentDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapReplyCommentDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapRegisterUserDialog.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../Default_CSH.htm#CH10 - Functions - Matrix Math/Matrix Cholesky Decomposition.htm" style="">Open topic with navigation</a>
        </p>
        <h2><a name="kanchor754"></a>Matrix Cholesky Decomposition and Condition</h2>
        <p class="API_name"> <![CDATA[ ]]><a name="cmat_chol_decx"></a><a name="kanchor755"></a>cmat_chol_decx()<MadCap:conditionalText MadCap:conditions="Default.OpenSALonly">, <a name="cmat_chol_decdx"></a>cmat_chol_decdx()</MadCap:conditionalText>, <a name="zmat_chol_decx"></a><a name="kanchor756"></a>zmat_chol_decx()<MadCap:conditionalText MadCap:conditions="Default.OpenSALonly">, <a name="zmat_chol_decdx"></a>zmat_chol_decdx()</MadCap:conditionalText></p>
        <p class="Image" style="font-family: serif;">A = L • D •&#160;U</p>
        <p class="API_heads">Syntax</p>
        <table style="caption-side: top;mc-table-style: url('../Resources/TableStyles/o_Code.css');" class="TableStyle_o_Code" cellspacing="0">
            <col style="width: 55px;">
            </col>
            <col style="width: 138px;">
            </col>
            <col style="width: 331px;">
            </col>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">SAL_i32 <b>cmat_chol_decx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* Hermitian positive definite input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 A_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* matrix A column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *LDU,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 LDU_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* matrix LDU column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 n,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* row/column count for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *rcond,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* estimated reciprocal condition number */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *v,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* minimizing vector for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* type of condition estimate */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">SAL_i32 <b>cmat_chol_decdx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf64 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* Hermitian positive definite input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 A_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* matrix A column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf64 *LDU,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 LDU_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* matrix LDU column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 n,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* row/column count for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *rcond,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* estimated reciprocal condition number */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_c64 *v,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* minimizing vector for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* type of condition estimate */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">SAL_i32 <b>zmat_chol_decx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* Hermitian positive definite input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 A_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* matrix A column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *LDU,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 LDU_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* matrix LDU column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 n,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* row/column count for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *rcond,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* estimated reciprocal condition number */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *v,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* minimizing vector for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* type of condition estimate */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">SAL_i32 <b>zmat_chol_decdx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *A,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* Hermitian positive definite input matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 A_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* matrix A column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *LDU,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 LDU_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* matrix LDU column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 n,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* row/column count for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *rcond,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* estimated reciprocal condition number */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf64 *v,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* minimizing vector for A */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* type of condition estimate */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
        </table>
        <p class="API_heads">Description</p>
        <p class="Body">The  <MadCap:conditionalText MadCap:conditions="Default.OpenSALonly">cmat_chol_decx(), cmat_chol_decdx(), zmat_chol_decx(), and zmat_chol_decdx()</MadCap:conditionalText> functions perform the square-root-free Cholesky decomposition of square symmetric positive definite matrices and optional condition estimate.</p>
        <p class="Body">The source matrix <i>A</i> is contained in a larger matrix, with a column count, <i>A_tcols</i>, greater than or equal to <i>n</i>, the column and row count of <i>A</i>.</p>
        <p class="Body">These functions execute out-of-place only.</p>
        <p class="API_heads">Parameters</p>
        <p class="Parameter">A, A_tcols</p>
        <p class="Body1">Input matrix and its column element stride.</p>
        <p class="Parameter">LDU</p>
        <p class="Body1">Output matrix containing <i>L</i>, <i>D</i>, and <i>U </i>in packed format, so that <br></br><i>A = L · D · U</i>. It consists of:</p>
        <ul>
            <li class="BulletIndent2" value="1">a lower triangular matrix (<i>L</i>)</li>
            <li class="BulletIndent2" value="2">
                <p>its Hermitian transpose, upper triangular matrix (<i>U </i>= <i>LH</i>)</p>
                <p class="and" MadCap:autonum="- and -"><span class="autonumber"><span>- and -</span></span>&#160;</p>
            </li>
            <li class="BulletIndent2" value="3">the reciprocals of the diagonal matrix <i>D</i></li>
        </ul>
        <p class="Body1">The elements of <i>L </i>above the diagonal and the elements of <i>U</i> below the diagonal are not stored because they are all equal to <span style="font-family: serif;">0.0</span>. The diagonal elements of <i>L</i> and <i>U </i>are not stored because they are all equal to <span style="font-family: serif;">1.0</span>.</p>
        <p class="Parameter">LDU_tcols</p>
        <p class="Body1">Output matrix column element stride.</p>
        <p class="Parameter">n</p>
        <p class="Body1">Row and column count for <i>A</i> and <i>LDU</i>.</p>
        <p class="Parameter">rcond</p>
        <p class="Body1">Pointer to the estimate of reciprocal of 1-norm or infinity-norm condition number of <i>A</i>, or reciprocal of componentwise condition number of <i>A</i>, depending on the flag setting.</p>
        <p class="Parameter">v</p>
        <p class="Body1">Minimizing vector, sometimes referred to as an “approximate null vector” when <i>C</i> is ill-conditioned, if <code>flag != SAL_COND_EST_NONE</code>.</p>
        <p class="Parameter">flag</p>
        <p class="Body1">Specify one of the following condition estimate options:</p>
        <p class="Body1"><span style="font-family: monospace;">SAL_COND_EST_NONE</span>
        </p>
        <p class="Body2">Do not compute condition estimate (default). If you know that the matrix is well-conditioned, use this option to get best performance.</p>
        <p class="Body2">When this option is selected, no memory has to be allocated for the corresponding outputs, <i>rcond</i> and <i>v</i>, and the pointers are permitted to be <code>NULL</code>.</p>
        <p class="Body1"><span style="font-family: monospace;">SAL_COND_EST_1_NORM</span>
        </p>
        <p class="Body2">Estimate 1-norm condition number.</p>
        <p class="Body1"><span style="font-family: monospace;">SAL_COND_EST_INF_NORM</span>
        </p>
        <p class="Body2">Estimate infinity-norm condition number.</p>
        <p class="Body1"><span style="font-family: monospace;">SAL_COND_EST_COMPONENT</span>
        </p>
        <p class="Body2">Estimate componentwise condition number.</p>
        <p class="API_heads">Returns</p>
        <p class="Parameter">SAL_SUCCESS</p>
        <p class="Body1">Successful execution.</p>
        <p class="Body1">Other return values</p>
        <p class="Body1">A floating point exception is detected. The resulting matrix is unusable.</p>
        <p class="RelatedTopics" MadCap:autonum="Related Topics"><span class="autonumber"><span>Related Topics</span></span>&#160;</p>
        <p class="Body"><a href="../CH01 - Introduction/Calling_Conventions.htm#Address_strides" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>Address Strides</i></span></a>
        </p>
        <p class="Body"><a href="../CH03 - Matrix Decomposition/Intro_matrixdecomp.htm#top" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>Matrix Decompositions and Condition Numbers</i></span></a>&#160;</p>
        <p class="RelatedFunctions" MadCap:autonum="Related Functions"><span class="autonumber"><span>Related Functions</span></span>&#160;</p>
        <p class="Body"><a href="Matrix LU Solution.htm#mat_lud_solx" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>mat_lud_solx(), mat_lud_soldx()</i></span></a>
        </p>
        <p class="Body"><a href="Matrix LU Solution - Complex.htm#cmat_lud_solx" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>cmat_lud_solx(), cmat_lud_soldx(), zmat_lud_solx(), zmat_lud_soldx()</i></span></a>
        </p>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script><iframe id="topiccomments" name="topiccomments" title="Topic Comments" src="../../Skin/TopicComments.htm" frameborder="0" style="width: 100%; height: 0px; margin-top: 12px;"></iframe>
    </body>
</html>