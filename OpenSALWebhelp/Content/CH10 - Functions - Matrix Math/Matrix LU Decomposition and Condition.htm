<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="4" MadCap:lastHeight="2084" MadCap:lastWidth="612" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Functions - Matrix Math|Matrix Float and Double Precision Functions" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:liveHelp="DMDgzXqVFZZxiRzMFW63c7sjG0l4oEL9z8bFUfMH+feCG24oz+qgyKwxoXJzKBMvqbbhPbC56WYgZOwBo0UYEKVeWTiT9CZhBTJKJhSZerZd9Xel70SZB8RFt4BuPdaz0ZqEVeE/tQja+VlOubB8pXotUojkXGZJ12g74SK9KjYbT+X5l0/RRZwVQOdE3fdqh0LK5UkIAQBY8Nnt5aLtgYiZtm1+Q8HqVboluOvIB5j8iwzlhgMCf4qbguRY06bBDpleApfNhhnfSNr37TuHIGBADXLLv8dDaKLedk40a0nRBcUr6rFpKwXUBRMRfaWWESmFZ/4jEIdXUL4E4we6yBPXCwdVD1m/+8QLd1Itqr+JpVbipwjndAgtTmtMZkuepRVoMq/S/wdNK78fdhBlXejEKaVuAbi85+KBkKYm9FQ/qM5HPipKWq9y2xzx4cYQKmYR95utURtPT2L7WOXcxjAcWx18QsyE4trcsFHzX0ytDJ9W+OlFN2r5F432URKOgwUMGM/iOb166BREYRyPCfmdDpMEOJttqs5ylQpSebH00W554CC6q81pLCkOKWojvdqjZfKNWTCfkmKufejElZh3dxQlRTnJiiu5+ODGTF0O5ENOKXWRE+G/XmUbsENlXQa8lvwASdfcA623VefZ0ZCOoJCWirizZNgTRzXl/cShQVaKo5Kbm2J0vPCNWCZgEDxUdpn+IikZdtqWMKMoIGR+KWXfHtHZf709IoHfd3Gi9kXOpB2aim1Ob4u2kpdNOQYaaAdRy0JpOA2sgSmUnK2fzHf+ImWpQ7mEamweXAQY1zPH0eVcvPY1nJPVmGd8hsVaQLWVCyAMmhfwKgQpLsFEQvuiEzX/rJsHAWr1T/A/szIKAyObijdPV98cklSIoJJhIwfo5CrXcavsfVn/KXyy/bb9Jw3RxFOC67gESpH9R0HlTDpPNGHnc86NtxO84nPUVH91lUO2Bbkc1MOGZ6qpI3El3fKzBFGtA/gOFsU8ySojwCV5a26XN5oo3w5wXt2pbKQF7W7j1kPhU4osDlPgM2gTj8uUez1AZJnd4T3yhSkBu5uKnrdxVLYHfp7cNDwRmn+2gM7qESg8VRy8XUQWjN0x9nAdaCom24dEEBcMSzyDQ+nnHZKad7BypczxhHG1ge6BGZbhO5e1bxE0PAVmqO0R8r962izsGQKU6yTT0L+wdzZ+yFeo88yFPSeXWxT4iHt+vcm9s+p2tK/pudzpa6TzFgi4CFLqckrN2aVAnP/Yb4alRmAT+wb+lGUdM+J6Bfnvq731coadAuzgv8bLie9DB/qeukIwIVuaxGslDRLzYAOhUhLUtpcYv6vLjIbeJlFEjuOcEu5raX0LfQ==" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" type="text/css" /><title>Matrix LU Decomposition</title>
        <link href="../Resources/TableStyles/o_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/TableStyles/p_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../Resources/Stylesheets/BookStyles.css" rel="stylesheet" type="text/css" />
        <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapLiveHelpUtilities.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapLiveHelpBody.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapAddCommentDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapReplyCommentDialog.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapRegisterUserDialog.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../Default_CSH.htm#CH10 - Functions - Matrix Math/Matrix LU Decomposition and Condition.htm" style="">Open topic with navigation</a>
        </p>
        <h2><a name="kanchor727"></a>Matrix LU Decomposition</h2>
        <p class="API_name"><a name="mat_lud_decx"></a><a name="kanchor728"></a>mat_lud_decx()<MadCap:conditionalText MadCap:conditions="Default.OpenSALonly">, <a name="mat_lud_decdx"></a>mat_lud_decdx()</MadCap:conditionalText></p>
        <p class="Image"><span style="font-family: serif;">C</span><sub><span style="font-family: serif;">p[i]j</span></sub><span style="font-family: serif;"> = (L • U)</span><sub><span style="font-family: serif;">ij</span></sub> with reciprocal diagonal elements in <i>U</i></p>
        <p class="API_heads">Syntax</p>
        <table style="width: 500px;caption-side: top;mc-table-style: url('../Resources/TableStyles/o_Code.css');" class="TableStyle_o_Code" cellspacing="0">
            <col style="width: 55px;">
            </col>
            <col style="width: 121px;">
            </col>
            <col style="width: 340px;">
            </col>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">SAL_i32 <b>mat_lud_decx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input/output matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 C_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* matrix C column stride */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 *P,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output permutation vector */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 n,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* row and column count for C, element count for D */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *rcond,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ptr to estimate of cond.number reciprocal */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *v,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* minimizing vector for C */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* type of condition estimate */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">SAL_i32 <b>mat_lud_decdx</b>(</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f64 *C,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input/output matrix */</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 C_tcols,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* matrix C column stride */</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 *P,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* output permutation vector */</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 n,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* row and column count for C, element count for D */</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *rcond,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ptr to estimate of cond.number reciprocal */</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f64 *v,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* minimizing vector for C */</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 flag,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* type of condition estimate */</td>
            </tr>
            <tr MadCap:conditions="Default.OpenSALonly">
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
        </table>
        <p class="API_heads">Description</p>
        <p class="Body">The <MadCap:conditionalText MadCap:conditions="Default.OpenSALonly">mat_lud_decx() and mat_lud_decdx() functions perform</MadCap:conditionalText> an LU decomposition of a square matrix. Output matrix <i>C </i>consists of two matrices: </p>
        <ul>
            <li value="1">L (occupies the lower left half of <i>C</i>)</li>
            <li value="2">U (occupies the upper right half of <i>C</i>)</li>
        </ul>
        <p class="Body">The diagonal elements of the submatrix <i>L </i>are assumed to be 1 and are not stored in <i>C</i>. The diagonal elements of the submatrix <i>U </i>are presented as reciprocals to expedite iterative solving of the <i>C </i>· <i>x </i>= <i>b </i>equation systems.</p>
        <p class="API_heads">Parameters</p>
        <p class="Parameter">C, C_tcols</p>
        <p class="Body1">Input/output matrix and its column element stride. The output matrix overwrites the input matrix with a packed format.</p>
        <p class="Parameter">P</p>
        <p class="Body1">Permutation vector created by the function. Output.</p>
        <p class="Parameter">n</p>
        <p class="Body1">Row and column count for <i>C</i>, element count for <i>P</i>.</p>
        <p class="Parameter">rcond</p>
        <p class="Body1">
            <MadCap:conditionalText MadCap:conditions="Default.OpenSALonly">Reserved; specify <code>NULL</code>.</MadCap:conditionalText>
        </p>
        <p class="Parameter">v</p>
        <p class="Body1">
            <MadCap:conditionalText MadCap:conditions="Default.OpenSALonly">Reserved; specify <code>NULL</code>.</MadCap:conditionalText>
        </p>
        <p class="Parameter">flag</p>
        <p class="API_heads">Returns</p>
        <p class="Parameter">SAL_SUCCESS</p>
        <p class="Body1">Successful execution.</p>
        <p class="Body1">Other return values</p>
        <p class="Body1">A floating point exception is detected. The resulting matrix is unusable.</p>
        <p class="RelatedTopics" MadCap:autonum="Related Topics"><span class="autonumber"><span>Related Topics</span></span>&#160;</p>
        <p class="Body"><a href="../CH01 - Introduction/Calling_Conventions.htm#Address_strides" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>Address Strides</i></span></a>
        </p>
        <p class="Body"><a href="../CH03 - Matrix Decomposition/Intro_matrixdecomp.htm#top" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>Matrix Decompositions and Condition Numbers</i></span></a>&#160;</p>
        <p class="Body"><a href="../CH03 - Matrix Decomposition/Terms.htm#Reciproc" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>Reciprocal Diagonal Convention</i></span></a>
        </p>
        <p class="RelatedFunctions" MadCap:autonum="Related Functions"><span class="autonumber"><span>Related Functions</span></span>&#160;</p>
        <p class="Body"><a href="Matrix LU Solution.htm#mat_lud_solx" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>mat_lud_solx(), mat_lud_soldx()</i></span></a>
        </p>
        <p class="Body"><a href="Matrix LU Solution - Complex.htm#cmat_lud_solx" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>cmat_lud_solx(), cmat_lud_soldx(), zmat_lud_solx(), zmat_lud_soldx()</i></span></a>
        </p>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script><iframe id="topiccomments" name="topiccomments" title="Topic Comments" src="../../Skin/TopicComments.htm" frameborder="0" style="width: 100%; height: 0px; margin-top: 12px;"></iframe>
    </body>
</html>