<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="4" MadCap:lastHeight="734" MadCap:lastWidth="654" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Functions - CCF/Image Processing|One-Dimensional Correlation, Convolution, and Filtering" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:liveHelp="It34mnpRJPJfbu6Nai+i1ZDq07rYpbw7/r6OivlvDe6i9xmzClF+olIKAiy/X10UcNr1D9SlTU2GsnFL1I9NegniAv7Ga+ArYoYN98oJQ3M6uQQeXvTA5+vdr1qXA7zj74+U5TEhLCQFJ7AqQe6subWoQRBuH1veFj/7PW5dEWrsJbNZCcZ1xEMAfZH9PWY83PraOLdqm7M+qBsGdA++xZ+dvUuGx4hUHmyGeccHGV1kAsLn7kM30QWCz//+S5DXeOwkJFy/lmONNfPXz8Cl0/PeDK9qZvLtPPwH4ho/b0IQG1Hd+3bZzh8QrzS0wZXI+4mWhAFXimCdvI9I8rN7j4/4N8278ju0Odf9v/CZaCt/96nAb2HKBpaRRRHExsJZiY5XpUpwskOqsqJ+mGLCHvOaI8umBGWhj7+6llRrIkmVl5hDf/pTFUAXLPitxDS2F6dkQ8np3aZn6Dhnc40UtRuKJROG8M1Ukq67oRb5x+WIWJWk481vZ5m90ZKgKMeaO6fR5/eFEHrXwzyEZjropbeCuKHqbKhP4LugHs4Hbp8eFkTSneV/1aVlNbIogtCpP03x/CJJW3cvPYoisB3qfbbYQPm1uE3YUQ2Kop8Xr+2PSnjt538FR6oBPT9L2ZSEG5t2t6XlNHIcqyfOrBAD9kr93sT2Kpd67yySx/S+yIp4lJDukzrpk+Jq8zx6fLxj/oonL5zp6aX19TSrBVARjRFxOlTpre4M+r0GLcXD1oN9ySH9hu/lz8NbaMGHBQh9pvUMrl/oGQ6PVT4kcrMt5qPLXlT6yQ1fNyB5iLWx6DzkHWXmiAQGy9PUxh4K8KaNf88FlYuPPHnBV70d+PAIBvo46Yt3co+f1iwlHqLg/G0Ak3+xz83TZXSphtuKcFt+7qJXj0UZ4GpRAIuTrE1acecZlyas9uE+gwa/xNRGBlsMJe/QaaBewYhBdvFN4NwnlapoTbbXLXwwrH4//PeGwd2/q5enro73HIUOTY2v0DyURGeSjHdcojs4cJNL+BTMHdUiLCxDQzaegEq1xTUKKIa2pW/dTmJfvKlQx5kRUy77iWyBPEKiUuiis6+rJXz0jXi7JimGWgykuQqIh0mO3KAafmOzSJTyLpm77BH+RohA4Q6SvrXHBEKWQKpx/0NJ9R/9R5LDmomyELjcR80Ew1eCcWZaFLE4gXJtymj32H2Pf3A+ZJG77nxnENdANG7n30BisRaVoig2etT0xBHQR96xX6bKZ+mqM+2YDdOjDVMSvYdSSIgLk/geTArXRE7l5rh2vfClGGxubBzv3IpcFe3YTVg/gzkfmypXikLb8g/aqrfFgKm9iAMLAorPeyFnaaaxl25QhKmokNahUUy/Kxk/s5/QRbqbZHoY81PlYoGizEYNR+qCt8HHsVfIBjbxlKSDX3EPr5RVug8AA6dYBpGjrVvdW3zjHiY9Y7zWkMEcgH2a+11FUXw2+zclAIGLe1KWgDOAoZ/uUzHeDEUa5cs8SbUnvdO3YULHWVC0P4oGKb8NCsJnlGdShbvmMl2iiYbILP8hQixbA4blFJiEop6u4ItzW63zjAk5QOXj1/AQl02qkrVRpodoJvHEAHWIA6hSgpo8BejICc0R71SxFHVrp3t4HSIE2Wuh2jJwSo2gWBJ6s42BDdbaRtqlSz3j+Bu6kWpg6RtWj5DtN0izw94lcsbguV5FBxvBYOjD/2Y=" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" type="text/css" /><title>Fast Convolution and Correlation, Multiple Signal Transforms and Convolutions with a Single Filter</title>
        <link href="../../Resources/TableStyles/o_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../../Resources/TableStyles/p_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../../Resources/Stylesheets/BookStyles.css" rel="stylesheet" type="text/css" />
        <script src="../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
        <script src="../../SkinSupport/MadCapLiveHelpUtilities.js" type="text/javascript">
        </script>
        <script src="../../SkinSupport/MadCapLiveHelpBody.js" type="text/javascript">
        </script>
        <script src="../../SkinSupport/MadCapDialog.js" type="text/javascript">
        </script>
        <script src="../../SkinSupport/MadCapAddCommentDialog.js" type="text/javascript">
        </script>
        <script src="../../SkinSupport/MadCapReplyCommentDialog.js" type="text/javascript">
        </script>
        <script src="../../SkinSupport/MadCapRegisterUserDialog.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../Default_CSH.htm#CH12 - Functions - CCF_Image_Processing/1-D/FCC Multi Signal Xforms - Single Filter.htm" style="">Open topic with navigation</a>
        </p>
        <h2><a name="kanchor1097"></a>Fast Convolution and Correlation, Multiple Signal Transforms and Convolutions with a Single Filter</h2>
        <p class="API_name"><a name="fcsm_ciptx" style="font-weight: normal;"></a><a name="kanchor1098"></a><span style="font-weight: normal;">fcsm_ciptx(), </span><a name="fcsm_riptx" style="font-weight: normal;"></a><a name="kanchor1099"></a><span style="font-weight: normal;">fcsm_riptx(), </span><a name="fcsm_ziptx" style="font-weight: normal;"></a><a name="kanchor1100"></a><span style="font-weight: normal;">fcsm_ziptx(), </span><a name="fcsm_zriptx" style="font-weight: normal;"></a><a name="kanchor1101"></a><span style="font-weight: normal;">fcsm_zriptx()</span>
        </p>
        <p class="API_heads">Syntax</p>
        <table style="width: 500px;caption-side: top;mc-table-style: url('../../Resources/TableStyles/o_Code.css');" class="TableStyle_o_Code" cellspacing="0">
            <col style="width: 55px;" />
            <col style="width: 166px;" />
            <col style="width: 313px;" />
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>fcsm_ciptx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">FFT_setup *setup,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* weights array */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *filter_freq,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input from freq. domain filter output */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *msignal,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* time domain signal input sequences in an M * N matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 jr,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* adjacent component element stride in each convolution in msignal */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 jc,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* corresponding component element stride in adj. convolutions in msignal */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *t,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* temporary buffer */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of convolution size N */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 M,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* number of convolutions */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 f,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* x-form direction for time domain signal sequence */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>fcsm_riptx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">FFT_setup *setup,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* weights array */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *filter_freq,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input from freq. domain filter output */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *msignal,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* time domain signal input sequences in an M * N matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 jr,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* adjacent component element stride in each convolution in msignal */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 jc,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* corresponding component element stride in adj. convolutions in msignal */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *t,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* temporary buffer */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of convolution size N */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 M,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* number of convolutions */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 f,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* x-form direction for time domain signal sequence */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>fcsm_ziptx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">FFT_setup *setup,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* weights array */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *filter_freq,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input from frequency domain filter output */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *msignal,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* time domain signal input sequences in an M * N matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 jr,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* adjacent component element stride in each convolution in msignal */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 jc,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* corresponding component element stride in adj. convolutions in msignal */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *t,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* temporary buffer */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of convolution size n */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 M,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* number of convolutions */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 f,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* x-form direction for time domain signal sequence */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>fcsm_zriptx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">FFT_setup *setup,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* weights array */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *filter_freq,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* input from frequency domain filter output */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *msignal,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* time domain signal input sequences in an M * N matrix */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 jr,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* adjacent component element stride in each convolution in msignal */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 jc,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* corresponding component element stride in adj. convolutions in msignal */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *t,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* temporary buffer */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2N,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of convolution size n */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 M,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* number of convolutions */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 f,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* x-form direction for time domain signal sequence */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
        </table>
        <p class="API_heads">Description</p>
        <p class="BodyLeadIn">The fcsm_ciptx(), fcsm_riptx(), fcsm_ziptx(), and fcsm_zriptx() functions:</p>
        <ul>
            <li value="1">Convolve or correlate a single transformed (frequency domain) filter output from the corresponding filter sequence transform function <a href="FCC Filter Transform.htm#fcf_ciptx">fcf_ciptx()</a>, <a href="FCC Filter Transform.htm#fcf_riptx">fcf_riptx()</a>, <a href="FCC Filter Transform.htm#fcf_ziptx">fcf_ziptx()</a>, or <a href="FCC Filter Transform.htm#fcf_zriptx">fcf_zriptx()</a>, with multiple time domain signal sequences of the same size. </li>
            <li value="2">Compute a forward or inverse FFT of the signal sequence, followed by a complex multiply between the transformed filter and signal sequences, followed by an inverse FFT of the resulting sequence.</li>
            <li value="3">Are part of a function set that performs one-dimensional circular convolutions or correlations between sequences that have lengths equal to a power of 2. For each data type, this fast convolution function set consists of a filter transform function, followed by a single or multiple signal transform and convolution function.</li>
            <li value="4">Accept the output of the corresponding filter transforms, <a href="FCC Filter Transform.htm#fcf_ciptx">fcf_ciptx()</a>, <a href="FCC Filter Transform.htm#fcf_riptx">fcf_riptx()</a>, <a href="FCC Filter Transform.htm#fcf_ziptx">fcf_ziptx()</a>, and <a href="FCC Filter Transform.htm#fcf_zriptx">fcf_zriptx()</a>. Since the data is not in a standard FFT format, only the output from these filter transform functions in the fast convolution set should be used as input to the signal transform and convolution functions.</li>
        </ul>
        <p class="Body">For fcsm_zriptx(), real data is stored in split complex form, with <i>N</i>/2 odd reals stored on the imaginary side of the split complex form and <i>N</i>/2 even reals in stored on the real side. Each matrix component of <i>msignal </i>contains <i>m </i>times <i>N</i>/2 values.</p>
        <p class="API_heads">Parameters</p>
        <p class="Parameter">setup</p>
        <p class="Body1">Points to a structure initialized by a prior call to an FFT weights array function, <a href="../../CH11 - Functions - FFTs/Setup/Create Complex Exponentials for 1D FFTs.htm#fft1d_setup">fft1d_setup()</a>. The value supplied as parameter <i>log2N </i>of the setup function must equal the value supplied as parameter <i>log2N </i>of subsequent calls to these multiple signal transform and convolution functions and any other fast convolution functions. Also, option flag <code>FFT_FAST_CONVOLUTION </code>must be specified to the setup function used with any fast convolution function.</p>
        <p class="Parameter">filter_freq</p>
        <p class="Body1">Points to the frequency domain filter sequence, created by the filter sequence transform function. This single filter sequence is used to convolve or correlate all the signal sequences.</p>
        <p class="Parameter">msignal</p>
        <p class="Body1">Points to the <i>M </i>* <i>N </i>matrix containing the multiple time domain signal sequences, each the same size as the single filter sequence. <i>M </i>is the number of fast convolutions to perform and <i>N </i>is the size of each convolution. The convolution or correlation output overwrites the input sequences in <i>msignal</i>. The input frequency domain filter sequence vector <code>filter_freq </code>is preserved.</p>
        <p class="Parameter">jr and jc</p>
        <p class="Body1">The <i>jr </i>parameter is the stride between adjacent component elements within each convolution in <i>msignal</i>. The <i>jc </i>parameter is the stride between corresponding component elements in adjacent convolutions in <i>msignal</i>.</p>
        <p class="Body1">For row convolutions, <i>jc </i>must be greater than or equal to <i>N </i>* <i>jr </i>. For fcsm_zriptx(), <i>jc </i>must be greater than or equal to <i>N</i>/2 * <i>jr</i>. </p>
        <p class="Body1">For column convolutions, <i>jr </i>must be greater than or equal to <i>M </i>* <i>jc</i>.</p>
        <p class="Parameter">t</p>
        <p class="Body1">Points to a temporary buffer of the same data type and size as <i>msignal</i>.</p>
        <p class="Parameter">log2N</p>
        <p class="Body1">The base 2 exponent of the number of elements to process. For example, to process 1024 elements, specify 10 for the <i>log2N </i>argument.</p>
        <p class="Parameter">M</p>
        <p class="Body1">The number of convolutions or correlations to perform.</p>
        <p class="Parameter">f</p>
        <p class="Body1">Specifies the direction of the FFT that transforms the time domain sequence, with two allowed values: </p>
        <ul>
            <li class="BulletIndent" value="1"><code>FFT_FORWARD </code>for a forward transform </li>
            <li class="BulletIndent" value="2"><code>FFT_INVERSE </code>for an inverse</li>
        </ul>
        <p class="Body1">The transform direction controls whether the function set computes a circular fast convolution or a correlation.</p>
        <p class="Body1">Using the <code>FFT_INVERSE </code>flag in the fast convolution SAL routines might not seem to make sense, especially when applied to real convolutions. When used in the SAL FFT routines, <code>FFT_INVERSE </code>is typically specified when performing an inverse FFT on a data sequence that resulted from a prior call to a forward (<code>FFT_FORWARD</code>) FFT.</p>
        <p class="Body1">For a “real” FFT, this data sequence is in a <i>special format </i>that takes advantage of the known symmetry properties of the real data sequence forward FFT output.</p>
        <p class="Body1">The SAL real FFT routines do not allow the caller to perform an inverse FFT on a strictly real data sequence. Instead, when <code>FFT_INVERSE </code>is specified to a real FFT routine, the input sequence is assumed to be in the <i>special format</i>, which is generally complex. However, the inverse FFT of a real sequence is mathematically equivalent to the complex conjugate of the forward FFT. This is the actual interpretation of the <code>FFT_INVERSE </code>flag when specified to the fast convolution routines. Regardless of whether the time domain sequence is real or complex, an inverse FFT is performed on the sequence.</p>
        <p class="RelatedTopics" MadCap:autonum="Related Topics"><span class="autonumber"><span>Related Topics</span></span>&#160;</p>
        <p class="Body"><a href="../../CH01 - Introduction/Calling_Conventions.htm#Address_strides" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>Address Strides</i></span></a>&#160;&#160;</p>
        <p class="Body"><a href="../../CH02 - Transform Functions/SAL_CCFs.htm" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>SAL Convolution and Correlation Functions</i></span></a>
        </p>
        <p class="Body"><a href="../../CH02 - Transform Functions/SAL_FFTs.htm" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>SAL Fast Fourier Transforms</i></span></a>
        </p>
        <p class="RelatedFunctions" MadCap:autonum="Related Functions"><span class="autonumber"><span>Related Functions</span></span>&#160;</p>
        <p class="Body"><a href="FCC Filter Transform.htm#fcf_ciptx" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>fcf_ciptx(), fcf_riptx(), fcf_ziptx(), fcf_zriptx()</i></span></a>
        </p>
        <p class="Body"><a href="Fast Convolution Correlation.htm#fcs_ciptx" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>fcs_ciptx(), fcs_riptx(), fcs_ziptx(), fcs_zriptx()</i></span></a>
        </p>
        <p class="Body"><a href="../../CH11 - Functions - FFTs/Setup/Create Complex Exponentials for 1D FFTs.htm#fft1d_setup" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>fft1d_setup(), fft1d_setupd()</i></span></a>&#160;&#160;</p>
        <script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js">
        </script><iframe id="topiccomments" name="topiccomments" title="Topic Comments" src="../../../Skin/TopicComments.htm" frameborder="0" style="width: 100%; height: 0px; margin-top: 12px;"></iframe>
    </body>
</html>