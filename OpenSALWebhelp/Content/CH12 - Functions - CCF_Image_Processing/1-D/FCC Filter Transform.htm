<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="4" MadCap:lastHeight="3359" MadCap:lastWidth="670" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Functions - CCF/Image Processing|One-Dimensional Correlation, Convolution, and Filtering" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:liveHelp="ZX9Cu1njBNjgkfueuYsTNCYtcH5qlADlYSRpJb6KRyEXm1BPlJ0UYed5ULG1edhfeKJzSqUofn2Z5jbyCcb3py+dW+g5JriGnWudRkZDpwBa/vpW7l2et2+afdBvRoSxkJboPLqPeZoLunIZTQJjrIpXPpDP1eDgwrqvDrdqqYDPMl/rqx0amw0zlPSRqJufjg+U/vmTAHwcLSRN98P3Lb3S91v6PTavOdjdZKhvZqFAYi79UwfhuVSESYCUjGiUCrfslF1GmgfCTIZQ0kxmDyRV1mQ0rIqzJNz+udEOjZ3HAyhOv2CTTjzkQZ3kgACLFp8hKnpPJkKFdF302InuMGR/fgPASKD5/4qtVxrqsfKKL7AMBH8XhOHhzUheC6oTsR+H+4OJOSqtWmrl59aR7etGRnBr+1L1+0p58GSvoDOkZ/7g8feq8/PgFEQS9qJBCif1jm3aHnxgEqtdcA/orpBWaeFoB7KPtUL9/B641ZgEivwiYMddzw4fYuEnSe9UhUvmFAUOUAlNjorv7oxvCIQ3wuxLlQVh+0oUCt1tv7bSFNGpnXkQxUpBxkOW2pltIfkcLivVdjvUP16MZMzj5yDljeLcyxg0AwzeTJi+Ptz3sHvjV5j3pACqH3iIcqhhWob/HWKUgMgOsoKnxubMJXaaQogC2NH9ZDV0XCzYdMCKxrOIsxSYL/+vmtrRRCarBMSzJDs76dTyOhfIPcrh04R/VvVr+iI+ViWcM5pn974hq2RFUaYPRaMlcCaERhH8OsRoQqdIGTqsi0yA310bc28E8/VGRTSBM+gxONZIMGzcT3nuzklwoabQ+Z2UFH2/X7XfMf9a4+ftk0aZmUOAAD46BKiZS0zrt8T6RQP3keRHngx21BrH6cu1i0y8Va4N9WMR1g8qPuDu0pigp7YiRANvzCptSEcubUnVtBTP2zyhB6JakNrZTr1J7e2jcfNCS8L8PHQS80oO2fEV3J199ByEvrltknr4vLQw2TFpqsJy7QcBZOMW/q9ztlOFSTDVETGrfws92DF3nvCw2T/mYG5n2D/EdYzhGbZYWdGIJntVE+FXQzv+SfDVFOGKlC6h8Mu0qzQnDhyxeCQdyP8Nl9zFQEX2JfE6wqGjxkff8UTJtFTx9PKB+DGAOSfVWKOFYyfjOYvYqPuhP5QtIfEtxn2+gHXLHB8VgMWDOOxCvC78i33VaBG9MPOIPAwEsZCfqnPD/UDv05y8xPtG8yciUc3sSxTG24r0fo6vsbazbGg4JIRHkF4V3jpnEjNvT//h5h0gAS9PhZmeH2aRz5zhSCkerlo5fwPKs0gNTzNAudBJ+w7xPnfSKUXq3Xw9P81SxZsB9IREbWbpaLqQBMy/6A==" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" type="text/css" /><title>Fast Convolution and Correlation, Filter Transform</title>
        <link href="../../Resources/TableStyles/o_Note.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../../Resources/TableStyles/o_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../../Resources/TableStyles/p_Note.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../../Resources/TableStyles/p_Code.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../../Resources/Stylesheets/BookStyles.css" rel="stylesheet" type="text/css" />
        <script src="../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
        <script src="../../SkinSupport/MadCapLiveHelpUtilities.js" type="text/javascript">
        </script>
        <script src="../../SkinSupport/MadCapLiveHelpBody.js" type="text/javascript">
        </script>
        <script src="../../SkinSupport/MadCapDialog.js" type="text/javascript">
        </script>
        <script src="../../SkinSupport/MadCapAddCommentDialog.js" type="text/javascript">
        </script>
        <script src="../../SkinSupport/MadCapReplyCommentDialog.js" type="text/javascript">
        </script>
        <script src="../../SkinSupport/MadCapRegisterUserDialog.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../Default_CSH.htm#CH12 - Functions - CCF_Image_Processing/1-D/FCC Filter Transform.htm" style="">Open topic with navigation</a>
        </p>
        <h2><a name="kanchor1087"></a>Fast Convolution and Correlation, Filter Transform</h2>
        <p class="API_name"><a name="fcf_ciptx"></a><a name="kanchor1088"></a>fcf_ciptx(), <a name="fcf_riptx"></a><a name="kanchor1089"></a>fcf_riptx(), <a name="fcf_ziptx"></a><a name="kanchor1090"></a>fcf_ziptx(), <a name="fcf_zriptx"></a><a name="kanchor1091"></a>fcf_zriptx()</p>
        <p class="Image">
            <img src="../../Resources/Images/SAL_funct_equat_187.jpg" />
        </p>
        <p class="API_heads">Syntax</p>
        <table style="width: 500px;caption-side: top;mc-table-style: url('../../Resources/TableStyles/o_Code.css');" class="TableStyle_o_Code" cellspacing="0">
            <col style="width: 55px;" />
            <col style="width: 138px;" />
            <col style="width: 319px;" />
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>fcf_ciptx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">FFT_setup *setup,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* FFT weights array */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *filter,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* time and freq. domain filter input sequence */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_cf32 *t,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* temporary buffer */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *scale,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* scale factor applied to input sequence */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2n,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of convolution size n */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 f,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* x-form direction for time domain filter sequence */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>fcf_riptx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">FFT_setup *setup,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* FFT weights array */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *filter,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* time and freq. domain filter input sequence */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *t,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* temporary buffer */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *scale,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* scale factor applied to input sequence */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2n,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of convolution size n */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 f,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* x-form direction for time domain filter sequence */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>fcf_ziptx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">FFT_setup *setup,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* FFT weights array */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *filter,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* time and freq. domain filter input seq.*/</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *t,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* temporary buffer */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *scale,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* scale factor applied to input sequence */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2n,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of convolution size n */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 f,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* x-form direction for time domain filter sequence */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep" colspan="3">void <b>fcf_zriptx</b>(</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">FFT_setup *setup,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* FFT weights array */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *filter,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* time and freq. domain filter input seq.*/</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_zf32 *t,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* temporary buffer */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_f32 *scale,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* scale factor applied to input sequence */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_ui32 log2n,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* base 2 exponent of convolution size n */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 f,</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* x-form direction for time domain filter sequence */</td>
            </tr>
            <tr>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">&#160;</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColSep">SAL_i32 eflag );</td>
                <td class="TableStyle_o_Code_Body_0_0_RowSep_ColEnd">/* ESAL flag */</td>
            </tr>
        </table>
        <p class="API_heads">Description</p>
        <p class="Body">The fcf_ciptx(), fcf_riptx(), fcf_ziptx(), and fcf_zriptx() functions compute a forward or inverse filter transform of a complex interleaved (fcf_ciptx()), complex split (fcf_ziptx()), real (fcf_riptx()), or real in split complex format (fcf_zriptx()) convolution filter function for time domain filter sequence of size <i>N</i>, where <i>N </i>is a power of 2.</p>
        <table class="TableStyle_o_Note" style="width: 500px;caption-side: top;mc-table-style: url('../../Resources/TableStyles/o_Note.css');" cellspacing="0">
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_o_Note_Body_0_0_RowSep_ColEnd">
                        <p class="Note" MadCap:autonum="&lt;b&gt;&lt;span style=&quot;color: #06347a;&quot; class=&quot;mcFormatColor&quot;&gt;Note&lt;/span&gt;&lt;/b&gt;"><span class="autonumber"><span><b><span style="color: #06347a;" class="mcFormatColor">Note</span></b></span></span>&#160;</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_o_Note_Body_0_0_RowEnd_ColEnd">The fcf_riptx() and fcf_zriptx() routines are functionally identical. The difference is in the way that the real data are stored. For fcf_zriptx(), real data is stored in split complex form, with <i>N</i>/2 odd reals stored on the imaginary side of the split complex form and <i>N</i>/2 even reals in stored on the real side.</td>
                </tr>
            </tbody>
        </table>
        <p class="Body">The fcf_ciptx(), fcf_riptx(), fcf_ziptx(), and fcf_zriptx() functions are part of a function set that performs one-dimensional circular convolutions or correlations between sequences that have lengths equal to a power of 2. For each data type, this fast convolution function set consists of a filter transform function, followed by a single or multiple signal transform and convolution function.</p>
        <p class="Body">These four filter transform functions provide input to the corresponding single signal transform of the convolution filter functions:</p>
        <ul>
            <li value="1"><a href="Fast Convolution Correlation.htm#fcs_ciptx">fcs_ciptx()</a>
            </li>
            <li value="2"><a href="Fast Convolution Correlation.htm#fcs_riptx">fcs_riptx()</a>
            </li>
            <li value="3"><a href="Fast Convolution Correlation.htm#fcs_ziptx">fcs_ziptx()</a>
            </li>
            <li value="4"><a href="Fast Convolution Correlation.htm#fcs_zriptx">fcs_zriptx()</a>
            </li>
        </ul>
        <p class="Body">or the multiple signal transform of the convolution filter functions:</p>
        <ul>
            <li value="1"><a href="FCC Multi Signal Xforms - Single Filter.htm#fcsm_ciptx">fcsm_ciptx()</a>
            </li>
            <li value="2"><a href="FCC Multi Signal Xforms - Single Filter.htm#fcsm_riptx">fcsm_riptx()</a>
            </li>
            <li value="3"><a href="FCC Multi Signal Xforms - Single Filter.htm#fcsm_ziptx">fcsm_ziptx()</a>
            </li>
            <li value="4"><a href="FCC Multi Signal Xforms - Single Filter.htm#fcsm_zriptx">fcsm_zriptx()</a>
            </li>
        </ul>
        <p class="Body">The output from these filter transform functions should only be used as input to the signal sequence transforms in the fast convolution set. These outputs are not in a standard FFT format.</p>
        <p class="API_heads">Parameters</p>
        <p class="Parameter">setup</p>
        <p class="Body1">Points to a structure initialized by a prior call to an FFT weights array function, <a href="../../CH11 - Functions - FFTs/Setup/Create Complex Exponentials for 1D FFTs.htm#fft1d_setup">fft1d_setup()</a>. The value supplied as parameter <i>log2N </i>of the setup function must equal the value supplied as parameter <i>log2N </i>of subsequent calls to these filter sequence functions and any other fast convolution functions. Also, option flag <code>FFT_FAST_CONVOLUTION </code>must be specified to the setup function used with any fast convolution function.</p>
        <p class="Parameter">filter</p>
        <p class="Body1">Points to the time domain filter input sequence. The contents of the buffer pointed to by the <i>filter_freq </i>parameter of the corresponding single or multiple signal fast convolution functions overwrite the contents of the buffer pointed to by the filter transform function parameter filter.</p>
        <p class="Body1">Generally, the actual length of the filter <i>p </i>&lt;&lt; <i>N</i>. In this case, zero-pad the p-point filter sequence out to a vector of length <i>N</i>. That is, append (<i>N</i>-<i>p</i>) zeroes to the end of the filter.</p>
        <p class="Parameter">t</p>
        <p class="Body1">Points to a temporary buffer of the same data type and size as filter.</p>
        <p class="Parameter">scale</p>
        <p class="Body1">Points to a scalar value that uniformly scales the time domain filter input sequence and, equivalently, the convolution. The convolution will be scaled by 1/N for a <code>NULL </code>pointer value.</p>
        <p class="Parameter">log2N</p>
        <p class="Body1">The base 2 exponent of the length of the fast convolution. For example, to process 1024 elements, specify 10 for parameter <i>log2N</i>.</p>
        <p class="Parameter">f</p>
        <p class="Body1">Specifies the direction of the FFT that transforms the time domain sequence, with two allowed values: </p>
        <ul>
            <li class="BulletIndent" value="1"><code>FFT_FORWARD </code>for a forward transform </li>
            <li class="BulletIndent" value="2"><code>FFT_INVERSE </code>for an inverse</li>
        </ul>
        <p class="Body1">The transform direction controls whether the function computes a circular fast convolution or a correlation.</p>
        <p class="Body1">Using the <code>FFT_INVERSE </code>flag in the fast convolution SAL routines might not seem to make sense, especially when applied to real convolutions. When used in the SAL FFT routines, <code>FFT_INVERSE </code>is typically specified when performing an inverse FFT on a data sequence that resulted from a prior call to a forward (<code>FFT_FORWARD</code>) FFT.</p>
        <p class="Body1">For a “real” FFT, this data sequence is in a <i>special format</i> that takes advantage of the known symmetry properties of the real data sequence forward FFT output. For information on this format, see <a href="../../CH02 - Transform Functions/SAL_FFTs.htm" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>SAL Fast Fourier Transforms</i></span></a>.</p>
        <p class="Body1">Therefore, the SAL real FFT routines do not allow the caller to perform an inverse FFT on a strictly real data sequence. Instead, when <code>FFT_INVERSE </code>is specified to a real FFT routine, the input sequence is assumed to be in the <i>special format</i>, which is generally complex.</p>
        <p class="Body1">However, the real sequence’s inverse FFT is mathematically equivalent to the sequence’s forward FFT complex conjugate. This is the actual interpretation of the <code>FFT_INVERSE </code>flag when specified to the fast convolution routines.</p>
        <p class="RelatedTopics" MadCap:autonum="Related Topics"><span class="autonumber"><span>Related Topics</span></span>&#160;</p>
        <p class="Body"><a href="../../CH02 - Transform Functions/SAL_CCFs.htm" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>SAL Convolution and Correlation Functions</i></span></a>
        </p>
        <p class="Body"><a href="../../CH02 - Transform Functions/SAL_FFTs.htm" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>SAL Fast Fourier Transforms</i></span></a>
        </p>
        <p class="RelatedFunctions" MadCap:autonum="Related Functions"><span class="autonumber"><span>Related Functions</span></span>&#160;</p>
        <p class="Body"><a href="Fast Convolution Correlation.htm#fcs_ciptx" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>fcs_ciptx(), fcs_riptx(), fcs_ziptx(), fcs_zriptx()</i></span></a>
        </p>
        <p class="Body"><a href="FCC Multi Signal Xforms - Single Filter.htm#fcsm_ciptx" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>fcsm_ciptx(), fcsm_riptx(), fcsm_ziptx(), fcsm_zriptx()</i></span></a>
        </p>
        <p class="Body"><a href="../../CH11 - Functions - FFTs/Setup/Create Complex Exponentials for 1D FFTs.htm#fft1d_setup" target="" title="" alt="" class="MCXref_See_NoPrefix" MadCap:conditions="Default.ScreenOnly"><span style="color: DarkBlue;" class="mcFormatColor"><i>fft1d_setup(), fft1d_setupd()</i></span></a>&#160;</p>
        <script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js">
        </script><iframe id="topiccomments" name="topiccomments" title="Topic Comments" src="../../../Skin/TopicComments.htm" frameborder="0" style="width: 100%; height: 0px; margin-top: 12px;"></iframe>
    </body>
</html>